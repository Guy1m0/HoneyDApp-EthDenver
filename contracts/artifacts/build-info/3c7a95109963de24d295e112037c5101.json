{
	"id": "3c7a95109963de24d295e112037c5101",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TF_erc20.sol": {
				"content": "pragma solidity ^0.4.24;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see `ERC20Detailed`.\n */\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        //require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, \"SafeMath: division by zero\");\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n}\n\n/**\n * @dev Implementation of the `IERC20` interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using `_mint`.\n * For a generic mechanism see `ERC20Mintable`.\n *\n * *For a detailed writeup see our guide [How to implement supply\n * mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).*\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See `IERC20.approve`.\n */\ncontract TF is IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    // NOTE Start of https://github.com/OpenZeppelin/openzeppelin-solidity/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\n    string private _name = \"zTrustFund\";\n    string private _symbol = \"zTF\";\n    uint8 private _decimals = 18;\n\n    constructor (address _contract) public {\n\n        _mint(_contract, 1000000000 * 10 ** uint256(_decimals)); // CAUTION!\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei.\n     *\n     * > Note that this information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * `IERC20.balanceOf` and `IERC20.transfer`.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n    // NOTE End of https://github.com/OpenZeppelin/openzeppelin-solidity/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\n\n    uint256 private _totalSupply;\n\n    /**\n     * @dev See `IERC20.totalSupply`.\n     */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See `IERC20.balanceOf`.\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See `IERC20.transfer`.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See `IERC20.allowance`.\n     */\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See `IERC20.approve`.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See `IERC20.transferFrom`.\n     *\n     * Emits an `Approval` event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of `ERC20`;\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `value`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to `approve` that can be used as a mitigation for\n     * problems described in `IERC20.approve`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to `approve` that can be used as a mitigation for\n     * problems described in `IERC20.approve`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to `transfer`, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a `Transfer` event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount);\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a `Transfer` event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n     /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a `Transfer` event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an `Approval` event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    /**\n     * @dev Destoys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See `_burn` and `_approve`.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount));\n    }\n    \n    function approveTest(address spender, uint256 value) public returns (address, address, uint256) {\n        _allowances[msg.sender][spender] = value;\n        return (msg.sender, spender, _allowances[msg.sender][spender]);\n    \n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/TF_erc20.sol": {
				"IERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/TF_erc20.sol\":850:3790  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TF_erc20.sol\":850:3790  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820da1bd847f073ebf8c5c3205bfd70700584277608d62acc98bd76033869a39f940029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820da1bd847f073ebf8c5c3205bfd70700584277608d62acc98bd76033869a39f940029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xda SHL 0xd8 0x47 CREATE PUSH20 0xEBF8C5C3205BFD70700584277608D62ACC98BD76 SUB CODESIZE PUSH10 0xA39F9400290000000000 ",
							"sourceMap": "850:2940:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820da1bd847f073ebf8c5c3205bfd70700584277608d62acc98bd76033869a39f940029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xda SHL 0xd8 0x47 CREATE PUSH20 0xEBF8C5C3205BFD70700584277608D62ACC98BD76 SUB CODESIZE PUSH10 0xA39F9400290000000000 ",
							"sourceMap": "850:2940:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 850,
									"end": 3790,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 850,
									"end": 3790,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820da1bd847f073ebf8c5c3205bfd70700584277608d62acc98bd76033869a39f940029",
									".code": [
										{
											"begin": 850,
											"end": 3790,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 850,
											"end": 3790,
											"name": "ADDRESS"
										},
										{
											"begin": 850,
											"end": 3790,
											"name": "EQ"
										},
										{
											"begin": 850,
											"end": 3790,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 850,
											"end": 3790,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 850,
											"end": 3790,
											"name": "MSTORE"
										},
										{
											"begin": 850,
											"end": 3790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 850,
											"end": 3790,
											"name": "DUP1"
										},
										{
											"begin": 850,
											"end": 3790,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/TF_erc20.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TF_erc20.sol\":{\"keccak256\":\"0xd07642835d16081d732d6aa1bb682484dfc22f10cdf560a05f25d71666536360\",\"urls\":[\"bzzr://0f764f8ba43e4e521c632a24445c1b73b5498430b797392108b3b31765a9783d\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"TF": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveTest",
							"outputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_contract",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See `IERC20.allowance`."
							},
							"approve(address,uint256)": {
								"details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See `IERC20.balanceOf`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See `IERC20.totalSupply`."
							},
							"transfer(address,uint256)": {
								"details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/TF_erc20.sol\":4941:13231  contract TF is IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TF_erc20.sol\":5258:5293  string private _name = \"zTrustFund\" */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  0xa\n  dup2\n  mstore\n  0x20\n  add\n  0x7a547275737446756e6400000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_1\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_2)\ntag_1:\n  pop\n    /* \"contracts/TF_erc20.sol\":5299:5329  string private _symbol = \"zTF\" */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  0x3\n  dup2\n  mstore\n  0x20\n  add\n  0x7a54460000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x3\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_3\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_2)\ntag_3:\n  pop\n    /* \"contracts/TF_erc20.sol\":5361:5363  18 */\n  0x12\n    /* \"contracts/TF_erc20.sol\":5335:5363  uint8 private _decimals = 18 */\n  0x4\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TF_erc20.sol\":5370:5494  constructor (address _contract) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_4:\n    /* \"contracts/TF_erc20.sol\":5370:5494  constructor (address _contract) public {... */\n  pop\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/TF_erc20.sol\":5420:5475  _mint(_contract, 1000000000 * 10 ** uint256(_decimals)) */\n  tag_7\n    /* \"contracts/TF_erc20.sol\":5426:5435  _contract */\n  dup2\n    /* \"contracts/TF_erc20.sol\":5464:5473  _decimals */\n  0x4\n  0x0\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/TF_erc20.sol\":5456:5474  uint256(_decimals) */\n  0xff\n  and\n    /* \"contracts/TF_erc20.sol\":5450:5452  10 */\n  0xa\n    /* \"contracts/TF_erc20.sol\":5450:5474  10 ** uint256(_decimals) */\n  exp\n    /* \"contracts/TF_erc20.sol\":5437:5447  1000000000 */\n  0x3b9aca00\n    /* \"contracts/TF_erc20.sol\":5437:5474  1000000000 * 10 ** uint256(_decimals) */\n  mul\n    /* \"contracts/TF_erc20.sol\":5420:5425  _mint */\n  mul(0x100000000, tag_8)\n    /* \"contracts/TF_erc20.sol\":5420:5475  _mint(_contract, 1000000000 * 10 ** uint256(_decimals)) */\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_7:\n    /* \"contracts/TF_erc20.sol\":5370:5494  constructor (address _contract) public {... */\n  pop\n    /* \"contracts/TF_erc20.sol\":4941:13231  contract TF is IERC20 {... */\n  jump(tag_9)\n    /* \"contracts/TF_erc20.sol\":10951:11253  function _mint(address account, uint256 amount) internal {... */\ntag_8:\n    /* \"contracts/TF_erc20.sol\":11045:11046  0 */\n  0x0\n    /* \"contracts/TF_erc20.sol\":11026:11047  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/TF_erc20.sol\":11026:11033  account */\n  dup3\n    /* \"contracts/TF_erc20.sol\":11026:11047  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/TF_erc20.sol\":11018:11083  require(account != address(0), \"ERC20: mint to the zero address\") */\n  iszero\n  iszero\n  tag_11\n  jumpi\n  mload(0x40)\n  0x8c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x4\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1f\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"contracts/TF_erc20.sol\":11109:11133  _totalSupply.add(amount) */\n  tag_12\n    /* \"contracts/TF_erc20.sol\":11126:11132  amount */\n  dup2\n    /* \"contracts/TF_erc20.sol\":11109:11121  _totalSupply */\n  sload(0x5)\n    /* \"contracts/TF_erc20.sol\":11109:11125  _totalSupply.add */\n  or(tag_0_76, mul(0x100000000, tag_13))\n  swap1\n    /* \"contracts/TF_erc20.sol\":11109:11133  _totalSupply.add(amount) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_12:\n    /* \"contracts/TF_erc20.sol\":11094:11106  _totalSupply */\n  0x5\n    /* \"contracts/TF_erc20.sol\":11094:11133  _totalSupply = _totalSupply.add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TF_erc20.sol\":11164:11194  _balances[account].add(amount) */\n  tag_14\n    /* \"contracts/TF_erc20.sol\":11187:11193  amount */\n  dup2\n    /* \"contracts/TF_erc20.sol\":11164:11173  _balances */\n  0x0\n    /* \"contracts/TF_erc20.sol\":11164:11182  _balances[account] */\n  dup1\n    /* \"contracts/TF_erc20.sol\":11174:11181  account */\n  dup6\n    /* \"contracts/TF_erc20.sol\":11164:11182  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n  sload\n    /* \"contracts/TF_erc20.sol\":11164:11186  _balances[account].add */\n  or(tag_0_76, mul(0x100000000, tag_13))\n  swap1\n    /* \"contracts/TF_erc20.sol\":11164:11194  _balances[account].add(amount) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_14:\n    /* \"contracts/TF_erc20.sol\":11143:11152  _balances */\n  0x0\n    /* \"contracts/TF_erc20.sol\":11143:11161  _balances[account] */\n  dup1\n    /* \"contracts/TF_erc20.sol\":11153:11160  account */\n  dup5\n    /* \"contracts/TF_erc20.sol\":11143:11161  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"contracts/TF_erc20.sol\":11143:11194  _balances[account] = _balances[account].add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TF_erc20.sol\":11230:11237  account */\n  dup2\n    /* \"contracts/TF_erc20.sol\":11209:11246  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/TF_erc20.sol\":11226:11227  0 */\n  0x0\n    /* \"contracts/TF_erc20.sol\":11209:11246  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/TF_erc20.sol\":11239:11245  amount */\n  dup4\n    /* \"contracts/TF_erc20.sol\":11209:11246  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/TF_erc20.sol\":10951:11253  function _mint(address account, uint256 amount) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/TF_erc20.sol\":1095:1271  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_13:\n    /* \"contracts/TF_erc20.sol\":1153:1160  uint256 */\n  0x0\n    /* \"contracts/TF_erc20.sol\":1172:1181  uint256 c */\n  dup1\n    /* \"contracts/TF_erc20.sol\":1188:1189  b */\n  dup3\n    /* \"contracts/TF_erc20.sol\":1184:1185  a */\n  dup5\n    /* \"contracts/TF_erc20.sol\":1184:1189  a + b */\n  add\n    /* \"contracts/TF_erc20.sol\":1172:1189  uint256 c = a + b */\n  swap1\n  pop\n    /* \"contracts/TF_erc20.sol\":1212:1213  a */\n  dup4\n    /* \"contracts/TF_erc20.sol\":1207:1208  c */\n  dup2\n    /* \"contracts/TF_erc20.sol\":1207:1213  c >= a */\n  lt\n  iszero\n    /* \"contracts/TF_erc20.sol\":1199:1245  require(c >= a, \"SafeMath: addition overflow\") */\n  iszero\n  iszero\n  tag_16\n  jumpi\n  mload(0x40)\n  0x8c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x4\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1b\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n    /* \"contracts/TF_erc20.sol\":1263:1264  c */\n  dup1\n    /* \"contracts/TF_erc20.sol\":1256:1264  return c */\n  swap2\n  pop\n    /* \"contracts/TF_erc20.sol\":1095:1271  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  pop\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/TF_erc20.sol\":4941:13231  contract TF is IERC20 {... */\ntag_2:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_18\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_17)\ntag_18:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_17\n  jumpi\n  swap2\n  dup3\n  add\ntag_19:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_20\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_19)\ntag_20:\ntag_17:\n  pop\n  swap1\n  pop\n  tag_21\n  swap2\n  swap1\n  jump\t// in(tag_22)\ntag_21:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  tag_23\n  swap2\n  swap1\ntag_24:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_25\n  jumpi\n  0x0\n  dup2\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_24)\ntag_25:\n  pop\n  swap1\n  jump\ntag_23:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TF_erc20.sol\":4941:13231  contract TF is IERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x6fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa25fb97a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/TF_erc20.sol\":5559:5640  function name() public view returns (string memory) {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_14:\n        /* \"contracts/TF_erc20.sol\":5559:5640  function name() public view returns (string memory) {... */\n      pop\n      tag_15\n      jump(tag_16)\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_17:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_17)\n    tag_18:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/TF_erc20.sol\":5559:5640  function name() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":7633:7778  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_21:\n        /* \"contracts/TF_erc20.sol\":7633:7778  function approve(address spender, uint256 value) public returns (bool) {... */\n      pop\n      tag_22\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_23)\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":6694:6783  function totalSupply() public view returns (uint256) {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n        /* \"contracts/TF_erc20.sol\":6694:6783  function totalSupply() public view returns (uint256) {... */\n      pop\n      tag_25\n      jump(tag_26)\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":8235:8487  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"contracts/TF_erc20.sol\":8235:8487  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      pop\n      tag_28\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_29)\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":6393:6474  function decimals() public view returns (uint8) {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_30:\n        /* \"contracts/TF_erc20.sol\":6393:6474  function decimals() public view returns (uint8) {... */\n      pop\n      tag_31\n      jump(tag_32)\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":8882:9085  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_33:\n        /* \"contracts/TF_erc20.sol\":8882:9085  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      pop\n      tag_34\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_35)\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":6841:6949  function balanceOf(address account) public view returns (uint256) {... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_36:\n        /* \"contracts/TF_erc20.sol\":6841:6949  function balanceOf(address account) public view returns (uint256) {... */\n      pop\n      tag_37\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_38)\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":5753:5838  function symbol() public view returns (string memory) {... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_39:\n        /* \"contracts/TF_erc20.sol\":5753:5838  function symbol() public view returns (string memory) {... */\n      pop\n      tag_40\n      jump(tag_41)\n    tag_40:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_42:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_42)\n    tag_43:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/TF_erc20.sol\":5753:5838  function symbol() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_45\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_45:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":12999:13229  function approveTest(address spender, uint256 value) public returns (address, address, uint256) {... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_46:\n        /* \"contracts/TF_erc20.sol\":12999:13229  function approveTest(address spender, uint256 value) public returns (address, address, uint256) {... */\n      pop\n      tag_47\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_48)\n    tag_47:\n      mload(0x40)\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":9572:9785  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_49:\n        /* \"contracts/TF_erc20.sol\":9572:9785  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      pop\n      tag_50\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_51)\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":7152:7305  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_52:\n        /* \"contracts/TF_erc20.sol\":7152:7305  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      pop\n      tag_53\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_54)\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":7363:7495  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_55:\n        /* \"contracts/TF_erc20.sol\":7363:7495  function allowance(address owner, address spender) public view returns (uint256) {... */\n      pop\n      tag_56\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_57)\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":5559:5640  function name() public view returns (string memory) {... */\n    tag_16:\n        /* \"contracts/TF_erc20.sol\":5596:5602  string */\n      0x60\n        /* \"contracts/TF_erc20.sol\":5628:5633  _name */\n      0x2\n        /* \"contracts/TF_erc20.sol\":5621:5633  return _name */\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_59\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_60\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_59)\n    tag_60:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_61:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_61\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":5559:5640  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":7633:7778  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_23:\n        /* \"contracts/TF_erc20.sol\":7698:7702  bool */\n      0x0\n        /* \"contracts/TF_erc20.sol\":7714:7750  _approve(msg.sender, spender, value) */\n      tag_63\n        /* \"contracts/TF_erc20.sol\":7723:7733  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":7735:7742  spender */\n      dup5\n        /* \"contracts/TF_erc20.sol\":7744:7749  value */\n      dup5\n        /* \"contracts/TF_erc20.sol\":7714:7722  _approve */\n      tag_64\n        /* \"contracts/TF_erc20.sol\":7714:7750  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_63:\n        /* \"contracts/TF_erc20.sol\":7767:7771  true */\n      0x1\n        /* \"contracts/TF_erc20.sol\":7760:7771  return true */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":7633:7778  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":6694:6783  function totalSupply() public view returns (uint256) {... */\n    tag_26:\n        /* \"contracts/TF_erc20.sol\":6738:6745  uint256 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":6764:6776  _totalSupply */\n      sload(0x5)\n        /* \"contracts/TF_erc20.sol\":6757:6776  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":6694:6783  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":8235:8487  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_29:\n        /* \"contracts/TF_erc20.sol\":8324:8328  bool */\n      0x0\n        /* \"contracts/TF_erc20.sol\":8340:8376  _transfer(sender, recipient, amount) */\n      tag_67\n        /* \"contracts/TF_erc20.sol\":8350:8356  sender */\n      dup5\n        /* \"contracts/TF_erc20.sol\":8358:8367  recipient */\n      dup5\n        /* \"contracts/TF_erc20.sol\":8369:8375  amount */\n      dup5\n        /* \"contracts/TF_erc20.sol\":8340:8349  _transfer */\n      tag_68\n        /* \"contracts/TF_erc20.sol\":8340:8376  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_67:\n        /* \"contracts/TF_erc20.sol\":8386:8459  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      tag_69\n        /* \"contracts/TF_erc20.sol\":8395:8401  sender */\n      dup5\n        /* \"contracts/TF_erc20.sol\":8403:8413  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":8415:8458  _allowances[sender][msg.sender].sub(amount) */\n      tag_70\n        /* \"contracts/TF_erc20.sol\":8451:8457  amount */\n      dup6\n        /* \"contracts/TF_erc20.sol\":8415:8426  _allowances */\n      0x1\n        /* \"contracts/TF_erc20.sol\":8415:8434  _allowances[sender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":8427:8433  sender */\n      dup11\n        /* \"contracts/TF_erc20.sol\":8415:8434  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":8415:8446  _allowances[sender][msg.sender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":8435:8445  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":8415:8446  _allowances[sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TF_erc20.sol\":8415:8450  _allowances[sender][msg.sender].sub */\n      tag_71\n      swap1\n        /* \"contracts/TF_erc20.sol\":8415:8458  _allowances[sender][msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"contracts/TF_erc20.sol\":8386:8394  _approve */\n      tag_64\n        /* \"contracts/TF_erc20.sol\":8386:8459  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      jump\t// in\n    tag_69:\n        /* \"contracts/TF_erc20.sol\":8476:8480  true */\n      0x1\n        /* \"contracts/TF_erc20.sol\":8469:8480  return true */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":8235:8487  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":6393:6474  function decimals() public view returns (uint8) {... */\n    tag_32:\n        /* \"contracts/TF_erc20.sol\":6434:6439  uint8 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":6458:6467  _decimals */\n      0x4\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TF_erc20.sol\":6451:6467  return _decimals */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":6393:6474  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":8882:9085  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_35:\n        /* \"contracts/TF_erc20.sol\":8962:8966  bool */\n      0x0\n        /* \"contracts/TF_erc20.sol\":8978:9057  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      tag_74\n        /* \"contracts/TF_erc20.sol\":8987:8997  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":8999:9006  spender */\n      dup5\n        /* \"contracts/TF_erc20.sol\":9008:9056  _allowances[msg.sender][spender].add(addedValue) */\n      tag_75\n        /* \"contracts/TF_erc20.sol\":9045:9055  addedValue */\n      dup6\n        /* \"contracts/TF_erc20.sol\":9008:9019  _allowances */\n      0x1\n        /* \"contracts/TF_erc20.sol\":9008:9031  _allowances[msg.sender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":9020:9030  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":9008:9031  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":9008:9040  _allowances[msg.sender][spender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":9032:9039  spender */\n      dup10\n        /* \"contracts/TF_erc20.sol\":9008:9040  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TF_erc20.sol\":9008:9044  _allowances[msg.sender][spender].add */\n      tag_76\n      swap1\n        /* \"contracts/TF_erc20.sol\":9008:9056  _allowances[msg.sender][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_75:\n        /* \"contracts/TF_erc20.sol\":8978:8986  _approve */\n      tag_64\n        /* \"contracts/TF_erc20.sol\":8978:9057  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      jump\t// in\n    tag_74:\n        /* \"contracts/TF_erc20.sol\":9074:9078  true */\n      0x1\n        /* \"contracts/TF_erc20.sol\":9067:9078  return true */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":8882:9085  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":6841:6949  function balanceOf(address account) public view returns (uint256) {... */\n    tag_38:\n        /* \"contracts/TF_erc20.sol\":6898:6905  uint256 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":6924:6933  _balances */\n      dup1\n        /* \"contracts/TF_erc20.sol\":6924:6942  _balances[account] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":6934:6941  account */\n      dup4\n        /* \"contracts/TF_erc20.sol\":6924:6942  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TF_erc20.sol\":6917:6942  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":6841:6949  function balanceOf(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":5753:5838  function symbol() public view returns (string memory) {... */\n    tag_41:\n        /* \"contracts/TF_erc20.sol\":5792:5798  string */\n      0x60\n        /* \"contracts/TF_erc20.sol\":5824:5831  _symbol */\n      0x3\n        /* \"contracts/TF_erc20.sol\":5817:5831  return _symbol */\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":5753:5838  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":12999:13229  function approveTest(address spender, uint256 value) public returns (address, address, uint256) {... */\n    tag_48:\n        /* \"contracts/TF_erc20.sol\":13068:13075  address */\n      0x0\n        /* \"contracts/TF_erc20.sol\":13077:13084  address */\n      dup1\n        /* \"contracts/TF_erc20.sol\":13086:13093  uint256 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":13140:13145  value */\n      dup4\n        /* \"contracts/TF_erc20.sol\":13105:13116  _allowances */\n      0x1\n        /* \"contracts/TF_erc20.sol\":13105:13128  _allowances[msg.sender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":13117:13127  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":13105:13128  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":13105:13137  _allowances[msg.sender][spender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":13129:13136  spender */\n      dup8\n        /* \"contracts/TF_erc20.sol\":13105:13137  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":13105:13145  _allowances[msg.sender][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TF_erc20.sol\":13163:13173  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":13175:13182  spender */\n      dup6\n        /* \"contracts/TF_erc20.sol\":13184:13195  _allowances */\n      0x1\n        /* \"contracts/TF_erc20.sol\":13184:13207  _allowances[msg.sender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":13196:13206  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":13184:13207  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":13184:13216  _allowances[msg.sender][spender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":13208:13215  spender */\n      dup9\n        /* \"contracts/TF_erc20.sol\":13184:13216  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TF_erc20.sol\":13155:13217  return (msg.sender, spender, _allowances[msg.sender][spender]) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/TF_erc20.sol\":12999:13229  function approveTest(address spender, uint256 value) public returns (address, address, uint256) {... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":9572:9785  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_51:\n        /* \"contracts/TF_erc20.sol\":9657:9661  bool */\n      0x0\n        /* \"contracts/TF_erc20.sol\":9673:9757  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      tag_84\n        /* \"contracts/TF_erc20.sol\":9682:9692  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":9694:9701  spender */\n      dup5\n        /* \"contracts/TF_erc20.sol\":9703:9756  _allowances[msg.sender][spender].sub(subtractedValue) */\n      tag_85\n        /* \"contracts/TF_erc20.sol\":9740:9755  subtractedValue */\n      dup6\n        /* \"contracts/TF_erc20.sol\":9703:9714  _allowances */\n      0x1\n        /* \"contracts/TF_erc20.sol\":9703:9726  _allowances[msg.sender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":9715:9725  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":9703:9726  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":9703:9735  _allowances[msg.sender][spender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":9727:9734  spender */\n      dup10\n        /* \"contracts/TF_erc20.sol\":9703:9735  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TF_erc20.sol\":9703:9739  _allowances[msg.sender][spender].sub */\n      tag_71\n      swap1\n        /* \"contracts/TF_erc20.sol\":9703:9756  _allowances[msg.sender][spender].sub(subtractedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"contracts/TF_erc20.sol\":9673:9681  _approve */\n      tag_64\n        /* \"contracts/TF_erc20.sol\":9673:9757  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      jump\t// in\n    tag_84:\n        /* \"contracts/TF_erc20.sol\":9774:9778  true */\n      0x1\n        /* \"contracts/TF_erc20.sol\":9767:9778  return true */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":9572:9785  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":7152:7305  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_54:\n        /* \"contracts/TF_erc20.sol\":7221:7225  bool */\n      0x0\n        /* \"contracts/TF_erc20.sol\":7237:7277  _transfer(msg.sender, recipient, amount) */\n      tag_87\n        /* \"contracts/TF_erc20.sol\":7247:7257  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":7259:7268  recipient */\n      dup5\n        /* \"contracts/TF_erc20.sol\":7270:7276  amount */\n      dup5\n        /* \"contracts/TF_erc20.sol\":7237:7246  _transfer */\n      tag_68\n        /* \"contracts/TF_erc20.sol\":7237:7277  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_87:\n        /* \"contracts/TF_erc20.sol\":7294:7298  true */\n      0x1\n        /* \"contracts/TF_erc20.sol\":7287:7298  return true */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":7152:7305  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":7363:7495  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_57:\n        /* \"contracts/TF_erc20.sol\":7435:7442  uint256 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":7461:7472  _allowances */\n      0x1\n        /* \"contracts/TF_erc20.sol\":7461:7479  _allowances[owner] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":7473:7478  owner */\n      dup5\n        /* \"contracts/TF_erc20.sol\":7461:7479  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":7461:7488  _allowances[owner][spender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":7480:7487  spender */\n      dup4\n        /* \"contracts/TF_erc20.sol\":7461:7488  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TF_erc20.sol\":7454:7488  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":7363:7495  function allowance(address owner, address spender) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":12298:12627  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_64:\n        /* \"contracts/TF_erc20.sol\":12407:12408  0 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":12390:12409  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TF_erc20.sol\":12390:12395  owner */\n      dup4\n        /* \"contracts/TF_erc20.sol\":12390:12409  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TF_erc20.sol\":12382:12450  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      iszero\n      iszero\n      tag_90\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n      dup2\n      mstore\n      0x20\n      add\n      0x7265737300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"contracts/TF_erc20.sol\":12487:12488  0 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":12468:12489  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TF_erc20.sol\":12468:12475  spender */\n      dup3\n        /* \"contracts/TF_erc20.sol\":12468:12489  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TF_erc20.sol\":12460:12528  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      iszero\n      iszero\n      tag_91\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n      dup2\n      mstore\n      0x20\n      add\n      0x7373000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"contracts/TF_erc20.sol\":12569:12574  value */\n      dup1\n        /* \"contracts/TF_erc20.sol\":12539:12550  _allowances */\n      0x1\n        /* \"contracts/TF_erc20.sol\":12539:12557  _allowances[owner] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":12551:12556  owner */\n      dup6\n        /* \"contracts/TF_erc20.sol\":12539:12557  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":12539:12566  _allowances[owner][spender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":12558:12565  spender */\n      dup5\n        /* \"contracts/TF_erc20.sol\":12539:12566  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":12539:12574  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TF_erc20.sol\":12605:12612  spender */\n      dup2\n        /* \"contracts/TF_erc20.sol\":12589:12620  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TF_erc20.sol\":12598:12603  owner */\n      dup4\n        /* \"contracts/TF_erc20.sol\":12589:12620  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/TF_erc20.sol\":12614:12619  value */\n      dup4\n        /* \"contracts/TF_erc20.sol\":12589:12620  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TF_erc20.sol\":12298:12627  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":10259:10681  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_68:\n        /* \"contracts/TF_erc20.sol\":10374:10375  0 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":10356:10376  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TF_erc20.sol\":10356:10362  sender */\n      dup4\n        /* \"contracts/TF_erc20.sol\":10356:10376  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TF_erc20.sol\":10348:10418  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      iszero\n      iszero\n      tag_93\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n      dup2\n      mstore\n      0x20\n      add\n      0x6472657373000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"contracts/TF_erc20.sol\":10457:10458  0 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":10436:10459  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TF_erc20.sol\":10436:10445  recipient */\n      dup3\n        /* \"contracts/TF_erc20.sol\":10436:10459  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TF_erc20.sol\":10428:10499  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      iszero\n      iszero\n      tag_94\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n      dup2\n      mstore\n      0x20\n      add\n      0x6573730000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"contracts/TF_erc20.sol\":10530:10559  _balances[sender].sub(amount) */\n      tag_95\n        /* \"contracts/TF_erc20.sol\":10552:10558  amount */\n      dup2\n        /* \"contracts/TF_erc20.sol\":10530:10539  _balances */\n      0x0\n        /* \"contracts/TF_erc20.sol\":10530:10547  _balances[sender] */\n      dup1\n        /* \"contracts/TF_erc20.sol\":10540:10546  sender */\n      dup7\n        /* \"contracts/TF_erc20.sol\":10530:10547  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TF_erc20.sol\":10530:10551  _balances[sender].sub */\n      tag_71\n      swap1\n        /* \"contracts/TF_erc20.sol\":10530:10559  _balances[sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_95:\n        /* \"contracts/TF_erc20.sol\":10510:10519  _balances */\n      0x0\n        /* \"contracts/TF_erc20.sol\":10510:10527  _balances[sender] */\n      dup1\n        /* \"contracts/TF_erc20.sol\":10520:10526  sender */\n      dup6\n        /* \"contracts/TF_erc20.sol\":10510:10527  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":10510:10559  _balances[sender] = _balances[sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TF_erc20.sol\":10592:10624  _balances[recipient].add(amount) */\n      tag_96\n        /* \"contracts/TF_erc20.sol\":10617:10623  amount */\n      dup2\n        /* \"contracts/TF_erc20.sol\":10592:10601  _balances */\n      0x0\n        /* \"contracts/TF_erc20.sol\":10592:10612  _balances[recipient] */\n      dup1\n        /* \"contracts/TF_erc20.sol\":10602:10611  recipient */\n      dup6\n        /* \"contracts/TF_erc20.sol\":10592:10612  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TF_erc20.sol\":10592:10616  _balances[recipient].add */\n      tag_76\n      swap1\n        /* \"contracts/TF_erc20.sol\":10592:10624  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"contracts/TF_erc20.sol\":10569:10578  _balances */\n      0x0\n        /* \"contracts/TF_erc20.sol\":10569:10589  _balances[recipient] */\n      dup1\n        /* \"contracts/TF_erc20.sol\":10579:10588  recipient */\n      dup5\n        /* \"contracts/TF_erc20.sol\":10569:10589  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":10569:10624  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TF_erc20.sol\":10656:10665  recipient */\n      dup2\n        /* \"contracts/TF_erc20.sol\":10639:10674  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TF_erc20.sol\":10648:10654  sender */\n      dup4\n        /* \"contracts/TF_erc20.sol\":10639:10674  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/TF_erc20.sol\":10667:10673  amount */\n      dup4\n        /* \"contracts/TF_erc20.sol\":10639:10674  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TF_erc20.sol\":10259:10681  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":1535:1716  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_71:\n        /* \"contracts/TF_erc20.sol\":1593:1600  uint256 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":1673:1682  uint256 c */\n      dup1\n        /* \"contracts/TF_erc20.sol\":1689:1690  b */\n      dup3\n        /* \"contracts/TF_erc20.sol\":1685:1686  a */\n      dup5\n        /* \"contracts/TF_erc20.sol\":1685:1690  a - b */\n      sub\n        /* \"contracts/TF_erc20.sol\":1673:1690  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":1708:1709  c */\n      dup1\n        /* \"contracts/TF_erc20.sol\":1701:1709  return c */\n      swap2\n      pop\n        /* \"contracts/TF_erc20.sol\":1535:1716  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":1095:1271  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"contracts/TF_erc20.sol\":1153:1160  uint256 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":1172:1181  uint256 c */\n      dup1\n        /* \"contracts/TF_erc20.sol\":1188:1189  b */\n      dup3\n        /* \"contracts/TF_erc20.sol\":1184:1185  a */\n      dup5\n        /* \"contracts/TF_erc20.sol\":1184:1189  a + b */\n      add\n        /* \"contracts/TF_erc20.sol\":1172:1189  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":1212:1213  a */\n      dup4\n        /* \"contracts/TF_erc20.sol\":1207:1208  c */\n      dup2\n        /* \"contracts/TF_erc20.sol\":1207:1213  c >= a */\n      lt\n      iszero\n        /* \"contracts/TF_erc20.sol\":1199:1245  require(c >= a, \"SafeMath: addition overflow\") */\n      iszero\n      iszero\n      tag_99\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/TF_erc20.sol\":1263:1264  c */\n      dup1\n        /* \"contracts/TF_erc20.sol\":1256:1264  return c */\n      swap2\n      pop\n        /* \"contracts/TF_erc20.sol\":1095:1271  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582071b7cfa86647c47553457817d47a88ef94f05d5ee8bf01836f9ae79556b3fbb90029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526040805190810160405280600a81526020017f7a547275737446756e6400000000000000000000000000000000000000000000815250600290805190602001906200005192919062000393565b506040805190810160405280600381526020017f7a54460000000000000000000000000000000000000000000000000000000000815250600390805190602001906200009f92919062000393565b506012600460006101000a81548160ff021916908360ff160217905550348015620000c957600080fd5b5060405160208062001619833981018060405281019080805190602001909291905050506200012381600460009054906101000a900460ff1660ff16600a0a633b9aca00026200012a640100000000026401000000009004565b5062000442565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515620001d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b620001f581600554620003086401000000000262001111179091906401000000009004565b6005819055506200025c816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620003086401000000000262001111179091906401000000009004565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600080828401905083811015151562000389576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003d657805160ff191683800117855562000407565b8280016001018555821562000407579182015b8281111562000406578251825591602001919060010190620003e9565b5b5090506200041691906200041a565b5090565b6200043f91905b808211156200043b57600081600090555060010162000421565b5090565b90565b6111c780620004526000396000f3006080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100bf578063095ea7b31461014f57806318160ddd146101b457806323b872dd146101df578063313ce56714610264578063395093511461029557806370a08231146102fa57806395d89b4114610351578063a25fb97a146103e1578063a457c2d7146104a8578063a9059cbb1461050d578063dd62ed3e14610572575b600080fd5b3480156100cb57600080fd5b506100d46105e9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101145780820151818401526020810190506100f9565b50505050905090810190601f1680156101415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015b57600080fd5b5061019a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061068b565b604051808215151515815260200191505060405180910390f35b3480156101c057600080fd5b506101c96106a2565b6040518082815260200191505060405180910390f35b3480156101eb57600080fd5b5061024a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106ac565b604051808215151515815260200191505060405180910390f35b34801561027057600080fd5b5061027961075d565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102a157600080fd5b506102e0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610774565b604051808215151515815260200191505060405180910390f35b34801561030657600080fd5b5061033b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610819565b6040518082815260200191505060405180910390f35b34801561035d57600080fd5b50610366610861565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103a657808201518184015260208101905061038b565b50505050905090810190601f1680156103d35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103ed57600080fd5b5061042c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610903565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b3480156104b457600080fd5b506104f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a15565b604051808215151515815260200191505060405180910390f35b34801561051957600080fd5b50610558600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aba565b604051808215151515815260200191505060405180910390f35b34801561057e57600080fd5b506105d3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ad1565b6040518082815260200191505060405180910390f35b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106815780601f1061065657610100808354040283529160200191610681565b820191906000526020600020905b81548152906001019060200180831161066457829003601f168201915b5050505050905090565b6000610698338484610b58565b6001905092915050565b6000600554905090565b60006106b9848484610dd9565b610752843361074d85600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ff90919063ffffffff16565b610b58565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600061080f338461080a85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461111190919063ffffffff16565b610b58565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108f95780601f106108ce576101008083540402835291602001916108f9565b820191906000526020600020905b8154815290600101906020018083116108dc57829003601f168201915b5050505050905090565b600080600083600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503385600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549250925092509250925092565b6000610ab03384610aab85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ff90919063ffffffff16565b610b58565b6001905092915050565b6000610ac7338484610dd9565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610c23576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481526020017f726573730000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610cee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f45524332303a20617070726f766520746f20746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610ea4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f45524332303a207472616e736665722066726f6d20746865207a65726f20616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610f6f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f45524332303a207472616e7366657220746f20746865207a65726f206164647281526020017f657373000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b610fc0816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ff90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611053816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461111190919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008082840390508091505092915050565b6000808284019050838110151515611191576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b80915050929150505600a165627a7a7230582071b7cfa86647c47553457817d47a88ef94f05d5ee8bf01836f9ae79556b3fbb90029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7A547275737446756E6400000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x51 SWAP3 SWAP2 SWAP1 PUSH3 0x393 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7A54460000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x9F SWAP3 SWAP2 SWAP1 PUSH3 0x393 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH3 0x1619 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH3 0x123 DUP2 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xA EXP PUSH4 0x3B9ACA00 MUL PUSH3 0x12A PUSH5 0x100000000 MUL PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST POP PUSH3 0x442 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH3 0x1D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1F5 DUP2 PUSH1 0x5 SLOAD PUSH3 0x308 PUSH5 0x100000000 MUL PUSH3 0x1111 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH3 0x25C DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH3 0x308 PUSH5 0x100000000 MUL PUSH3 0x1111 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH3 0x389 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x3D6 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x407 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x407 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x406 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3E9 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x416 SWAP2 SWAP1 PUSH3 0x41A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x43F SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x43B JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x421 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x11C7 DUP1 PUSH3 0x452 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBA JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xA25FB97A EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x572 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x114 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x141 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x366 PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x38B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3D3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x903 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x558 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x681 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x656 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x681 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x664 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x698 CALLER DUP5 DUP5 PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B9 DUP5 DUP5 DUP5 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x752 DUP5 CALLER PUSH2 0x74D DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80F CALLER DUP5 PUSH2 0x80A DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1111 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x8F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB0 CALLER DUP5 PUSH2 0xAAB DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC7 CALLER DUP5 DUP5 PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xF6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC0 DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1053 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1111 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1191 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH18 0xB7CFA86647C47553457817D47A88EF94F05D 0x5e 0xe8 0xbf ADD DUP4 PUSH16 0x9AE79556B3FBB9002900000000000000 ",
							"sourceMap": "4941:8290:0:-;;;5258:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5299:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5361:2;5335:28;;;;;;;;;;;;;;;;;;;;5370:124;8:9:-1;5:2;;;30:1;27;20:12;5:2;5370:124:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5420:55;5426:9;5464;;;;;;;;;;;5456:18;;5450:2;:24;5437:10;:37;5420:5;;;:55;;;:::i;:::-;5370:124;4941:8290;;10951:302;11045:1;11026:21;;:7;:21;;;;11018:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11109:24;11126:6;11109:12;;:16;;;;;;:24;;;;;:::i;:::-;11094:12;:39;;;;11164:30;11187:6;11164:9;:18;11174:7;11164:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;;:::i;:::-;11143:9;:18;11153:7;11143:18;;;;;;;;;;;;;;;:51;;;;11230:7;11209:37;;11226:1;11209:37;;;11239:6;11209:37;;;;;;;;;;;;;;;;;;10951:302;;:::o;1095:176::-;1153:7;1172:9;1188:1;1184;:5;1172:17;;1212:1;1207;:6;;1199:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1263:1;1256:8;;1095:176;;;;;:::o;4941:8290::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100bf578063095ea7b31461014f57806318160ddd146101b457806323b872dd146101df578063313ce56714610264578063395093511461029557806370a08231146102fa57806395d89b4114610351578063a25fb97a146103e1578063a457c2d7146104a8578063a9059cbb1461050d578063dd62ed3e14610572575b600080fd5b3480156100cb57600080fd5b506100d46105e9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101145780820151818401526020810190506100f9565b50505050905090810190601f1680156101415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015b57600080fd5b5061019a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061068b565b604051808215151515815260200191505060405180910390f35b3480156101c057600080fd5b506101c96106a2565b6040518082815260200191505060405180910390f35b3480156101eb57600080fd5b5061024a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106ac565b604051808215151515815260200191505060405180910390f35b34801561027057600080fd5b5061027961075d565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102a157600080fd5b506102e0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610774565b604051808215151515815260200191505060405180910390f35b34801561030657600080fd5b5061033b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610819565b6040518082815260200191505060405180910390f35b34801561035d57600080fd5b50610366610861565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103a657808201518184015260208101905061038b565b50505050905090810190601f1680156103d35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103ed57600080fd5b5061042c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610903565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b3480156104b457600080fd5b506104f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a15565b604051808215151515815260200191505060405180910390f35b34801561051957600080fd5b50610558600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aba565b604051808215151515815260200191505060405180910390f35b34801561057e57600080fd5b506105d3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ad1565b6040518082815260200191505060405180910390f35b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106815780601f1061065657610100808354040283529160200191610681565b820191906000526020600020905b81548152906001019060200180831161066457829003601f168201915b5050505050905090565b6000610698338484610b58565b6001905092915050565b6000600554905090565b60006106b9848484610dd9565b610752843361074d85600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ff90919063ffffffff16565b610b58565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600061080f338461080a85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461111190919063ffffffff16565b610b58565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108f95780601f106108ce576101008083540402835291602001916108f9565b820191906000526020600020905b8154815290600101906020018083116108dc57829003601f168201915b5050505050905090565b600080600083600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503385600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549250925092509250925092565b6000610ab03384610aab85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ff90919063ffffffff16565b610b58565b6001905092915050565b6000610ac7338484610dd9565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610c23576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481526020017f726573730000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610cee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f45524332303a20617070726f766520746f20746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610ea4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f45524332303a207472616e736665722066726f6d20746865207a65726f20616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610f6f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f45524332303a207472616e7366657220746f20746865207a65726f206164647281526020017f657373000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b610fc0816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ff90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611053816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461111190919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008082840390508091505092915050565b6000808284019050838110151515611191576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b80915050929150505600a165627a7a7230582071b7cfa86647c47553457817d47a88ef94f05d5ee8bf01836f9ae79556b3fbb90029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBA JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xA25FB97A EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x572 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x114 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x141 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x366 PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x38B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3D3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x903 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x558 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x681 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x656 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x681 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x664 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x698 CALLER DUP5 DUP5 PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B9 DUP5 DUP5 DUP5 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x752 DUP5 CALLER PUSH2 0x74D DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80F CALLER DUP5 PUSH2 0x80A DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1111 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x8F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB0 CALLER DUP5 PUSH2 0xAAB DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC7 CALLER DUP5 DUP5 PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xF6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC0 DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1053 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1111 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1191 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH18 0xB7CFA86647C47553457817D47A88EF94F05D 0x5e 0xe8 0xbf ADD DUP4 PUSH16 0x9AE79556B3FBB9002900000000000000 ",
							"sourceMap": "4941:8290:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5559:81;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5559:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5559:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7633:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7633:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6694:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6694:89:0;;;;;;;;;;;;;;;;;;;;;;;8235:252;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8235:252:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6393:81;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6393:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;8882:203;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8882:203:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6841:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6841:108:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5753:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5753:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5753:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12999:230;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12999:230:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9572:213;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9572:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7152:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7152:153:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7363:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7363:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5559:81;5596:6;5628:5;5621:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5559:81;:::o;7633:145::-;7698:4;7714:36;7723:10;7735:7;7744:5;7714:8;:36::i;:::-;7767:4;7760:11;;7633:145;;;;:::o;6694:89::-;6738:7;6764:12;;6757:19;;6694:89;:::o;8235:252::-;8324:4;8340:36;8350:6;8358:9;8369:6;8340:9;:36::i;:::-;8386:73;8395:6;8403:10;8415:43;8451:6;8415:11;:19;8427:6;8415:19;;;;;;;;;;;;;;;:31;8435:10;8415:31;;;;;;;;;;;;;;;;:35;;:43;;;;:::i;:::-;8386:8;:73::i;:::-;8476:4;8469:11;;8235:252;;;;;:::o;6393:81::-;6434:5;6458:9;;;;;;;;;;;6451:16;;6393:81;:::o;8882:203::-;8962:4;8978:79;8987:10;8999:7;9008:48;9045:10;9008:11;:23;9020:10;9008:23;;;;;;;;;;;;;;;:32;9032:7;9008:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;8978:8;:79::i;:::-;9074:4;9067:11;;8882:203;;;;:::o;6841:108::-;6898:7;6924:9;:18;6934:7;6924:18;;;;;;;;;;;;;;;;6917:25;;6841:108;;;:::o;5753:85::-;5792:6;5824:7;5817:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5753:85;:::o;12999:230::-;13068:7;13077;13086;13140:5;13105:11;:23;13117:10;13105:23;;;;;;;;;;;;;;;:32;13129:7;13105:32;;;;;;;;;;;;;;;:40;;;;13163:10;13175:7;13184:11;:23;13196:10;13184:23;;;;;;;;;;;;;;;:32;13208:7;13184:32;;;;;;;;;;;;;;;;13155:62;;;;;;12999:230;;;;;:::o;9572:213::-;9657:4;9673:84;9682:10;9694:7;9703:53;9740:15;9703:11;:23;9715:10;9703:23;;;;;;;;;;;;;;;:32;9727:7;9703:32;;;;;;;;;;;;;;;;:36;;:53;;;;:::i;:::-;9673:8;:84::i;:::-;9774:4;9767:11;;9572:213;;;;:::o;7152:153::-;7221:4;7237:40;7247:10;7259:9;7270:6;7237:9;:40::i;:::-;7294:4;7287:11;;7152:153;;;;:::o;7363:132::-;7435:7;7461:11;:18;7473:5;7461:18;;;;;;;;;;;;;;;:27;7480:7;7461:27;;;;;;;;;;;;;;;;7454:34;;7363:132;;;;:::o;12298:329::-;12407:1;12390:19;;:5;:19;;;;12382:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12487:1;12468:21;;:7;:21;;;;12460:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12569:5;12539:11;:18;12551:5;12539:18;;;;;;;;;;;;;;;:27;12558:7;12539:27;;;;;;;;;;;;;;;:35;;;;12605:7;12589:31;;12598:5;12589:31;;;12614:5;12589:31;;;;;;;;;;;;;;;;;;12298:329;;;:::o;10259:422::-;10374:1;10356:20;;:6;:20;;;;10348:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10457:1;10436:23;;:9;:23;;;;10428:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10530:29;10552:6;10530:9;:17;10540:6;10530:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;10510:9;:17;10520:6;10510:17;;;;;;;;;;;;;;;:49;;;;10592:32;10617:6;10592:9;:20;10602:9;10592:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;10569:9;:20;10579:9;10569:20;;;;;;;;;;;;;;;:55;;;;10656:9;10639:35;;10648:6;10639:35;;;10667:6;10639:35;;;;;;;;;;;;;;;;;;10259:422;;;:::o;1535:181::-;1593:7;1673:9;1689:1;1685;:5;1673:17;;1708:1;1701:8;;1535:181;;;;;:::o;1095:176::-;1153:7;1172:9;1188:1;1184;:5;1172:17;;1212:1;1207;:6;;1199:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1263:1;1256:8;;1095:176;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "910200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "926",
								"approve(address,uint256)": "22481",
								"approveTest(address,uint256)": "21134",
								"balanceOf(address)": "691",
								"decimals()": "538",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "446",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "MSTORE"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "DUP1"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "MLOAD"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "SWAP1"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "DUP2"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "ADD"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "MSTORE"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "DUP1"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "DUP2"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "MSTORE"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "ADD"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "PUSH",
									"value": "7A547275737446756E6400000000000000000000000000000000000000000000"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "DUP2"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "MSTORE"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "POP"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "SWAP1"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "DUP1"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "MLOAD"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "SWAP1"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "ADD"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "SWAP1"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "SWAP3"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "SWAP2"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "SWAP1"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "JUMPDEST"
								},
								{
									"begin": 5258,
									"end": 5293,
									"name": "POP"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "DUP1"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "MLOAD"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "SWAP1"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "DUP2"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "ADD"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "MSTORE"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "DUP1"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "DUP2"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "MSTORE"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "ADD"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "PUSH",
									"value": "7A54460000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "DUP2"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "MSTORE"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "POP"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "SWAP1"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "DUP1"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "MLOAD"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "SWAP1"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "ADD"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "SWAP1"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "SWAP3"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "SWAP2"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "SWAP1"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "JUMPDEST"
								},
								{
									"begin": 5299,
									"end": 5329,
									"name": "POP"
								},
								{
									"begin": 5361,
									"end": 5363,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "EXP"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "DUP2"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "SLOAD"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "DUP2"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "MUL"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "NOT"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "AND"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "SWAP1"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "DUP4"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "AND"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "MUL"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "OR"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "SWAP1"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "SSTORE"
								},
								{
									"begin": 5335,
									"end": 5363,
									"name": "POP"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "POP"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "MLOAD"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "DUP1"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "PUSHSIZE"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "DUP4"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "CODECOPY"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "DUP2"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "ADD"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "DUP1"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "MSTORE"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "DUP2"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "ADD"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "SWAP1"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "DUP1"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "DUP1"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "MLOAD"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "SWAP1"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "ADD"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "SWAP1"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "SWAP3"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "SWAP2"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "SWAP1"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "POP"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "POP"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "POP"
								},
								{
									"begin": 5420,
									"end": 5475,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 5426,
									"end": 5435,
									"name": "DUP2"
								},
								{
									"begin": 5464,
									"end": 5473,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 5464,
									"end": 5473,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5464,
									"end": 5473,
									"name": "SWAP1"
								},
								{
									"begin": 5464,
									"end": 5473,
									"name": "SLOAD"
								},
								{
									"begin": 5464,
									"end": 5473,
									"name": "SWAP1"
								},
								{
									"begin": 5464,
									"end": 5473,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 5464,
									"end": 5473,
									"name": "EXP"
								},
								{
									"begin": 5464,
									"end": 5473,
									"name": "SWAP1"
								},
								{
									"begin": 5464,
									"end": 5473,
									"name": "DIV"
								},
								{
									"begin": 5464,
									"end": 5473,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 5464,
									"end": 5473,
									"name": "AND"
								},
								{
									"begin": 5456,
									"end": 5474,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 5456,
									"end": 5474,
									"name": "AND"
								},
								{
									"begin": 5450,
									"end": 5452,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 5450,
									"end": 5474,
									"name": "EXP"
								},
								{
									"begin": 5437,
									"end": 5447,
									"name": "PUSH",
									"value": "3B9ACA00"
								},
								{
									"begin": 5437,
									"end": 5474,
									"name": "MUL"
								},
								{
									"begin": 5420,
									"end": 5425,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 5420,
									"end": 5425,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 5420,
									"end": 5425,
									"name": "MUL"
								},
								{
									"begin": 5420,
									"end": 5475,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 5420,
									"end": 5475,
									"name": "SWAP1"
								},
								{
									"begin": 5420,
									"end": 5475,
									"name": "DIV"
								},
								{
									"begin": 5420,
									"end": 5475,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 5420,
									"end": 5475,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 5420,
									"end": 5475,
									"name": "JUMPDEST"
								},
								{
									"begin": 5370,
									"end": 5494,
									"name": "POP"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMP"
								},
								{
									"begin": 10951,
									"end": 11253,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 10951,
									"end": 11253,
									"name": "JUMPDEST"
								},
								{
									"begin": 11045,
									"end": 11046,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11026,
									"end": 11047,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11026,
									"end": 11047,
									"name": "AND"
								},
								{
									"begin": 11026,
									"end": 11033,
									"name": "DUP3"
								},
								{
									"begin": 11026,
									"end": 11047,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11026,
									"end": 11047,
									"name": "AND"
								},
								{
									"begin": 11026,
									"end": 11047,
									"name": "EQ"
								},
								{
									"begin": 11026,
									"end": 11047,
									"name": "ISZERO"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "ISZERO"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "ISZERO"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "JUMPI"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "MLOAD"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "DUP2"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "MSTORE"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "ADD"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "DUP1"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "DUP1"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "ADD"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "DUP3"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "DUP2"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "SUB"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "DUP3"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "MSTORE"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "DUP2"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "MSTORE"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "ADD"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "DUP1"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "PUSH",
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "DUP2"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "MSTORE"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "POP"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "ADD"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "SWAP2"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "POP"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "POP"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "MLOAD"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "DUP1"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "SWAP2"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "SUB"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "SWAP1"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "REVERT"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 11018,
									"end": 11083,
									"name": "JUMPDEST"
								},
								{
									"begin": 11109,
									"end": 11133,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 11126,
									"end": 11132,
									"name": "DUP2"
								},
								{
									"begin": 11109,
									"end": 11121,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11109,
									"end": 11121,
									"name": "SLOAD"
								},
								{
									"begin": 11109,
									"end": 11125,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 11109,
									"end": 11125,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 11109,
									"end": 11125,
									"name": "MUL"
								},
								{
									"begin": 11109,
									"end": 11125,
									"name": "PUSH [tag]",
									"value": "18446744073709551692"
								},
								{
									"begin": 11109,
									"end": 11125,
									"name": "OR"
								},
								{
									"begin": 11109,
									"end": 11125,
									"name": "SWAP1"
								},
								{
									"begin": 11109,
									"end": 11133,
									"name": "SWAP2"
								},
								{
									"begin": 11109,
									"end": 11133,
									"name": "SWAP1"
								},
								{
									"begin": 11109,
									"end": 11133,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 11109,
									"end": 11133,
									"name": "SWAP1"
								},
								{
									"begin": 11109,
									"end": 11133,
									"name": "DIV"
								},
								{
									"begin": 11109,
									"end": 11133,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11109,
									"end": 11133,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 11109,
									"end": 11133,
									"name": "JUMPDEST"
								},
								{
									"begin": 11094,
									"end": 11106,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11094,
									"end": 11133,
									"name": "DUP2"
								},
								{
									"begin": 11094,
									"end": 11133,
									"name": "SWAP1"
								},
								{
									"begin": 11094,
									"end": 11133,
									"name": "SSTORE"
								},
								{
									"begin": 11094,
									"end": 11133,
									"name": "POP"
								},
								{
									"begin": 11164,
									"end": 11194,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 11187,
									"end": 11193,
									"name": "DUP2"
								},
								{
									"begin": 11164,
									"end": 11173,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11164,
									"end": 11182,
									"name": "DUP1"
								},
								{
									"begin": 11174,
									"end": 11181,
									"name": "DUP6"
								},
								{
									"begin": 11164,
									"end": 11182,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11164,
									"end": 11182,
									"name": "AND"
								},
								{
									"begin": 11164,
									"end": 11182,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11164,
									"end": 11182,
									"name": "AND"
								},
								{
									"begin": 11164,
									"end": 11182,
									"name": "DUP2"
								},
								{
									"begin": 11164,
									"end": 11182,
									"name": "MSTORE"
								},
								{
									"begin": 11164,
									"end": 11182,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11164,
									"end": 11182,
									"name": "ADD"
								},
								{
									"begin": 11164,
									"end": 11182,
									"name": "SWAP1"
								},
								{
									"begin": 11164,
									"end": 11182,
									"name": "DUP2"
								},
								{
									"begin": 11164,
									"end": 11182,
									"name": "MSTORE"
								},
								{
									"begin": 11164,
									"end": 11182,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11164,
									"end": 11182,
									"name": "ADD"
								},
								{
									"begin": 11164,
									"end": 11182,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11164,
									"end": 11182,
									"name": "KECCAK256"
								},
								{
									"begin": 11164,
									"end": 11182,
									"name": "SLOAD"
								},
								{
									"begin": 11164,
									"end": 11186,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 11164,
									"end": 11186,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 11164,
									"end": 11186,
									"name": "MUL"
								},
								{
									"begin": 11164,
									"end": 11186,
									"name": "PUSH [tag]",
									"value": "18446744073709551692"
								},
								{
									"begin": 11164,
									"end": 11186,
									"name": "OR"
								},
								{
									"begin": 11164,
									"end": 11186,
									"name": "SWAP1"
								},
								{
									"begin": 11164,
									"end": 11194,
									"name": "SWAP2"
								},
								{
									"begin": 11164,
									"end": 11194,
									"name": "SWAP1"
								},
								{
									"begin": 11164,
									"end": 11194,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 11164,
									"end": 11194,
									"name": "SWAP1"
								},
								{
									"begin": 11164,
									"end": 11194,
									"name": "DIV"
								},
								{
									"begin": 11164,
									"end": 11194,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11164,
									"end": 11194,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 11164,
									"end": 11194,
									"name": "JUMPDEST"
								},
								{
									"begin": 11143,
									"end": 11152,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11143,
									"end": 11161,
									"name": "DUP1"
								},
								{
									"begin": 11153,
									"end": 11160,
									"name": "DUP5"
								},
								{
									"begin": 11143,
									"end": 11161,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11143,
									"end": 11161,
									"name": "AND"
								},
								{
									"begin": 11143,
									"end": 11161,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11143,
									"end": 11161,
									"name": "AND"
								},
								{
									"begin": 11143,
									"end": 11161,
									"name": "DUP2"
								},
								{
									"begin": 11143,
									"end": 11161,
									"name": "MSTORE"
								},
								{
									"begin": 11143,
									"end": 11161,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11143,
									"end": 11161,
									"name": "ADD"
								},
								{
									"begin": 11143,
									"end": 11161,
									"name": "SWAP1"
								},
								{
									"begin": 11143,
									"end": 11161,
									"name": "DUP2"
								},
								{
									"begin": 11143,
									"end": 11161,
									"name": "MSTORE"
								},
								{
									"begin": 11143,
									"end": 11161,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11143,
									"end": 11161,
									"name": "ADD"
								},
								{
									"begin": 11143,
									"end": 11161,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11143,
									"end": 11161,
									"name": "KECCAK256"
								},
								{
									"begin": 11143,
									"end": 11194,
									"name": "DUP2"
								},
								{
									"begin": 11143,
									"end": 11194,
									"name": "SWAP1"
								},
								{
									"begin": 11143,
									"end": 11194,
									"name": "SSTORE"
								},
								{
									"begin": 11143,
									"end": 11194,
									"name": "POP"
								},
								{
									"begin": 11230,
									"end": 11237,
									"name": "DUP2"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "AND"
								},
								{
									"begin": 11226,
									"end": 11227,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "AND"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11239,
									"end": 11245,
									"name": "DUP4"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "MLOAD"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "DUP1"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "DUP3"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "DUP2"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "MSTORE"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "ADD"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "SWAP2"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "POP"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "POP"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "MLOAD"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "DUP1"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "SWAP2"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "SUB"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "SWAP1"
								},
								{
									"begin": 11209,
									"end": 11246,
									"name": "LOG3"
								},
								{
									"begin": 10951,
									"end": 11253,
									"name": "POP"
								},
								{
									"begin": 10951,
									"end": 11253,
									"name": "POP"
								},
								{
									"begin": 10951,
									"end": 11253,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 1095,
									"end": 1271,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 1095,
									"end": 1271,
									"name": "JUMPDEST"
								},
								{
									"begin": 1153,
									"end": 1160,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1172,
									"end": 1181,
									"name": "DUP1"
								},
								{
									"begin": 1188,
									"end": 1189,
									"name": "DUP3"
								},
								{
									"begin": 1184,
									"end": 1185,
									"name": "DUP5"
								},
								{
									"begin": 1184,
									"end": 1189,
									"name": "ADD"
								},
								{
									"begin": 1172,
									"end": 1189,
									"name": "SWAP1"
								},
								{
									"begin": 1172,
									"end": 1189,
									"name": "POP"
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "DUP4"
								},
								{
									"begin": 1207,
									"end": 1208,
									"name": "DUP2"
								},
								{
									"begin": 1207,
									"end": 1213,
									"name": "LT"
								},
								{
									"begin": 1207,
									"end": 1213,
									"name": "ISZERO"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "ISZERO"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "ISZERO"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "JUMPI"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "MLOAD"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP2"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "MSTORE"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "ADD"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP1"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP1"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "ADD"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP3"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP2"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "SUB"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP3"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "MSTORE"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH",
									"value": "1B"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP2"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "MSTORE"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "ADD"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP1"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH",
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP2"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "MSTORE"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "POP"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "ADD"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "SWAP2"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "POP"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "POP"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "MLOAD"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP1"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "SWAP2"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "SUB"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "SWAP1"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "REVERT"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "JUMPDEST"
								},
								{
									"begin": 1263,
									"end": 1264,
									"name": "DUP1"
								},
								{
									"begin": 1256,
									"end": 1264,
									"name": "SWAP2"
								},
								{
									"begin": 1256,
									"end": 1264,
									"name": "POP"
								},
								{
									"begin": 1095,
									"end": 1271,
									"name": "POP"
								},
								{
									"begin": 1095,
									"end": 1271,
									"name": "SWAP3"
								},
								{
									"begin": 1095,
									"end": 1271,
									"name": "SWAP2"
								},
								{
									"begin": 1095,
									"end": 1271,
									"name": "POP"
								},
								{
									"begin": 1095,
									"end": 1271,
									"name": "POP"
								},
								{
									"begin": 1095,
									"end": 1271,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMPDEST"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP3"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SLOAD"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP2"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "AND"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "ISZERO"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "MUL"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SUB"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "AND"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SWAP1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DIV"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SWAP1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "MSTORE"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "KECCAK256"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SWAP1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "ADD"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SWAP1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DIV"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP2"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "ADD"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SWAP3"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP3"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "LT"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMPI"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "MLOAD"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "NOT"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "AND"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP4"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "ADD"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "OR"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP6"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SSTORE"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMP"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMPDEST"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP3"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "ADD"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "ADD"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP6"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SSTORE"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP3"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "ISZERO"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMPI"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SWAP2"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP3"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "ADD"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMPDEST"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP3"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP2"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "GT"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "ISZERO"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMPI"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP3"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "MLOAD"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP3"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SSTORE"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SWAP2"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "ADD"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SWAP2"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SWAP1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "ADD"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SWAP1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMP"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMPDEST"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMPDEST"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "POP"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SWAP1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "POP"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SWAP2"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SWAP1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMPDEST"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "POP"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SWAP1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMPDEST"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SWAP2"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SWAP1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "tag",
									"value": "24"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMPDEST"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP3"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "GT"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "ISZERO"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH [tag]",
									"value": "25"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMPI"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP2"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SWAP1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SSTORE"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "POP"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "ADD"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH [tag]",
									"value": "24"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMP"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "tag",
									"value": "25"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMPDEST"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "POP"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SWAP1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMP"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMPDEST"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "SWAP1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "JUMPDEST"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "DUP1"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "CODECOPY"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4941,
									"end": 13231,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582071b7cfa86647c47553457817d47a88ef94f05d5ee8bf01836f9ae79556b3fbb90029",
									".code": [
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "MSTORE"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "LT"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "JUMPI"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "SWAP1"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "DIV"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "AND"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "DUP1"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "EQ"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "JUMPI"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "DUP1"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "EQ"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "JUMPI"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "DUP1"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "EQ"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "JUMPI"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "DUP1"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "EQ"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "JUMPI"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "DUP1"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "EQ"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "JUMPI"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "DUP1"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "EQ"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "JUMPI"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "DUP1"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "EQ"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "JUMPI"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "DUP1"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "EQ"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "JUMPI"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "DUP1"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH",
											"value": "A25FB97A"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "EQ"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "JUMPI"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "DUP1"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "EQ"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "JUMPI"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "DUP1"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "EQ"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "JUMPI"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "DUP1"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "EQ"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "JUMPI"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "JUMPDEST"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "DUP1"
										},
										{
											"begin": 4941,
											"end": 13231,
											"name": "REVERT"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "JUMPDEST"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "POP"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "JUMP"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "JUMPDEST"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "MLOAD"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP1"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP1"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "ADD"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP3"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP2"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "SUB"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP3"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "MSTORE"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP4"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP2"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP2"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "MLOAD"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP2"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "MSTORE"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "ADD"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "SWAP2"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "POP"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP1"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "MLOAD"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "SWAP1"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "ADD"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "SWAP1"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP1"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP4"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "POP"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "POP"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "POP"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "SWAP1"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "POP"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "SWAP1"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP2"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "ADD"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "SWAP1"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "AND"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP1"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "ISZERO"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "JUMPI"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP1"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP3"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "SUB"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP1"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "MLOAD"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP4"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "SUB"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "EXP"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "SUB"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "NOT"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "AND"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP2"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "MSTORE"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "ADD"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "SWAP2"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "POP"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "JUMPDEST"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "POP"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "SWAP3"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "POP"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "POP"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "POP"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "MLOAD"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "DUP1"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "SWAP2"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "SUB"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "SWAP1"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "RETURN"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "JUMPDEST"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "POP"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "DUP1"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "SUB"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "DUP2"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "ADD"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "SWAP1"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "DUP1"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "DUP1"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "AND"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "SWAP1"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "ADD"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "SWAP1"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "SWAP3"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "SWAP2"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "SWAP1"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "DUP1"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "SWAP1"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "ADD"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "SWAP1"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "SWAP3"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "SWAP2"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "SWAP1"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "POP"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "POP"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "POP"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "JUMP"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "JUMPDEST"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "MLOAD"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "DUP1"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "DUP3"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "ISZERO"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "ISZERO"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "ISZERO"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "ISZERO"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "DUP2"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "MSTORE"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "ADD"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "SWAP2"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "POP"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "POP"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "MLOAD"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "DUP1"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "SWAP2"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "SUB"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "SWAP1"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "RETURN"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "JUMPDEST"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "POP"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "JUMP"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "JUMPDEST"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "MLOAD"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "DUP1"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "DUP3"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "DUP2"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "MSTORE"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "ADD"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "SWAP2"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "POP"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "POP"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "MLOAD"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "DUP1"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "SWAP2"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "SUB"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "SWAP1"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "RETURN"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "JUMPDEST"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "POP"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "DUP1"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SUB"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "DUP2"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "ADD"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP1"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "DUP1"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "DUP1"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "AND"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP1"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "ADD"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP1"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP3"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP2"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP1"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "DUP1"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "AND"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP1"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "ADD"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP1"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP3"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP2"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP1"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "DUP1"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP1"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "ADD"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP1"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP3"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP2"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP1"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "POP"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "POP"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "POP"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "JUMP"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "JUMPDEST"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "MLOAD"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "DUP1"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "DUP3"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "ISZERO"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "ISZERO"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "ISZERO"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "ISZERO"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "DUP2"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "MSTORE"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "ADD"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP2"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "POP"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "POP"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "MLOAD"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "DUP1"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP2"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SUB"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP1"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "RETURN"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "JUMPDEST"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "POP"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "JUMP"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "JUMPDEST"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "MLOAD"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "DUP1"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "DUP3"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "AND"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "AND"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "DUP2"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "MSTORE"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "ADD"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "SWAP2"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "POP"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "POP"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "MLOAD"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "DUP1"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "SWAP2"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "SUB"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "SWAP1"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "RETURN"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "JUMPDEST"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "POP"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "DUP1"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "SUB"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "DUP2"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "ADD"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "SWAP1"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "DUP1"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "DUP1"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "AND"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "SWAP1"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "ADD"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "SWAP1"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "SWAP3"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "SWAP2"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "SWAP1"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "DUP1"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "SWAP1"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "ADD"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "SWAP1"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "SWAP3"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "SWAP2"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "SWAP1"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "POP"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "POP"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "POP"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "JUMP"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "JUMPDEST"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "MLOAD"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "DUP1"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "DUP3"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "ISZERO"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "ISZERO"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "ISZERO"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "ISZERO"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "DUP2"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "MSTORE"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "ADD"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "SWAP2"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "POP"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "POP"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "MLOAD"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "DUP1"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "SWAP2"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "SUB"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "SWAP1"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "RETURN"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "JUMPDEST"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "POP"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "DUP1"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "SUB"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "DUP2"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "ADD"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "SWAP1"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "DUP1"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "DUP1"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "AND"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "SWAP1"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "ADD"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "SWAP1"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "SWAP3"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "SWAP2"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "SWAP1"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "POP"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "POP"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "POP"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "JUMP"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "JUMPDEST"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "MLOAD"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "DUP1"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "DUP3"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "DUP2"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "MSTORE"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "ADD"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "SWAP2"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "POP"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "POP"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "MLOAD"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "DUP1"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "SWAP2"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "SUB"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "SWAP1"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "RETURN"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "JUMPDEST"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "POP"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "JUMP"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "JUMPDEST"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "MLOAD"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP1"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP1"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "ADD"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP3"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP2"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "SUB"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP3"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "MSTORE"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP4"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP2"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP2"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "MLOAD"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP2"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "MSTORE"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "ADD"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "SWAP2"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "POP"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP1"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "MLOAD"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "SWAP1"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "ADD"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "SWAP1"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP1"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP4"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "POP"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "POP"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "POP"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "SWAP1"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "POP"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "SWAP1"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP2"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "ADD"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "SWAP1"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "AND"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP1"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "ISZERO"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "JUMPI"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP1"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP3"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "SUB"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP1"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "MLOAD"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP4"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "SUB"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "EXP"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "SUB"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "NOT"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "AND"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP2"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "MSTORE"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "ADD"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "SWAP2"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "POP"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "JUMPDEST"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "POP"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "SWAP3"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "POP"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "POP"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "POP"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "MLOAD"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "DUP1"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "SWAP2"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "SUB"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "SWAP1"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "RETURN"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "JUMPDEST"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "DUP1"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "SUB"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "DUP2"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "ADD"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "DUP1"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "DUP1"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "AND"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "ADD"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "SWAP3"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "SWAP2"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "DUP1"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "ADD"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "SWAP3"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "SWAP2"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "JUMP"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "JUMPDEST"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "MLOAD"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "DUP1"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "DUP5"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "AND"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "AND"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "DUP2"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "MSTORE"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "ADD"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "DUP4"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "AND"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "AND"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "DUP2"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "MSTORE"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "ADD"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "DUP3"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "DUP2"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "MSTORE"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "ADD"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "SWAP4"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "MLOAD"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "DUP1"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "SWAP2"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "SUB"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "SWAP1"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "RETURN"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "JUMPDEST"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "POP"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "DUP1"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "SUB"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "DUP2"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "ADD"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "SWAP1"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "DUP1"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "DUP1"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "AND"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "SWAP1"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "ADD"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "SWAP1"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "SWAP3"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "SWAP2"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "SWAP1"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "DUP1"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "SWAP1"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "ADD"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "SWAP1"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "SWAP3"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "SWAP2"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "SWAP1"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "POP"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "POP"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "POP"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "JUMP"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "JUMPDEST"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "MLOAD"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "DUP1"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "DUP3"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "ISZERO"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "ISZERO"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "ISZERO"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "ISZERO"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "DUP2"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "MSTORE"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "ADD"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "SWAP2"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "POP"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "POP"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "MLOAD"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "DUP1"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "SWAP2"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "SUB"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "SWAP1"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "RETURN"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "JUMPDEST"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "POP"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "DUP1"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "SUB"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "DUP2"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "ADD"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "DUP1"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "DUP1"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "AND"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "ADD"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "SWAP3"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "SWAP2"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "DUP1"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "ADD"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "SWAP3"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "SWAP2"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "POP"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "POP"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "POP"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "JUMP"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "JUMPDEST"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "MLOAD"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "DUP1"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "DUP3"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "ISZERO"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "ISZERO"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "ISZERO"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "ISZERO"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "DUP2"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "MSTORE"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "ADD"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "SWAP2"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "POP"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "POP"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "MLOAD"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "DUP1"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "SWAP2"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "SUB"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "SWAP1"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "RETURN"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "JUMPDEST"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "POP"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "DUP1"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "SUB"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "DUP2"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "ADD"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "SWAP1"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "DUP1"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "DUP1"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "AND"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "SWAP1"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "ADD"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "SWAP1"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "SWAP3"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "SWAP2"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "SWAP1"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "DUP1"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "AND"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "SWAP1"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "ADD"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "SWAP1"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "SWAP3"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "SWAP2"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "SWAP1"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "POP"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "POP"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "POP"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "JUMP"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "JUMPDEST"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "MLOAD"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "DUP1"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "DUP3"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "DUP2"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "MSTORE"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "ADD"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "SWAP2"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "POP"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "POP"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "MLOAD"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "DUP1"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "SWAP2"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "SUB"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "SWAP1"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "RETURN"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "JUMPDEST"
										},
										{
											"begin": 5596,
											"end": 5602,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5628,
											"end": 5633,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SLOAD"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP2"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "AND"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "ISZERO"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "MUL"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SUB"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "AND"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SWAP1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DIV"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "ADD"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SWAP2"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DIV"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "MUL"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "ADD"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "MLOAD"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SWAP1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP2"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "ADD"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "MSTORE"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SWAP3"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SWAP2"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SWAP1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP2"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP2"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "MSTORE"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "ADD"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP3"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SLOAD"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP2"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "AND"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "ISZERO"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "MUL"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SUB"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "AND"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SWAP1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DIV"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "ISZERO"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "JUMPI"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "LT"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "JUMPI"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP4"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SLOAD"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DIV"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "MUL"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP4"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "MSTORE"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SWAP2"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "ADD"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SWAP2"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "JUMP"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "JUMPDEST"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP3"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "ADD"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SWAP2"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SWAP1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "MSTORE"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "KECCAK256"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SWAP1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "JUMPDEST"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP2"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SLOAD"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP2"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "MSTORE"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SWAP1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "ADD"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SWAP1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "ADD"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP4"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "GT"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "JUMPI"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP3"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SWAP1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SUB"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "AND"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "DUP3"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "ADD"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SWAP2"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "JUMPDEST"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "POP"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "POP"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "POP"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "POP"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "POP"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "SWAP1"
										},
										{
											"begin": 5621,
											"end": 5633,
											"name": "POP"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "SWAP1"
										},
										{
											"begin": 5559,
											"end": 5640,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "JUMPDEST"
										},
										{
											"begin": 7698,
											"end": 7702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7714,
											"end": 7750,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 7723,
											"end": 7733,
											"name": "CALLER"
										},
										{
											"begin": 7735,
											"end": 7742,
											"name": "DUP5"
										},
										{
											"begin": 7744,
											"end": 7749,
											"name": "DUP5"
										},
										{
											"begin": 7714,
											"end": 7722,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 7714,
											"end": 7750,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7714,
											"end": 7750,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 7714,
											"end": 7750,
											"name": "JUMPDEST"
										},
										{
											"begin": 7767,
											"end": 7771,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7760,
											"end": 7771,
											"name": "SWAP1"
										},
										{
											"begin": 7760,
											"end": 7771,
											"name": "POP"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "SWAP3"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "SWAP2"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "POP"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "POP"
										},
										{
											"begin": 7633,
											"end": 7778,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "JUMPDEST"
										},
										{
											"begin": 6738,
											"end": 6745,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6764,
											"end": 6776,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6764,
											"end": 6776,
											"name": "SLOAD"
										},
										{
											"begin": 6757,
											"end": 6776,
											"name": "SWAP1"
										},
										{
											"begin": 6757,
											"end": 6776,
											"name": "POP"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "SWAP1"
										},
										{
											"begin": 6694,
											"end": 6783,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "JUMPDEST"
										},
										{
											"begin": 8324,
											"end": 8328,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8340,
											"end": 8376,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 8350,
											"end": 8356,
											"name": "DUP5"
										},
										{
											"begin": 8358,
											"end": 8367,
											"name": "DUP5"
										},
										{
											"begin": 8369,
											"end": 8375,
											"name": "DUP5"
										},
										{
											"begin": 8340,
											"end": 8349,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 8340,
											"end": 8376,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8340,
											"end": 8376,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 8340,
											"end": 8376,
											"name": "JUMPDEST"
										},
										{
											"begin": 8386,
											"end": 8459,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 8395,
											"end": 8401,
											"name": "DUP5"
										},
										{
											"begin": 8403,
											"end": 8413,
											"name": "CALLER"
										},
										{
											"begin": 8415,
											"end": 8458,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 8451,
											"end": 8457,
											"name": "DUP6"
										},
										{
											"begin": 8415,
											"end": 8426,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8427,
											"end": 8433,
											"name": "DUP11"
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "AND"
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "AND"
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "DUP2"
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "MSTORE"
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "ADD"
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "SWAP1"
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "DUP2"
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "MSTORE"
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "ADD"
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8415,
											"end": 8434,
											"name": "KECCAK256"
										},
										{
											"begin": 8415,
											"end": 8446,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8435,
											"end": 8445,
											"name": "CALLER"
										},
										{
											"begin": 8415,
											"end": 8446,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8415,
											"end": 8446,
											"name": "AND"
										},
										{
											"begin": 8415,
											"end": 8446,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8415,
											"end": 8446,
											"name": "AND"
										},
										{
											"begin": 8415,
											"end": 8446,
											"name": "DUP2"
										},
										{
											"begin": 8415,
											"end": 8446,
											"name": "MSTORE"
										},
										{
											"begin": 8415,
											"end": 8446,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8415,
											"end": 8446,
											"name": "ADD"
										},
										{
											"begin": 8415,
											"end": 8446,
											"name": "SWAP1"
										},
										{
											"begin": 8415,
											"end": 8446,
											"name": "DUP2"
										},
										{
											"begin": 8415,
											"end": 8446,
											"name": "MSTORE"
										},
										{
											"begin": 8415,
											"end": 8446,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8415,
											"end": 8446,
											"name": "ADD"
										},
										{
											"begin": 8415,
											"end": 8446,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8415,
											"end": 8446,
											"name": "KECCAK256"
										},
										{
											"begin": 8415,
											"end": 8446,
											"name": "SLOAD"
										},
										{
											"begin": 8415,
											"end": 8450,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 8415,
											"end": 8450,
											"name": "SWAP1"
										},
										{
											"begin": 8415,
											"end": 8458,
											"name": "SWAP2"
										},
										{
											"begin": 8415,
											"end": 8458,
											"name": "SWAP1"
										},
										{
											"begin": 8415,
											"end": 8458,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8415,
											"end": 8458,
											"name": "AND"
										},
										{
											"begin": 8415,
											"end": 8458,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8415,
											"end": 8458,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 8415,
											"end": 8458,
											"name": "JUMPDEST"
										},
										{
											"begin": 8386,
											"end": 8394,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 8386,
											"end": 8459,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8386,
											"end": 8459,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 8386,
											"end": 8459,
											"name": "JUMPDEST"
										},
										{
											"begin": 8476,
											"end": 8480,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8469,
											"end": 8480,
											"name": "SWAP1"
										},
										{
											"begin": 8469,
											"end": 8480,
											"name": "POP"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP4"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "SWAP3"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "POP"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "POP"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "POP"
										},
										{
											"begin": 8235,
											"end": 8487,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "JUMPDEST"
										},
										{
											"begin": 6434,
											"end": 6439,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6467,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6458,
											"end": 6467,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6467,
											"name": "SWAP1"
										},
										{
											"begin": 6458,
											"end": 6467,
											"name": "SLOAD"
										},
										{
											"begin": 6458,
											"end": 6467,
											"name": "SWAP1"
										},
										{
											"begin": 6458,
											"end": 6467,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6458,
											"end": 6467,
											"name": "EXP"
										},
										{
											"begin": 6458,
											"end": 6467,
											"name": "SWAP1"
										},
										{
											"begin": 6458,
											"end": 6467,
											"name": "DIV"
										},
										{
											"begin": 6458,
											"end": 6467,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6458,
											"end": 6467,
											"name": "AND"
										},
										{
											"begin": 6451,
											"end": 6467,
											"name": "SWAP1"
										},
										{
											"begin": 6451,
											"end": 6467,
											"name": "POP"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "SWAP1"
										},
										{
											"begin": 6393,
											"end": 6474,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "JUMPDEST"
										},
										{
											"begin": 8962,
											"end": 8966,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8978,
											"end": 9057,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 8987,
											"end": 8997,
											"name": "CALLER"
										},
										{
											"begin": 8999,
											"end": 9006,
											"name": "DUP5"
										},
										{
											"begin": 9008,
											"end": 9056,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 9045,
											"end": 9055,
											"name": "DUP6"
										},
										{
											"begin": 9008,
											"end": 9019,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9008,
											"end": 9031,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9020,
											"end": 9030,
											"name": "CALLER"
										},
										{
											"begin": 9008,
											"end": 9031,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9008,
											"end": 9031,
											"name": "AND"
										},
										{
											"begin": 9008,
											"end": 9031,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9008,
											"end": 9031,
											"name": "AND"
										},
										{
											"begin": 9008,
											"end": 9031,
											"name": "DUP2"
										},
										{
											"begin": 9008,
											"end": 9031,
											"name": "MSTORE"
										},
										{
											"begin": 9008,
											"end": 9031,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9008,
											"end": 9031,
											"name": "ADD"
										},
										{
											"begin": 9008,
											"end": 9031,
											"name": "SWAP1"
										},
										{
											"begin": 9008,
											"end": 9031,
											"name": "DUP2"
										},
										{
											"begin": 9008,
											"end": 9031,
											"name": "MSTORE"
										},
										{
											"begin": 9008,
											"end": 9031,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9008,
											"end": 9031,
											"name": "ADD"
										},
										{
											"begin": 9008,
											"end": 9031,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9008,
											"end": 9031,
											"name": "KECCAK256"
										},
										{
											"begin": 9008,
											"end": 9040,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9032,
											"end": 9039,
											"name": "DUP10"
										},
										{
											"begin": 9008,
											"end": 9040,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9008,
											"end": 9040,
											"name": "AND"
										},
										{
											"begin": 9008,
											"end": 9040,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9008,
											"end": 9040,
											"name": "AND"
										},
										{
											"begin": 9008,
											"end": 9040,
											"name": "DUP2"
										},
										{
											"begin": 9008,
											"end": 9040,
											"name": "MSTORE"
										},
										{
											"begin": 9008,
											"end": 9040,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9008,
											"end": 9040,
											"name": "ADD"
										},
										{
											"begin": 9008,
											"end": 9040,
											"name": "SWAP1"
										},
										{
											"begin": 9008,
											"end": 9040,
											"name": "DUP2"
										},
										{
											"begin": 9008,
											"end": 9040,
											"name": "MSTORE"
										},
										{
											"begin": 9008,
											"end": 9040,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9008,
											"end": 9040,
											"name": "ADD"
										},
										{
											"begin": 9008,
											"end": 9040,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9008,
											"end": 9040,
											"name": "KECCAK256"
										},
										{
											"begin": 9008,
											"end": 9040,
											"name": "SLOAD"
										},
										{
											"begin": 9008,
											"end": 9044,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 9008,
											"end": 9044,
											"name": "SWAP1"
										},
										{
											"begin": 9008,
											"end": 9056,
											"name": "SWAP2"
										},
										{
											"begin": 9008,
											"end": 9056,
											"name": "SWAP1"
										},
										{
											"begin": 9008,
											"end": 9056,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9008,
											"end": 9056,
											"name": "AND"
										},
										{
											"begin": 9008,
											"end": 9056,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9008,
											"end": 9056,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 9008,
											"end": 9056,
											"name": "JUMPDEST"
										},
										{
											"begin": 8978,
											"end": 8986,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 8978,
											"end": 9057,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8978,
											"end": 9057,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 8978,
											"end": 9057,
											"name": "JUMPDEST"
										},
										{
											"begin": 9074,
											"end": 9078,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9067,
											"end": 9078,
											"name": "SWAP1"
										},
										{
											"begin": 9067,
											"end": 9078,
											"name": "POP"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "SWAP3"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "SWAP2"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "POP"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "POP"
										},
										{
											"begin": 8882,
											"end": 9085,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "JUMPDEST"
										},
										{
											"begin": 6898,
											"end": 6905,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6924,
											"end": 6933,
											"name": "DUP1"
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6941,
											"name": "DUP4"
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "AND"
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "AND"
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "DUP2"
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "MSTORE"
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "ADD"
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "SWAP1"
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "DUP2"
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "MSTORE"
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "ADD"
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "KECCAK256"
										},
										{
											"begin": 6924,
											"end": 6942,
											"name": "SLOAD"
										},
										{
											"begin": 6917,
											"end": 6942,
											"name": "SWAP1"
										},
										{
											"begin": 6917,
											"end": 6942,
											"name": "POP"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "SWAP2"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "SWAP1"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "POP"
										},
										{
											"begin": 6841,
											"end": 6949,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "JUMPDEST"
										},
										{
											"begin": 5792,
											"end": 5798,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5824,
											"end": 5831,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SLOAD"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP2"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "AND"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "ISZERO"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "MUL"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SUB"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "AND"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SWAP1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DIV"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "ADD"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SWAP2"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DIV"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "MUL"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "ADD"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "MLOAD"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SWAP1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP2"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "ADD"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "MSTORE"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SWAP3"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SWAP2"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SWAP1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP2"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP2"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "MSTORE"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "ADD"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP3"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SLOAD"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP2"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "AND"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "ISZERO"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "MUL"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SUB"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "AND"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SWAP1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DIV"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "ISZERO"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "JUMPI"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "LT"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "JUMPI"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP4"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SLOAD"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DIV"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "MUL"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP4"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "MSTORE"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SWAP2"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "ADD"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SWAP2"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "JUMP"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "JUMPDEST"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP3"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "ADD"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SWAP2"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SWAP1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "MSTORE"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "KECCAK256"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SWAP1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "JUMPDEST"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP2"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SLOAD"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP2"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "MSTORE"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SWAP1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "ADD"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SWAP1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "ADD"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP4"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "GT"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "JUMPI"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP3"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SWAP1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SUB"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "AND"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "DUP3"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "ADD"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SWAP2"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "JUMPDEST"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "POP"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "POP"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "POP"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "POP"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "POP"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "SWAP1"
										},
										{
											"begin": 5817,
											"end": 5831,
											"name": "POP"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "SWAP1"
										},
										{
											"begin": 5753,
											"end": 5838,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "JUMPDEST"
										},
										{
											"begin": 13068,
											"end": 13075,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13077,
											"end": 13084,
											"name": "DUP1"
										},
										{
											"begin": 13086,
											"end": 13093,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13140,
											"end": 13145,
											"name": "DUP4"
										},
										{
											"begin": 13105,
											"end": 13116,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13105,
											"end": 13128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13117,
											"end": 13127,
											"name": "CALLER"
										},
										{
											"begin": 13105,
											"end": 13128,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13105,
											"end": 13128,
											"name": "AND"
										},
										{
											"begin": 13105,
											"end": 13128,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13105,
											"end": 13128,
											"name": "AND"
										},
										{
											"begin": 13105,
											"end": 13128,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13128,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13128,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13128,
											"name": "SWAP1"
										},
										{
											"begin": 13105,
											"end": 13128,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13128,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13128,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13128,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13128,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13105,
											"end": 13128,
											"name": "KECCAK256"
										},
										{
											"begin": 13105,
											"end": 13137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13129,
											"end": 13136,
											"name": "DUP8"
										},
										{
											"begin": 13105,
											"end": 13137,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13105,
											"end": 13137,
											"name": "AND"
										},
										{
											"begin": 13105,
											"end": 13137,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13105,
											"end": 13137,
											"name": "AND"
										},
										{
											"begin": 13105,
											"end": 13137,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13137,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13137,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13137,
											"name": "SWAP1"
										},
										{
											"begin": 13105,
											"end": 13137,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13137,
											"name": "MSTORE"
										},
										{
											"begin": 13105,
											"end": 13137,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13105,
											"end": 13137,
											"name": "ADD"
										},
										{
											"begin": 13105,
											"end": 13137,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13105,
											"end": 13137,
											"name": "KECCAK256"
										},
										{
											"begin": 13105,
											"end": 13145,
											"name": "DUP2"
										},
										{
											"begin": 13105,
											"end": 13145,
											"name": "SWAP1"
										},
										{
											"begin": 13105,
											"end": 13145,
											"name": "SSTORE"
										},
										{
											"begin": 13105,
											"end": 13145,
											"name": "POP"
										},
										{
											"begin": 13163,
											"end": 13173,
											"name": "CALLER"
										},
										{
											"begin": 13175,
											"end": 13182,
											"name": "DUP6"
										},
										{
											"begin": 13184,
											"end": 13195,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13184,
											"end": 13207,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13196,
											"end": 13206,
											"name": "CALLER"
										},
										{
											"begin": 13184,
											"end": 13207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13184,
											"end": 13207,
											"name": "AND"
										},
										{
											"begin": 13184,
											"end": 13207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13184,
											"end": 13207,
											"name": "AND"
										},
										{
											"begin": 13184,
											"end": 13207,
											"name": "DUP2"
										},
										{
											"begin": 13184,
											"end": 13207,
											"name": "MSTORE"
										},
										{
											"begin": 13184,
											"end": 13207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13184,
											"end": 13207,
											"name": "ADD"
										},
										{
											"begin": 13184,
											"end": 13207,
											"name": "SWAP1"
										},
										{
											"begin": 13184,
											"end": 13207,
											"name": "DUP2"
										},
										{
											"begin": 13184,
											"end": 13207,
											"name": "MSTORE"
										},
										{
											"begin": 13184,
											"end": 13207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13184,
											"end": 13207,
											"name": "ADD"
										},
										{
											"begin": 13184,
											"end": 13207,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13184,
											"end": 13207,
											"name": "KECCAK256"
										},
										{
											"begin": 13184,
											"end": 13216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13208,
											"end": 13215,
											"name": "DUP9"
										},
										{
											"begin": 13184,
											"end": 13216,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13184,
											"end": 13216,
											"name": "AND"
										},
										{
											"begin": 13184,
											"end": 13216,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13184,
											"end": 13216,
											"name": "AND"
										},
										{
											"begin": 13184,
											"end": 13216,
											"name": "DUP2"
										},
										{
											"begin": 13184,
											"end": 13216,
											"name": "MSTORE"
										},
										{
											"begin": 13184,
											"end": 13216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13184,
											"end": 13216,
											"name": "ADD"
										},
										{
											"begin": 13184,
											"end": 13216,
											"name": "SWAP1"
										},
										{
											"begin": 13184,
											"end": 13216,
											"name": "DUP2"
										},
										{
											"begin": 13184,
											"end": 13216,
											"name": "MSTORE"
										},
										{
											"begin": 13184,
											"end": 13216,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13184,
											"end": 13216,
											"name": "ADD"
										},
										{
											"begin": 13184,
											"end": 13216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13184,
											"end": 13216,
											"name": "KECCAK256"
										},
										{
											"begin": 13184,
											"end": 13216,
											"name": "SLOAD"
										},
										{
											"begin": 13155,
											"end": 13217,
											"name": "SWAP3"
										},
										{
											"begin": 13155,
											"end": 13217,
											"name": "POP"
										},
										{
											"begin": 13155,
											"end": 13217,
											"name": "SWAP3"
										},
										{
											"begin": 13155,
											"end": 13217,
											"name": "POP"
										},
										{
											"begin": 13155,
											"end": 13217,
											"name": "SWAP3"
										},
										{
											"begin": 13155,
											"end": 13217,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "SWAP3"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "SWAP3"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "POP"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "SWAP3"
										},
										{
											"begin": 12999,
											"end": 13229,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "JUMPDEST"
										},
										{
											"begin": 9657,
											"end": 9661,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9673,
											"end": 9757,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 9682,
											"end": 9692,
											"name": "CALLER"
										},
										{
											"begin": 9694,
											"end": 9701,
											"name": "DUP5"
										},
										{
											"begin": 9703,
											"end": 9756,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 9740,
											"end": 9755,
											"name": "DUP6"
										},
										{
											"begin": 9703,
											"end": 9714,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9703,
											"end": 9726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9715,
											"end": 9725,
											"name": "CALLER"
										},
										{
											"begin": 9703,
											"end": 9726,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9703,
											"end": 9726,
											"name": "AND"
										},
										{
											"begin": 9703,
											"end": 9726,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9703,
											"end": 9726,
											"name": "AND"
										},
										{
											"begin": 9703,
											"end": 9726,
											"name": "DUP2"
										},
										{
											"begin": 9703,
											"end": 9726,
											"name": "MSTORE"
										},
										{
											"begin": 9703,
											"end": 9726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9703,
											"end": 9726,
											"name": "ADD"
										},
										{
											"begin": 9703,
											"end": 9726,
											"name": "SWAP1"
										},
										{
											"begin": 9703,
											"end": 9726,
											"name": "DUP2"
										},
										{
											"begin": 9703,
											"end": 9726,
											"name": "MSTORE"
										},
										{
											"begin": 9703,
											"end": 9726,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9703,
											"end": 9726,
											"name": "ADD"
										},
										{
											"begin": 9703,
											"end": 9726,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9703,
											"end": 9726,
											"name": "KECCAK256"
										},
										{
											"begin": 9703,
											"end": 9735,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9727,
											"end": 9734,
											"name": "DUP10"
										},
										{
											"begin": 9703,
											"end": 9735,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9703,
											"end": 9735,
											"name": "AND"
										},
										{
											"begin": 9703,
											"end": 9735,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9703,
											"end": 9735,
											"name": "AND"
										},
										{
											"begin": 9703,
											"end": 9735,
											"name": "DUP2"
										},
										{
											"begin": 9703,
											"end": 9735,
											"name": "MSTORE"
										},
										{
											"begin": 9703,
											"end": 9735,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9703,
											"end": 9735,
											"name": "ADD"
										},
										{
											"begin": 9703,
											"end": 9735,
											"name": "SWAP1"
										},
										{
											"begin": 9703,
											"end": 9735,
											"name": "DUP2"
										},
										{
											"begin": 9703,
											"end": 9735,
											"name": "MSTORE"
										},
										{
											"begin": 9703,
											"end": 9735,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9703,
											"end": 9735,
											"name": "ADD"
										},
										{
											"begin": 9703,
											"end": 9735,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9703,
											"end": 9735,
											"name": "KECCAK256"
										},
										{
											"begin": 9703,
											"end": 9735,
											"name": "SLOAD"
										},
										{
											"begin": 9703,
											"end": 9739,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 9703,
											"end": 9739,
											"name": "SWAP1"
										},
										{
											"begin": 9703,
											"end": 9756,
											"name": "SWAP2"
										},
										{
											"begin": 9703,
											"end": 9756,
											"name": "SWAP1"
										},
										{
											"begin": 9703,
											"end": 9756,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9703,
											"end": 9756,
											"name": "AND"
										},
										{
											"begin": 9703,
											"end": 9756,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9703,
											"end": 9756,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 9703,
											"end": 9756,
											"name": "JUMPDEST"
										},
										{
											"begin": 9673,
											"end": 9681,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 9673,
											"end": 9757,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9673,
											"end": 9757,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 9673,
											"end": 9757,
											"name": "JUMPDEST"
										},
										{
											"begin": 9774,
											"end": 9778,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9767,
											"end": 9778,
											"name": "SWAP1"
										},
										{
											"begin": 9767,
											"end": 9778,
											"name": "POP"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "SWAP3"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "SWAP2"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "POP"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "POP"
										},
										{
											"begin": 9572,
											"end": 9785,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "JUMPDEST"
										},
										{
											"begin": 7221,
											"end": 7225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7237,
											"end": 7277,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 7247,
											"end": 7257,
											"name": "CALLER"
										},
										{
											"begin": 7259,
											"end": 7268,
											"name": "DUP5"
										},
										{
											"begin": 7270,
											"end": 7276,
											"name": "DUP5"
										},
										{
											"begin": 7237,
											"end": 7246,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 7237,
											"end": 7277,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7237,
											"end": 7277,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 7237,
											"end": 7277,
											"name": "JUMPDEST"
										},
										{
											"begin": 7294,
											"end": 7298,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7287,
											"end": 7298,
											"name": "SWAP1"
										},
										{
											"begin": 7287,
											"end": 7298,
											"name": "POP"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "SWAP3"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "SWAP2"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "POP"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "POP"
										},
										{
											"begin": 7152,
											"end": 7305,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "JUMPDEST"
										},
										{
											"begin": 7435,
											"end": 7442,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7461,
											"end": 7472,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7473,
											"end": 7478,
											"name": "DUP5"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "AND"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "AND"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "DUP2"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "MSTORE"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "ADD"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "SWAP1"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "DUP2"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "MSTORE"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "ADD"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "KECCAK256"
										},
										{
											"begin": 7461,
											"end": 7488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7480,
											"end": 7487,
											"name": "DUP4"
										},
										{
											"begin": 7461,
											"end": 7488,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7461,
											"end": 7488,
											"name": "AND"
										},
										{
											"begin": 7461,
											"end": 7488,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7461,
											"end": 7488,
											"name": "AND"
										},
										{
											"begin": 7461,
											"end": 7488,
											"name": "DUP2"
										},
										{
											"begin": 7461,
											"end": 7488,
											"name": "MSTORE"
										},
										{
											"begin": 7461,
											"end": 7488,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7461,
											"end": 7488,
											"name": "ADD"
										},
										{
											"begin": 7461,
											"end": 7488,
											"name": "SWAP1"
										},
										{
											"begin": 7461,
											"end": 7488,
											"name": "DUP2"
										},
										{
											"begin": 7461,
											"end": 7488,
											"name": "MSTORE"
										},
										{
											"begin": 7461,
											"end": 7488,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7461,
											"end": 7488,
											"name": "ADD"
										},
										{
											"begin": 7461,
											"end": 7488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7461,
											"end": 7488,
											"name": "KECCAK256"
										},
										{
											"begin": 7461,
											"end": 7488,
											"name": "SLOAD"
										},
										{
											"begin": 7454,
											"end": 7488,
											"name": "SWAP1"
										},
										{
											"begin": 7454,
											"end": 7488,
											"name": "POP"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "SWAP3"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "SWAP2"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "POP"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "POP"
										},
										{
											"begin": 7363,
											"end": 7495,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12298,
											"end": 12627,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 12298,
											"end": 12627,
											"name": "JUMPDEST"
										},
										{
											"begin": 12407,
											"end": 12408,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12390,
											"end": 12409,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12390,
											"end": 12409,
											"name": "AND"
										},
										{
											"begin": 12390,
											"end": 12395,
											"name": "DUP4"
										},
										{
											"begin": 12390,
											"end": 12409,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12390,
											"end": 12409,
											"name": "AND"
										},
										{
											"begin": 12390,
											"end": 12409,
											"name": "EQ"
										},
										{
											"begin": 12390,
											"end": 12409,
											"name": "ISZERO"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "ISZERO"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "ISZERO"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "JUMPI"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "MLOAD"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "DUP2"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "MSTORE"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "ADD"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "DUP1"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "DUP1"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "ADD"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "DUP3"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "DUP2"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "SUB"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "DUP3"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "MSTORE"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "DUP2"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "MSTORE"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "ADD"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "DUP1"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "PUSH",
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "DUP2"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "MSTORE"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "ADD"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "PUSH",
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "DUP2"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "MSTORE"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "POP"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "ADD"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "SWAP2"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "POP"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "POP"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "MLOAD"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "DUP1"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "SWAP2"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "SUB"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "SWAP1"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "REVERT"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 12382,
											"end": 12450,
											"name": "JUMPDEST"
										},
										{
											"begin": 12487,
											"end": 12488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12468,
											"end": 12489,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12468,
											"end": 12489,
											"name": "AND"
										},
										{
											"begin": 12468,
											"end": 12475,
											"name": "DUP3"
										},
										{
											"begin": 12468,
											"end": 12489,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12468,
											"end": 12489,
											"name": "AND"
										},
										{
											"begin": 12468,
											"end": 12489,
											"name": "EQ"
										},
										{
											"begin": 12468,
											"end": 12489,
											"name": "ISZERO"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "ISZERO"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "ISZERO"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "JUMPI"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "MLOAD"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "DUP2"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "MSTORE"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "ADD"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "DUP1"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "DUP1"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "ADD"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "DUP3"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "DUP2"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "SUB"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "DUP3"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "MSTORE"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "DUP2"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "MSTORE"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "ADD"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "DUP1"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "PUSH",
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "DUP2"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "MSTORE"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "ADD"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "PUSH",
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "DUP2"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "MSTORE"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "POP"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "ADD"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "SWAP2"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "POP"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "POP"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "MLOAD"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "DUP1"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "SWAP2"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "SUB"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "SWAP1"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "REVERT"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 12460,
											"end": 12528,
											"name": "JUMPDEST"
										},
										{
											"begin": 12569,
											"end": 12574,
											"name": "DUP1"
										},
										{
											"begin": 12539,
											"end": 12550,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12551,
											"end": 12556,
											"name": "DUP6"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "AND"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "AND"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "DUP2"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "MSTORE"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "ADD"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "SWAP1"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "DUP2"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "MSTORE"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "ADD"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "KECCAK256"
										},
										{
											"begin": 12539,
											"end": 12566,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "DUP5"
										},
										{
											"begin": 12539,
											"end": 12566,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12539,
											"end": 12566,
											"name": "AND"
										},
										{
											"begin": 12539,
											"end": 12566,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12539,
											"end": 12566,
											"name": "AND"
										},
										{
											"begin": 12539,
											"end": 12566,
											"name": "DUP2"
										},
										{
											"begin": 12539,
											"end": 12566,
											"name": "MSTORE"
										},
										{
											"begin": 12539,
											"end": 12566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12539,
											"end": 12566,
											"name": "ADD"
										},
										{
											"begin": 12539,
											"end": 12566,
											"name": "SWAP1"
										},
										{
											"begin": 12539,
											"end": 12566,
											"name": "DUP2"
										},
										{
											"begin": 12539,
											"end": 12566,
											"name": "MSTORE"
										},
										{
											"begin": 12539,
											"end": 12566,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12539,
											"end": 12566,
											"name": "ADD"
										},
										{
											"begin": 12539,
											"end": 12566,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12539,
											"end": 12566,
											"name": "KECCAK256"
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "DUP2"
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "SWAP1"
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "SSTORE"
										},
										{
											"begin": 12539,
											"end": 12574,
											"name": "POP"
										},
										{
											"begin": 12605,
											"end": 12612,
											"name": "DUP2"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "AND"
										},
										{
											"begin": 12598,
											"end": 12603,
											"name": "DUP4"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "AND"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12614,
											"end": 12619,
											"name": "DUP4"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "MLOAD"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "DUP1"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "DUP3"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "DUP2"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "MSTORE"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "ADD"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "SWAP2"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "POP"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "POP"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "MLOAD"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "DUP1"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "SWAP2"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "SUB"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "SWAP1"
										},
										{
											"begin": 12589,
											"end": 12620,
											"name": "LOG3"
										},
										{
											"begin": 12298,
											"end": 12627,
											"name": "POP"
										},
										{
											"begin": 12298,
											"end": 12627,
											"name": "POP"
										},
										{
											"begin": 12298,
											"end": 12627,
											"name": "POP"
										},
										{
											"begin": 12298,
											"end": 12627,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10259,
											"end": 10681,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 10259,
											"end": 10681,
											"name": "JUMPDEST"
										},
										{
											"begin": 10374,
											"end": 10375,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10356,
											"end": 10376,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10356,
											"end": 10376,
											"name": "AND"
										},
										{
											"begin": 10356,
											"end": 10362,
											"name": "DUP4"
										},
										{
											"begin": 10356,
											"end": 10376,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10356,
											"end": 10376,
											"name": "AND"
										},
										{
											"begin": 10356,
											"end": 10376,
											"name": "EQ"
										},
										{
											"begin": 10356,
											"end": 10376,
											"name": "ISZERO"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "ISZERO"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "ISZERO"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "JUMPI"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "MLOAD"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "DUP2"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "MSTORE"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "ADD"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "DUP1"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "DUP1"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "ADD"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "DUP3"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "DUP2"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "SUB"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "DUP3"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "MSTORE"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "DUP2"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "MSTORE"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "ADD"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "DUP1"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "PUSH",
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "DUP2"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "MSTORE"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "ADD"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "PUSH",
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "DUP2"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "MSTORE"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "POP"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "ADD"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "SWAP2"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "POP"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "POP"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "MLOAD"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "DUP1"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "SWAP2"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "SUB"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "SWAP1"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "REVERT"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 10348,
											"end": 10418,
											"name": "JUMPDEST"
										},
										{
											"begin": 10457,
											"end": 10458,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10436,
											"end": 10459,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10436,
											"end": 10459,
											"name": "AND"
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "DUP3"
										},
										{
											"begin": 10436,
											"end": 10459,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10436,
											"end": 10459,
											"name": "AND"
										},
										{
											"begin": 10436,
											"end": 10459,
											"name": "EQ"
										},
										{
											"begin": 10436,
											"end": 10459,
											"name": "ISZERO"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "ISZERO"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "ISZERO"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "JUMPI"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "MLOAD"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "DUP2"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "MSTORE"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "ADD"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "DUP1"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "DUP1"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "ADD"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "DUP3"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "DUP2"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "SUB"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "DUP3"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "MSTORE"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "DUP2"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "MSTORE"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "ADD"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "DUP1"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "PUSH",
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "DUP2"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "MSTORE"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "ADD"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "PUSH",
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "DUP2"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "MSTORE"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "POP"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "ADD"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "SWAP2"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "POP"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "POP"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "MLOAD"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "DUP1"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "SWAP2"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "SUB"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "SWAP1"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "REVERT"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 10428,
											"end": 10499,
											"name": "JUMPDEST"
										},
										{
											"begin": 10530,
											"end": 10559,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 10552,
											"end": 10558,
											"name": "DUP2"
										},
										{
											"begin": 10530,
											"end": 10539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "DUP1"
										},
										{
											"begin": 10540,
											"end": 10546,
											"name": "DUP7"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "AND"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "AND"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "DUP2"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "MSTORE"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "ADD"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "SWAP1"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "DUP2"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "MSTORE"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "ADD"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "KECCAK256"
										},
										{
											"begin": 10530,
											"end": 10547,
											"name": "SLOAD"
										},
										{
											"begin": 10530,
											"end": 10551,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 10530,
											"end": 10551,
											"name": "SWAP1"
										},
										{
											"begin": 10530,
											"end": 10559,
											"name": "SWAP2"
										},
										{
											"begin": 10530,
											"end": 10559,
											"name": "SWAP1"
										},
										{
											"begin": 10530,
											"end": 10559,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10530,
											"end": 10559,
											"name": "AND"
										},
										{
											"begin": 10530,
											"end": 10559,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10530,
											"end": 10559,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 10530,
											"end": 10559,
											"name": "JUMPDEST"
										},
										{
											"begin": 10510,
											"end": 10519,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10510,
											"end": 10527,
											"name": "DUP1"
										},
										{
											"begin": 10520,
											"end": 10526,
											"name": "DUP6"
										},
										{
											"begin": 10510,
											"end": 10527,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10510,
											"end": 10527,
											"name": "AND"
										},
										{
											"begin": 10510,
											"end": 10527,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10510,
											"end": 10527,
											"name": "AND"
										},
										{
											"begin": 10510,
											"end": 10527,
											"name": "DUP2"
										},
										{
											"begin": 10510,
											"end": 10527,
											"name": "MSTORE"
										},
										{
											"begin": 10510,
											"end": 10527,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10510,
											"end": 10527,
											"name": "ADD"
										},
										{
											"begin": 10510,
											"end": 10527,
											"name": "SWAP1"
										},
										{
											"begin": 10510,
											"end": 10527,
											"name": "DUP2"
										},
										{
											"begin": 10510,
											"end": 10527,
											"name": "MSTORE"
										},
										{
											"begin": 10510,
											"end": 10527,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10510,
											"end": 10527,
											"name": "ADD"
										},
										{
											"begin": 10510,
											"end": 10527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10510,
											"end": 10527,
											"name": "KECCAK256"
										},
										{
											"begin": 10510,
											"end": 10559,
											"name": "DUP2"
										},
										{
											"begin": 10510,
											"end": 10559,
											"name": "SWAP1"
										},
										{
											"begin": 10510,
											"end": 10559,
											"name": "SSTORE"
										},
										{
											"begin": 10510,
											"end": 10559,
											"name": "POP"
										},
										{
											"begin": 10592,
											"end": 10624,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 10617,
											"end": 10623,
											"name": "DUP2"
										},
										{
											"begin": 10592,
											"end": 10601,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "DUP1"
										},
										{
											"begin": 10602,
											"end": 10611,
											"name": "DUP6"
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "AND"
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "AND"
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "DUP2"
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "MSTORE"
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "ADD"
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "SWAP1"
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "DUP2"
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "MSTORE"
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "ADD"
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "KECCAK256"
										},
										{
											"begin": 10592,
											"end": 10612,
											"name": "SLOAD"
										},
										{
											"begin": 10592,
											"end": 10616,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 10592,
											"end": 10616,
											"name": "SWAP1"
										},
										{
											"begin": 10592,
											"end": 10624,
											"name": "SWAP2"
										},
										{
											"begin": 10592,
											"end": 10624,
											"name": "SWAP1"
										},
										{
											"begin": 10592,
											"end": 10624,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10592,
											"end": 10624,
											"name": "AND"
										},
										{
											"begin": 10592,
											"end": 10624,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10592,
											"end": 10624,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 10592,
											"end": 10624,
											"name": "JUMPDEST"
										},
										{
											"begin": 10569,
											"end": 10578,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10569,
											"end": 10589,
											"name": "DUP1"
										},
										{
											"begin": 10579,
											"end": 10588,
											"name": "DUP5"
										},
										{
											"begin": 10569,
											"end": 10589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10569,
											"end": 10589,
											"name": "AND"
										},
										{
											"begin": 10569,
											"end": 10589,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10569,
											"end": 10589,
											"name": "AND"
										},
										{
											"begin": 10569,
											"end": 10589,
											"name": "DUP2"
										},
										{
											"begin": 10569,
											"end": 10589,
											"name": "MSTORE"
										},
										{
											"begin": 10569,
											"end": 10589,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10569,
											"end": 10589,
											"name": "ADD"
										},
										{
											"begin": 10569,
											"end": 10589,
											"name": "SWAP1"
										},
										{
											"begin": 10569,
											"end": 10589,
											"name": "DUP2"
										},
										{
											"begin": 10569,
											"end": 10589,
											"name": "MSTORE"
										},
										{
											"begin": 10569,
											"end": 10589,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10569,
											"end": 10589,
											"name": "ADD"
										},
										{
											"begin": 10569,
											"end": 10589,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10569,
											"end": 10589,
											"name": "KECCAK256"
										},
										{
											"begin": 10569,
											"end": 10624,
											"name": "DUP2"
										},
										{
											"begin": 10569,
											"end": 10624,
											"name": "SWAP1"
										},
										{
											"begin": 10569,
											"end": 10624,
											"name": "SSTORE"
										},
										{
											"begin": 10569,
											"end": 10624,
											"name": "POP"
										},
										{
											"begin": 10656,
											"end": 10665,
											"name": "DUP2"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "AND"
										},
										{
											"begin": 10648,
											"end": 10654,
											"name": "DUP4"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "AND"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10667,
											"end": 10673,
											"name": "DUP4"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "MLOAD"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "DUP1"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "DUP3"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "DUP2"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "MSTORE"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "ADD"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "SWAP2"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "POP"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "POP"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "MLOAD"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "DUP1"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "SWAP2"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "SUB"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "SWAP1"
										},
										{
											"begin": 10639,
											"end": 10674,
											"name": "LOG3"
										},
										{
											"begin": 10259,
											"end": 10681,
											"name": "POP"
										},
										{
											"begin": 10259,
											"end": 10681,
											"name": "POP"
										},
										{
											"begin": 10259,
											"end": 10681,
											"name": "POP"
										},
										{
											"begin": 10259,
											"end": 10681,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1535,
											"end": 1716,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 1535,
											"end": 1716,
											"name": "JUMPDEST"
										},
										{
											"begin": 1593,
											"end": 1600,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1673,
											"end": 1682,
											"name": "DUP1"
										},
										{
											"begin": 1689,
											"end": 1690,
											"name": "DUP3"
										},
										{
											"begin": 1685,
											"end": 1686,
											"name": "DUP5"
										},
										{
											"begin": 1685,
											"end": 1690,
											"name": "SUB"
										},
										{
											"begin": 1673,
											"end": 1690,
											"name": "SWAP1"
										},
										{
											"begin": 1673,
											"end": 1690,
											"name": "POP"
										},
										{
											"begin": 1708,
											"end": 1709,
											"name": "DUP1"
										},
										{
											"begin": 1701,
											"end": 1709,
											"name": "SWAP2"
										},
										{
											"begin": 1701,
											"end": 1709,
											"name": "POP"
										},
										{
											"begin": 1535,
											"end": 1716,
											"name": "POP"
										},
										{
											"begin": 1535,
											"end": 1716,
											"name": "SWAP3"
										},
										{
											"begin": 1535,
											"end": 1716,
											"name": "SWAP2"
										},
										{
											"begin": 1535,
											"end": 1716,
											"name": "POP"
										},
										{
											"begin": 1535,
											"end": 1716,
											"name": "POP"
										},
										{
											"begin": 1535,
											"end": 1716,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1095,
											"end": 1271,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1095,
											"end": 1271,
											"name": "JUMPDEST"
										},
										{
											"begin": 1153,
											"end": 1160,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP1"
										},
										{
											"begin": 1188,
											"end": 1189,
											"name": "DUP3"
										},
										{
											"begin": 1184,
											"end": 1185,
											"name": "DUP5"
										},
										{
											"begin": 1184,
											"end": 1189,
											"name": "ADD"
										},
										{
											"begin": 1172,
											"end": 1189,
											"name": "SWAP1"
										},
										{
											"begin": 1172,
											"end": 1189,
											"name": "POP"
										},
										{
											"begin": 1212,
											"end": 1213,
											"name": "DUP4"
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "DUP2"
										},
										{
											"begin": 1207,
											"end": 1213,
											"name": "LT"
										},
										{
											"begin": 1207,
											"end": 1213,
											"name": "ISZERO"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "ISZERO"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "ISZERO"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "JUMPI"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "MLOAD"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP2"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "MSTORE"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "ADD"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP1"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP1"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "ADD"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP3"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP2"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "SUB"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP3"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "MSTORE"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP2"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "MSTORE"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "ADD"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP1"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP2"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "MSTORE"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "ADD"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "SWAP2"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "MLOAD"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP1"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "SWAP2"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "SUB"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "SWAP1"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "REVERT"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "JUMPDEST"
										},
										{
											"begin": 1263,
											"end": 1264,
											"name": "DUP1"
										},
										{
											"begin": 1256,
											"end": 1264,
											"name": "SWAP2"
										},
										{
											"begin": 1256,
											"end": 1264,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1271,
											"name": "SWAP3"
										},
										{
											"begin": 1095,
											"end": 1271,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1271,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveTest(address,uint256)": "a25fb97a",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveTest\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_contract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/TF_erc20.sol\":\"TF\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TF_erc20.sol\":{\"keccak256\":\"0xd07642835d16081d732d6aa1bb682484dfc22f10cdf560a05f25d71666536360\",\"urls\":[\"bzzr://0f764f8ba43e4e521c632a24445c1b73b5498430b797392108b3b31765a9783d\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/TF_erc20.sol": {
				"ast": {
					"absolutePath": "contracts/TF_erc20.sol",
					"exportedSymbols": {
						"IERC20": [
							68
						],
						"SafeMath": [
							192
						],
						"TF": [
							669
						]
					},
					"id": 670,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see `ERC20Detailed`.",
							"fullyImplemented": false,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 6,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "246:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "245:9:0"
									},
									"scope": 68,
									"src": "200:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 13,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "280:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "279:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "320:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "319:9:0"
									},
									"scope": 68,
									"src": "261:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 22,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "353:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "372:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "352:35:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "406:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "406:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "405:6:0"
									},
									"scope": 68,
									"src": "335:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 31,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "437:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "452:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "436:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "492:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "491:9:0"
									},
									"scope": 68,
									"src": "418:83:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 40,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "524:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "541:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "523:33:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "575:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "575:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "574:6:0"
									},
									"scope": 68,
									"src": "507:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 51,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "609:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "625:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "644:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "608:51:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "678:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "678:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "677:6:0"
									},
									"scope": 68,
									"src": "587:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 59,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "705:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "727:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "747:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "704:57:0"
									},
									"src": "690:72:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 67,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "783:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "806:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "831:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "782:63:0"
									},
									"src": "768:78:0"
								}
							],
							"scope": 670,
							"src": "177:671:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 192,
							"linearizedBaseContracts": [
								192
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1162:109:0",
										"statements": [
											{
												"assignments": [
													78
												],
												"declarations": [
													{
														"constant": false,
														"id": 78,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 93,
														"src": "1172:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 77,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1172:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 82,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 79,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "1184:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 80,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "1188:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1184:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1172:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 84,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "1207:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 85,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "1212:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1207:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1215:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 83,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															687,
															688
														],
														"referencedDeclaration": 688,
														"src": "1199:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1199:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1199:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 90,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 78,
													"src": "1263:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 76,
												"id": 91,
												"nodeType": "Return",
												"src": "1256:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 93,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1108:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1119:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1107:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1153:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1153:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1152:9:0"
									},
									"scope": 192,
									"src": "1095:176:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "1602:114:0",
										"statements": [
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 111,
														"src": "1673:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 102,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1673:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 107,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 104,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1685:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 105,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "1689:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1685:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1673:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 108,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 103,
													"src": "1708:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 101,
												"id": 109,
												"nodeType": "Return",
												"src": "1701:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 111,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1548:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1559:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1547:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1593:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1592:9:0"
									},
									"scope": 192,
									"src": "1535:181:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "2023:391:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 120,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2254:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2259:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2254:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 126,
												"nodeType": "IfStatement",
												"src": "2250:45:0",
												"trueBody": {
													"id": 125,
													"nodeType": "Block",
													"src": "2262:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2283:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 119,
															"id": 124,
															"nodeType": "Return",
															"src": "2276:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													128
												],
												"declarations": [
													{
														"constant": false,
														"id": 128,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2305:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 127,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2305:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 132,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 129,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2317:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 130,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "2321:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2317:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2305:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 134,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "2340:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 135,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "2344:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2340:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 137,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "2349:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2340:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2352:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															687,
															688
														],
														"referencedDeclaration": 688,
														"src": "2332:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2332:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "2332:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 142,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 128,
													"src": "2406:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 119,
												"id": 143,
												"nodeType": "Return",
												"src": "2399:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 145,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "1969:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "1980:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1968:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "2014:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2013:9:0"
									},
									"scope": 192,
									"src": "1956:458:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "2936:259:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 155,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "3020:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3024:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3020:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3027:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															687,
															688
														],
														"referencedDeclaration": 688,
														"src": "3012:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3012:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "3012:44:0"
											},
											{
												"assignments": [
													162
												],
												"declarations": [
													{
														"constant": false,
														"id": 162,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 170,
														"src": "3066:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 161,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3066:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 166,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 163,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "3078:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 164,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 149,
														"src": "3082:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3078:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3066:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 167,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 162,
													"src": "3187:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 153,
												"id": 168,
												"nodeType": "Return",
												"src": "3180:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 170,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2882:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2893:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2881:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2927:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2927:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2926:9:0"
									},
									"scope": 192,
									"src": "2869:326:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "3706:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 180,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "3724:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3729:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3724:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3732:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															687,
															688
														],
														"referencedDeclaration": 688,
														"src": "3716:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3716:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "3716:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 186,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3776:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 187,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "3780:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3776:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 178,
												"id": 189,
												"nodeType": "Return",
												"src": "3769:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 191,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "3652:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "3663:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3663:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3651:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "3697:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3696:9:0"
									},
									"scope": 192,
									"src": "3639:149:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 670,
							"src": "850:2940:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 193,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 68,
										"src": "4956:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$68",
											"typeString": "contract IERC20"
										}
									},
									"id": 194,
									"nodeType": "InheritanceSpecifier",
									"src": "4956:6:0"
								}
							],
							"contractDependencies": [
								68
							],
							"contractKind": "contract",
							"documentation": "@dev Implementation of the `IERC20` interface.\n * This implementation is agnostic to the way tokens are created. This means\nthat a supply mechanism has to be added in a derived contract using `_mint`.\nFor a generic mechanism see `ERC20Mintable`.\n * *For a detailed writeup see our guide [How to implement supply\nmechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).*\n * We have followed general OpenZeppelin guidelines: functions revert instead\nof returning `false` on failure. This behavior is nonetheless conventional\nand does not conflict with the expectations of ERC20 applications.\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\nThis allows applications to reconstruct the allowance for all accounts just\nby listening to said events. Other implementations of the EIP may not emit\nthese events, as it isn't required by the specification.\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\nfunctions have been added to mitigate the well-known issues around setting\nallowances. See `IERC20.approve`.",
							"fullyImplemented": true,
							"id": 669,
							"linearizedBaseContracts": [
								669,
								68
							],
							"name": "TF",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 197,
									"libraryName": {
										"contractScope": null,
										"id": 195,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 192,
										"src": "4975:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$192",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "4969:27:0",
									"typeName": {
										"id": 196,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4988:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 201,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 669,
									"src": "5002:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 200,
										"keyType": {
											"id": 198,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5011:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5002:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 199,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5022:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 207,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 669,
									"src": "5055:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 206,
										"keyType": {
											"id": 202,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5064:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5055:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 205,
											"keyType": {
												"id": 203,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5084:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "5075:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 204,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5095:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 210,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 669,
									"src": "5258:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 208,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5258:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "7a547275737446756e64",
										"id": 209,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5281:12:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_6f26ba9ee70a3fb02b88a17439ee325d3bbbdc8e2e95c977c20b2f197fd93483",
											"typeString": "literal_string \"zTrustFund\""
										},
										"value": "zTrustFund"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 213,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 669,
									"src": "5299:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 211,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5299:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "7a5446",
										"id": 212,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5324:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1ef6fa8e6e2047f955b06d58cee869c86666c3eb9f681d460cbcf3c8e8ab8377",
											"typeString": "literal_string \"zTF\""
										},
										"value": "zTF"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 216,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 669,
									"src": "5335:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 214,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "5335:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 215,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5361:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "5409:85:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 222,
															"name": "_contract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "5426:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "31303030303030303030",
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5437:10:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																},
																"value": "1000000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5450:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 226,
																			"name": "_decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 216,
																			"src": "5464:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5456:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint256"
																	},
																	"id": 227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5456:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5450:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5437:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 221,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "5420:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5420:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "5420:55:0"
											}
										]
									},
									"documentation": null,
									"id": 233,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"name": "_contract",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "5383:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5383:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5382:19:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5409:0:0"
									},
									"scope": 669,
									"src": "5370:124:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 240,
										"nodeType": "Block",
										"src": "5611:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 238,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 210,
													"src": "5628:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 237,
												"id": 239,
												"nodeType": "Return",
												"src": "5621:12:0"
											}
										]
									},
									"documentation": "@dev Returns the name of the token.",
									"id": 241,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5572:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "5596:6:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5596:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5595:15:0"
									},
									"scope": 669,
									"src": "5559:81:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 248,
										"nodeType": "Block",
										"src": "5807:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 246,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 213,
													"src": "5824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 245,
												"id": 247,
												"nodeType": "Return",
												"src": "5817:14:0"
											}
										]
									},
									"documentation": "@dev Returns the symbol of the token, usually a shorter version of the\nname.",
									"id": 249,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5768:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "5792:6:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 243,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5792:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5791:15:0"
									},
									"scope": 669,
									"src": "5753:85:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6441:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 254,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 216,
													"src": "6458:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 253,
												"id": 255,
												"nodeType": "Return",
												"src": "6451:16:0"
											}
										]
									},
									"documentation": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei.\n     * > Note that this information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n`IERC20.balanceOf` and `IERC20.transfer`.",
									"id": 257,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6410:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6434:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 251,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6434:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6433:7:0"
									},
									"scope": 669,
									"src": "6393:81:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 259,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 669,
									"src": "6605:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 258,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6605:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "6747:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 264,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 259,
													"src": "6764:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 263,
												"id": 265,
												"nodeType": "Return",
												"src": "6757:19:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.totalSupply`.",
									"id": 267,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6714:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "6738:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6737:9:0"
									},
									"scope": 669,
									"src": "6694:89:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "public"
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "6907:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 274,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "6924:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 276,
													"indexExpression": {
														"argumentTypes": null,
														"id": 275,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "6934:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6924:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 273,
												"id": 277,
												"nodeType": "Return",
												"src": "6917:25:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.balanceOf`.",
									"id": 279,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "6860:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6859:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "6898:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6897:9:0"
									},
									"scope": 669,
									"src": "6841:108:0",
									"stateMutability": "view",
									"superFunction": 13,
									"visibility": "public"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "7227:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 289,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "7247:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7247:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 291,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "7259:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 292,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "7270:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 288,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "7237:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7237:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "7237:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7294:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 296,
												"nodeType": "Return",
												"src": "7287:11:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.transfer`.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 298,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7170:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7189:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7169:35:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "7221:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7221:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7220:6:0"
									},
									"scope": 669,
									"src": "7152:153:0",
									"stateMutability": "nonpayable",
									"superFunction": 22,
									"visibility": "public"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "7444:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 307,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "7461:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 309,
														"indexExpression": {
															"argumentTypes": null,
															"id": 308,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "7473:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7461:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 311,
													"indexExpression": {
														"argumentTypes": null,
														"id": 310,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "7480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7461:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 306,
												"id": 312,
												"nodeType": "Return",
												"src": "7454:34:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.allowance`.",
									"id": 314,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7382:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7397:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7381:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7435:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7434:9:0"
									},
									"scope": 669,
									"src": "7363:132:0",
									"stateMutability": "view",
									"superFunction": 31,
									"visibility": "public"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "7704:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 324,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "7723:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7723:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 326,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "7735:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 327,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "7744:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 323,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7714:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7714:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "7714:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7767:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 322,
												"id": 331,
												"nodeType": "Return",
												"src": "7760:11:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.approve`.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 333,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "7650:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7650:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "7667:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7649:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "7698:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 320,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7698:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7697:6:0"
									},
									"scope": 669,
									"src": "7633:145:0",
									"stateMutability": "nonpayable",
									"superFunction": 40,
									"visibility": "public"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "8330:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 345,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "8350:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 346,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "8358:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 347,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "8369:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 344,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "8340:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8340:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "8340:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 351,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 335,
															"src": "8395:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 352,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "8403:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8403:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 361,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "8451:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 354,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 207,
																			"src": "8415:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 356,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 355,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 335,
																			"src": "8427:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8415:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 359,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 357,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 684,
																			"src": "8435:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "8435:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8415:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 111,
																"src": "8415:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8415:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8386:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8386:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "8386:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8476:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 343,
												"id": 366,
												"nodeType": "Return",
												"src": "8469:11:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.transferFrom`.\n     * Emits an `Approval` event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of `ERC20`;\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `value`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 368,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "8257:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8257:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "8273:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8273:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "8292:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8256:51:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "8324:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 341,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8324:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8323:6:0"
									},
									"scope": 669,
									"src": "8235:252:0",
									"stateMutability": "nonpayable",
									"superFunction": 51,
									"visibility": "public"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "8968:117:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 378,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "8987:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8987:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 380,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "8999:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 388,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "9045:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 381,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 207,
																			"src": "9008:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 384,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 382,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 684,
																				"src": "9020:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "9020:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9008:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 386,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 385,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "9032:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9008:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 93,
																"src": "9008:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9008:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 377,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8978:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8978:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "8978:79:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9074:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 376,
												"id": 393,
												"nodeType": "Return",
												"src": "9067:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n     * This is an alternative to `approve` that can be used as a mitigation for\nproblems described in `IERC20.approve`.\n     * Emits an `Approval` event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 395,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "8909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "8926:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8926:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8908:37:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "8962:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 374,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8962:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8961:6:0"
									},
									"scope": 669,
									"src": "8882:203:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "9663:122:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 405,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "9682:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9682:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 407,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "9694:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 415,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "9740:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 408,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 207,
																			"src": "9703:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 411,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 409,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 684,
																				"src": "9715:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "9715:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9703:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 413,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 412,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 397,
																		"src": "9727:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9703:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 111,
																"src": "9703:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9703:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 404,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "9673:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9673:84:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "9673:84:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9774:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 403,
												"id": 420,
												"nodeType": "Return",
												"src": "9767:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n     * This is an alternative to `approve` that can be used as a mitigation for\nproblems described in `IERC20.approve`.\n     * Emits an `Approval` event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 422,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "9599:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "9616:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9598:42:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "9657:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9657:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9656:6:0"
									},
									"scope": 669,
									"src": "9572:213:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "10338:343:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 432,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "10356:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10374:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10366:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10366:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10356:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10378:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 431,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															687,
															688
														],
														"referencedDeclaration": 688,
														"src": "10348:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10348:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "10348:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 441,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 426,
																"src": "10436:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10457:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10449:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10449:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10436:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10461:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															687,
															688
														],
														"referencedDeclaration": 688,
														"src": "10428:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10428:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "10428:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 449,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "10510:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 451,
														"indexExpression": {
															"argumentTypes": null,
															"id": 450,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "10520:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10510:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 456,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "10552:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 452,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "10530:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 454,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 453,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "10540:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10530:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 111,
															"src": "10530:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10530:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10510:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "10510:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 460,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "10569:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 462,
														"indexExpression": {
															"argumentTypes": null,
															"id": 461,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "10579:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10569:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 467,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "10617:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 463,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "10592:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 465,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 464,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "10602:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10592:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 93,
															"src": "10592:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10592:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10569:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "10569:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 472,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 424,
															"src": "10648:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 473,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 426,
															"src": "10656:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 474,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 428,
															"src": "10667:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 471,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "10639:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10639:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 476,
												"nodeType": "EmitStatement",
												"src": "10634:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to `transfer`, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a `Transfer` event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 478,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "10278:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "10294:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "10313:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10313:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10277:51:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:0"
									},
									"scope": 669,
									"src": "10259:422:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "11008:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 486,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "11026:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11045:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11037:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11037:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11026:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11049:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															687,
															688
														],
														"referencedDeclaration": 688,
														"src": "11018:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11018:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "11018:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 494,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "11094:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 497,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "11126:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 495,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "11109:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 93,
															"src": "11109:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11109:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11094:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "11094:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 501,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "11143:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 503,
														"indexExpression": {
															"argumentTypes": null,
															"id": 502,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "11153:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11143:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 508,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "11187:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 504,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "11164:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 506,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 505,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "11174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11164:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 93,
															"src": "11164:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11164:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11143:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "11143:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11226:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11218:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11218:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 516,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "11230:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 517,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "11239:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 512,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "11209:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11209:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "EmitStatement",
												"src": "11204:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a `Transfer` event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
									"id": 521,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "10966:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "10983:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10965:33:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11008:0:0"
									},
									"scope": 669,
									"src": "10951:302:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "11629:244:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 529,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "11647:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11666:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11658:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11658:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11647:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11670:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															687,
															688
														],
														"referencedDeclaration": 688,
														"src": "11639:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11639:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "11639:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 537,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "11717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 540,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "11749:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 538,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "11732:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 111,
															"src": "11732:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11732:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11717:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "11717:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 544,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "11765:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 546,
														"indexExpression": {
															"argumentTypes": null,
															"id": 545,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "11775:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11765:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 551,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "11809:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 547,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 201,
																	"src": "11786:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 549,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 548,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "11796:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11786:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 111,
															"src": "11786:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11786:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11765:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "11765:50:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 556,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "11839:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11856:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11848:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11848:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 560,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "11860:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 555,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "11830:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11830:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "EmitStatement",
												"src": "11825:41:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n     * Emits a `Transfer` event with `to` set to the zero address.\n     * Requirements\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 564,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "11588:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11588:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "11605:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11605:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11587:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11629:0:0"
									},
									"scope": 669,
									"src": "11573:300:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "12372:255:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 574,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "12390:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12407:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12399:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12399:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12390:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12411:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 573,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															687,
															688
														],
														"referencedDeclaration": 688,
														"src": "12382:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12382:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "12382:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 583,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "12468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12487:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12479:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12479:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12468:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12491:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															687,
															688
														],
														"referencedDeclaration": 688,
														"src": "12460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12460:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "12460:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 591,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "12539:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 594,
															"indexExpression": {
																"argumentTypes": null,
																"id": 592,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "12551:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12539:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 595,
														"indexExpression": {
															"argumentTypes": null,
															"id": 593,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "12558:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12539:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 596,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "12569:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12539:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "12539:35:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 600,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "12598:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 601,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "12605:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "12614:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "12589:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12589:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "12584:36:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n     * Emits an `Approval` event.\n     * Requirements:\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 606,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "12316:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12316:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "12331:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12331:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "12348:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12348:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12315:47:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12372:0:0"
									},
									"scope": 669,
									"src": "12298:329:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "12865:124:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 614,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "12881:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 615,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "12890:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 613,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "12875:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12875:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "12875:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 619,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "12916:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 620,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "12925:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12925:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 629,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "12974:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 622,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 207,
																			"src": "12937:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 624,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 623,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 608,
																			"src": "12949:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12937:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 627,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 625,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 684,
																			"src": "12958:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "12958:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12937:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 111,
																"src": "12937:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12937:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 618,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "12907:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12907:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "12907:75:0"
											}
										]
									},
									"documentation": "@dev Destoys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n     * See `_burn` and `_approve`.",
									"id": 634,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "12823:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "12840:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12840:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12822:33:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12865:0:0"
									},
									"scope": 669,
									"src": "12804:185:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "13095:134:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 647,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "13105:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 651,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 648,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "13117:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "13117:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13105:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 652,
														"indexExpression": {
															"argumentTypes": null,
															"id": 650,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "13129:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13105:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 653,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "13140:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13105:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "13105:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 656,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "13163:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13163:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 658,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "13175:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 659,
																	"name": "_allowances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "13184:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 662,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 660,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 684,
																		"src": "13196:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13196:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13184:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 664,
															"indexExpression": {
																"argumentTypes": null,
																"id": 663,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 636,
																"src": "13208:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13184:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 665,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13162:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,address,uint256)"
													}
												},
												"functionReturnParameters": 646,
												"id": 666,
												"nodeType": "Return",
												"src": "13155:62:0"
											}
										]
									},
									"documentation": null,
									"id": 668,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approveTest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "13020:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13020:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "13037:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13019:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "13068:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13068:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "13077:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "13086:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13067:27:0"
									},
									"scope": 669,
									"src": "12999:230:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 670,
							"src": "4941:8290:0"
						}
					],
					"src": "0:13232:0"
				},
				"id": 0
			}
		}
	}
}