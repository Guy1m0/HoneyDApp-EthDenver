{
	"id": "c156660d70418c2e8f9b0cacbd5be827",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TF_erc20.sol": {
				"content": "pragma solidity ^0.4.24;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see `ERC20Detailed`.\n */\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, \"SafeMath: division by zero\");\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n}\n\n/**\n * @dev Implementation of the `IERC20` interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using `_mint`.\n * For a generic mechanism see `ERC20Mintable`.\n *\n * *For a detailed writeup see our guide [How to implement supply\n * mechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).*\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See `IERC20.approve`.\n */\ncontract TF is IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    // NOTE Start of https://github.com/OpenZeppelin/openzeppelin-solidity/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\n    string private _name = \"zTrustFund\";\n    string private _symbol = \"zTF\";\n    uint8 private _decimals = 18;\n\n    constructor () public {\n\n        _mint(msg.sender, 100000 * 10 ** uint256(_decimals)); // CAUTION!\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei.\n     *\n     * > Note that this information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * `IERC20.balanceOf` and `IERC20.transfer`.\n     */\n    function decimals() public view returns (uint8) {\n        return _decimals;\n    }\n    // NOTE End of https://github.com/OpenZeppelin/openzeppelin-solidity/blob/v2.3.0/contracts/token/ERC20/ERC20Detailed.sol\n\n    uint256 private _totalSupply;\n\n    /**\n     * @dev See `IERC20.totalSupply`.\n     */\n    function totalSupply() public view returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See `IERC20.balanceOf`.\n     */\n    function balanceOf(address account) public view returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See `IERC20.transfer`.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public returns (bool) {\n        _transfer(msg.sender, recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See `IERC20.allowance`.\n     */\n    function allowance(address owner, address spender) public view returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See `IERC20.approve`.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See `IERC20.transferFrom`.\n     *\n     * Emits an `Approval` event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of `ERC20`;\n     *\n     * Requirements:\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `value`.\n     * - the caller must have allowance for `sender`'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to `approve` that can be used as a mitigation for\n     * problems described in `IERC20.approve`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to `approve` that can be used as a mitigation for\n     * problems described in `IERC20.approve`.\n     *\n     * Emits an `Approval` event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to `transfer`, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a `Transfer` event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _balances[sender] = _balances[sender].sub(amount);\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a `Transfer` event with `from` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n     /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a `Transfer` event with `to` set to the zero address.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 value) internal {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _totalSupply = _totalSupply.sub(value);\n        _balances[account] = _balances[account].sub(value);\n        emit Transfer(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     *\n     * This is internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an `Approval` event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    /**\n     * @dev Destoys `amount` tokens from `account`.`amount` is then deducted\n     * from the caller's allowance.\n     *\n     * See `_burn` and `_approve`.\n     */\n    function _burnFrom(address account, uint256 amount) internal {\n        _burn(account, amount);\n        _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount));\n    }\n    \n    function approveTest(address spender, uint256 value) public returns (address, address, uint256) {\n        _allowances[msg.sender][spender] = value;\n        return (msg.sender, spender, _allowances[msg.sender][spender]);\n    \n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/TF_erc20.sol": {
				"IERC20": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "",
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/TF_erc20.sol\":850:3788  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0xb\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":252:259   */\n  dup1\n    /* \"--CODEGEN--\":246:260   */\n  mload\n    /* \"--CODEGEN--\":243:244   */\n  0x0\n    /* \"--CODEGEN--\":238:261   */\n  byte\n    /* \"--CODEGEN--\":232:236   */\n  0x73\n    /* \"--CODEGEN--\":229:262   */\n  eq\n    /* \"--CODEGEN--\":270:271   */\n  0x0\n    /* \"--CODEGEN--\":265:285   */\n  dup2\n  eq\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":222:285   */\n  jump(tag_1)\n    /* \"--CODEGEN--\":265:285   */\ntag_2:\n    /* \"--CODEGEN--\":274:283   */\n  invalid\n    /* \"--CODEGEN--\":222:285   */\ntag_1:\n  pop\n    /* \"--CODEGEN--\":298:307   */\n  address\n    /* \"--CODEGEN--\":295:296   */\n  0x0\n    /* \"--CODEGEN--\":288:308   */\n  mstore\n    /* \"--CODEGEN--\":328:332   */\n  0x73\n    /* \"--CODEGEN--\":319:326   */\n  dup2\n    /* \"--CODEGEN--\":311:333   */\n  mstore8\n    /* \"--CODEGEN--\":352:359   */\n  dup3\n    /* \"--CODEGEN--\":343:350   */\n  dup2\n    /* \"--CODEGEN--\":336:360   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TF_erc20.sol\":850:3788  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x0\n      dup1\n      revert\n\n    auxdata: 0xa165627a7a72305820b86ab769d6b2981f66128b9f7afa9aabbb4df6493e9a8d6a953883b3563a71520029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820b86ab769d6b2981f66128b9f7afa9aabbb4df6493e9a8d6a953883b3563a71520029",
							"opcodes": "PUSH1 0x4C PUSH1 0x2C PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x0 DUP2 EQ PUSH1 0x1C JUMPI PUSH1 0x1E JUMP JUMPDEST INVALID JUMPDEST POP ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN STOP PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb8 PUSH11 0xB769D6B2981F66128B9F7A STATICCALL SWAP11 0xab 0xbb 0x4d 0xf6 0x49 RETURNDATACOPY SWAP11 DUP14 PUSH11 0x953883B3563A7152002900 ",
							"sourceMap": "850:2938:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820b86ab769d6b2981f66128b9f7afa9aabbb4df6493e9a8d6a953883b3563a71520029",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb8 PUSH11 0xB769D6B2981F66128B9F7A STATICCALL SWAP11 0xab 0xbb 0x4d 0xf6 0x49 RETURNDATACOPY SWAP11 DUP14 PUSH11 0x953883B3563A7152002900 ",
							"sourceMap": "850:2938:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "15200",
								"executionCost": "116",
								"totalCost": "15316"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 850,
									"end": 3788,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 850,
									"end": 3788,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 252,
									"end": 259,
									"name": "DUP1"
								},
								{
									"begin": 246,
									"end": 260,
									"name": "MLOAD"
								},
								{
									"begin": 243,
									"end": 244,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 238,
									"end": 261,
									"name": "BYTE"
								},
								{
									"begin": 232,
									"end": 236,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 229,
									"end": 262,
									"name": "EQ"
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "DUP2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "EQ"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPI"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMP"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 265,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 274,
									"end": 283,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "JUMPDEST"
								},
								{
									"begin": 222,
									"end": 285,
									"name": "POP"
								},
								{
									"begin": 298,
									"end": 307,
									"name": "ADDRESS"
								},
								{
									"begin": 295,
									"end": 296,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 288,
									"end": 308,
									"name": "MSTORE"
								},
								{
									"begin": 328,
									"end": 332,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 319,
									"end": 326,
									"name": "DUP2"
								},
								{
									"begin": 311,
									"end": 333,
									"name": "MSTORE8"
								},
								{
									"begin": 352,
									"end": 359,
									"name": "DUP3"
								},
								{
									"begin": 343,
									"end": 350,
									"name": "DUP2"
								},
								{
									"begin": 336,
									"end": 360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820b86ab769d6b2981f66128b9f7afa9aabbb4df6493e9a8d6a953883b3563a71520029",
									".code": [
										{
											"begin": 850,
											"end": 3788,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 850,
											"end": 3788,
											"name": "ADDRESS"
										},
										{
											"begin": 850,
											"end": 3788,
											"name": "EQ"
										},
										{
											"begin": 850,
											"end": 3788,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 850,
											"end": 3788,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 850,
											"end": 3788,
											"name": "MSTORE"
										},
										{
											"begin": 850,
											"end": 3788,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 850,
											"end": 3788,
											"name": "DUP1"
										},
										{
											"begin": 850,
											"end": 3788,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/TF_erc20.sol\":\"SafeMath\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TF_erc20.sol\":{\"keccak256\":\"0x55ddb7f092bae2991d765a90909029d1a474e5facfca3adc25af3d4e863103d6\",\"urls\":[\"bzzr://5bf425c8fcf20324010a13f23c0c476da29f40a0cc08c444beadd07cf8f502f6\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				},
				"TF": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "sender",
									"type": "address"
								},
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveTest",
							"outputs": [
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "address"
								},
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "spender",
									"type": "address"
								},
								{
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "recipient",
									"type": "address"
								},
								{
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "owner",
									"type": "address"
								},
								{
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {
							"allowance(address,address)": {
								"details": "See `IERC20.allowance`."
							},
							"approve(address,uint256)": {
								"details": "See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See `IERC20.balanceOf`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See `IERC20.totalSupply`."
							},
							"transfer(address,uint256)": {
								"details": "See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							}
						}
					},
					"evm": {
						"assembly": "    /* \"contracts/TF_erc20.sol\":4939:13209  contract TF is IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TF_erc20.sol\":5256:5291  string private _name = \"zTrustFund\" */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  0xa\n  dup2\n  mstore\n  0x20\n  add\n  0x7a547275737446756e6400000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_1\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_2)\ntag_1:\n  pop\n    /* \"contracts/TF_erc20.sol\":5297:5327  string private _symbol = \"zTF\" */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  0x3\n  dup2\n  mstore\n  0x20\n  add\n  0x7a54460000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x3\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_3\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_2)\ntag_3:\n  pop\n    /* \"contracts/TF_erc20.sol\":5359:5361  18 */\n  0x12\n    /* \"contracts/TF_erc20.sol\":5333:5361  uint8 private _decimals = 18 */\n  0x4\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/TF_erc20.sol\":5368:5472  constructor () public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_4:\n    /* \"contracts/TF_erc20.sol\":5368:5472  constructor () public {... */\n  pop\n    /* \"contracts/TF_erc20.sol\":5401:5453  _mint(msg.sender, 100000 * 10 ** uint256(_decimals)) */\n  tag_7\n    /* \"contracts/TF_erc20.sol\":5407:5417  msg.sender */\n  caller\n    /* \"contracts/TF_erc20.sol\":5442:5451  _decimals */\n  0x4\n  0x0\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"contracts/TF_erc20.sol\":5434:5452  uint256(_decimals) */\n  0xff\n  and\n    /* \"contracts/TF_erc20.sol\":5428:5430  10 */\n  0xa\n    /* \"contracts/TF_erc20.sol\":5428:5452  10 ** uint256(_decimals) */\n  exp\n    /* \"contracts/TF_erc20.sol\":5419:5425  100000 */\n  0x186a0\n    /* \"contracts/TF_erc20.sol\":5419:5452  100000 * 10 ** uint256(_decimals) */\n  mul\n    /* \"contracts/TF_erc20.sol\":5401:5406  _mint */\n  mul(0x100000000, tag_8)\n    /* \"contracts/TF_erc20.sol\":5401:5453  _mint(msg.sender, 100000 * 10 ** uint256(_decimals)) */\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_7:\n    /* \"contracts/TF_erc20.sol\":4939:13209  contract TF is IERC20 {... */\n  jump(tag_9)\n    /* \"contracts/TF_erc20.sol\":10929:11231  function _mint(address account, uint256 amount) internal {... */\ntag_8:\n    /* \"contracts/TF_erc20.sol\":11023:11024  0 */\n  0x0\n    /* \"contracts/TF_erc20.sol\":11004:11025  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/TF_erc20.sol\":11004:11011  account */\n  dup3\n    /* \"contracts/TF_erc20.sol\":11004:11025  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"contracts/TF_erc20.sol\":10996:11061  require(account != address(0), \"ERC20: mint to the zero address\") */\n  iszero\n  iszero\n  tag_11\n  jumpi\n  mload(0x40)\n  0x8c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x4\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1f\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"contracts/TF_erc20.sol\":11087:11111  _totalSupply.add(amount) */\n  tag_12\n    /* \"contracts/TF_erc20.sol\":11104:11110  amount */\n  dup2\n    /* \"contracts/TF_erc20.sol\":11087:11099  _totalSupply */\n  sload(0x5)\n    /* \"contracts/TF_erc20.sol\":11087:11103  _totalSupply.add */\n  or(tag_0_76, mul(0x100000000, tag_13))\n  swap1\n    /* \"contracts/TF_erc20.sol\":11087:11111  _totalSupply.add(amount) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_12:\n    /* \"contracts/TF_erc20.sol\":11072:11084  _totalSupply */\n  0x5\n    /* \"contracts/TF_erc20.sol\":11072:11111  _totalSupply = _totalSupply.add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TF_erc20.sol\":11142:11172  _balances[account].add(amount) */\n  tag_14\n    /* \"contracts/TF_erc20.sol\":11165:11171  amount */\n  dup2\n    /* \"contracts/TF_erc20.sol\":11142:11151  _balances */\n  0x0\n    /* \"contracts/TF_erc20.sol\":11142:11160  _balances[account] */\n  dup1\n    /* \"contracts/TF_erc20.sol\":11152:11159  account */\n  dup6\n    /* \"contracts/TF_erc20.sol\":11142:11160  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n  sload\n    /* \"contracts/TF_erc20.sol\":11142:11164  _balances[account].add */\n  or(tag_0_76, mul(0x100000000, tag_13))\n  swap1\n    /* \"contracts/TF_erc20.sol\":11142:11172  _balances[account].add(amount) */\n  swap2\n  swap1\n  0x100000000\n  swap1\n  div\n  jump\t// in\ntag_14:\n    /* \"contracts/TF_erc20.sol\":11121:11130  _balances */\n  0x0\n    /* \"contracts/TF_erc20.sol\":11121:11139  _balances[account] */\n  dup1\n    /* \"contracts/TF_erc20.sol\":11131:11138  account */\n  dup5\n    /* \"contracts/TF_erc20.sol\":11121:11139  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"contracts/TF_erc20.sol\":11121:11172  _balances[account] = _balances[account].add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/TF_erc20.sol\":11208:11215  account */\n  dup2\n    /* \"contracts/TF_erc20.sol\":11187:11224  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/TF_erc20.sol\":11204:11205  0 */\n  0x0\n    /* \"contracts/TF_erc20.sol\":11187:11224  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/TF_erc20.sol\":11217:11223  amount */\n  dup4\n    /* \"contracts/TF_erc20.sol\":11187:11224  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/TF_erc20.sol\":10929:11231  function _mint(address account, uint256 amount) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/TF_erc20.sol\":1095:1271  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_13:\n    /* \"contracts/TF_erc20.sol\":1153:1160  uint256 */\n  0x0\n    /* \"contracts/TF_erc20.sol\":1172:1181  uint256 c */\n  dup1\n    /* \"contracts/TF_erc20.sol\":1188:1189  b */\n  dup3\n    /* \"contracts/TF_erc20.sol\":1184:1185  a */\n  dup5\n    /* \"contracts/TF_erc20.sol\":1184:1189  a + b */\n  add\n    /* \"contracts/TF_erc20.sol\":1172:1189  uint256 c = a + b */\n  swap1\n  pop\n    /* \"contracts/TF_erc20.sol\":1212:1213  a */\n  dup4\n    /* \"contracts/TF_erc20.sol\":1207:1208  c */\n  dup2\n    /* \"contracts/TF_erc20.sol\":1207:1213  c >= a */\n  lt\n  iszero\n    /* \"contracts/TF_erc20.sol\":1199:1245  require(c >= a, \"SafeMath: addition overflow\") */\n  iszero\n  iszero\n  tag_16\n  jumpi\n  mload(0x40)\n  0x8c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x4\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1b\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n    /* \"contracts/TF_erc20.sol\":1263:1264  c */\n  dup1\n    /* \"contracts/TF_erc20.sol\":1256:1264  return c */\n  swap2\n  pop\n    /* \"contracts/TF_erc20.sol\":1095:1271  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  pop\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/TF_erc20.sol\":4939:13209  contract TF is IERC20 {... */\ntag_2:\n  dup3\n  dup1\n  sload\n  0x1\n  dup2\n  0x1\n  and\n  iszero\n  0x100\n  mul\n  sub\n  and\n  0x2\n  swap1\n  div\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_18\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_17)\ntag_18:\n  dup3\n  dup1\n  add\n  0x1\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_17\n  jumpi\n  swap2\n  dup3\n  add\ntag_19:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_20\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_19)\ntag_20:\ntag_17:\n  pop\n  swap1\n  pop\n  tag_21\n  swap2\n  swap1\n  jump\t// in(tag_22)\ntag_21:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  tag_23\n  swap2\n  swap1\ntag_24:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_25\n  jumpi\n  0x0\n  dup2\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_24)\ntag_25:\n  pop\n  swap1\n  jump\ntag_23:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TF_erc20.sol\":4939:13209  contract TF is IERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x6fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x95ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa25fb97a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/TF_erc20.sol\":5537:5618  function name() public view returns (string memory) {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_14:\n        /* \"contracts/TF_erc20.sol\":5537:5618  function name() public view returns (string memory) {... */\n      pop\n      tag_15\n      jump(tag_16)\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_17:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_17)\n    tag_18:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/TF_erc20.sol\":5537:5618  function name() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":7611:7756  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_21:\n        /* \"contracts/TF_erc20.sol\":7611:7756  function approve(address spender, uint256 value) public returns (bool) {... */\n      pop\n      tag_22\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_23)\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":6672:6761  function totalSupply() public view returns (uint256) {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n        /* \"contracts/TF_erc20.sol\":6672:6761  function totalSupply() public view returns (uint256) {... */\n      pop\n      tag_25\n      jump(tag_26)\n    tag_25:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":8213:8465  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"contracts/TF_erc20.sol\":8213:8465  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      pop\n      tag_28\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_29)\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":6371:6452  function decimals() public view returns (uint8) {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_30:\n        /* \"contracts/TF_erc20.sol\":6371:6452  function decimals() public view returns (uint8) {... */\n      pop\n      tag_31\n      jump(tag_32)\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":8860:9063  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_33:\n        /* \"contracts/TF_erc20.sol\":8860:9063  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      pop\n      tag_34\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_35)\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":6819:6927  function balanceOf(address account) public view returns (uint256) {... */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_36:\n        /* \"contracts/TF_erc20.sol\":6819:6927  function balanceOf(address account) public view returns (uint256) {... */\n      pop\n      tag_37\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_38)\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":5731:5816  function symbol() public view returns (string memory) {... */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_39:\n        /* \"contracts/TF_erc20.sol\":5731:5816  function symbol() public view returns (string memory) {... */\n      pop\n      tag_40\n      jump(tag_41)\n    tag_40:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_42:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_42)\n    tag_43:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/TF_erc20.sol\":5731:5816  function symbol() public view returns (string memory) {... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_45\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_45:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":12977:13207  function approveTest(address spender, uint256 value) public returns (address, address, uint256) {... */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_46:\n        /* \"contracts/TF_erc20.sol\":12977:13207  function approveTest(address spender, uint256 value) public returns (address, address, uint256) {... */\n      pop\n      tag_47\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_48)\n    tag_47:\n      mload(0x40)\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":9550:9763  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_49:\n        /* \"contracts/TF_erc20.sol\":9550:9763  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      pop\n      tag_50\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_51)\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":7130:7283  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_52\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_52:\n        /* \"contracts/TF_erc20.sol\":7130:7283  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      pop\n      tag_53\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_54)\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":7341:7473  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_13:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_55:\n        /* \"contracts/TF_erc20.sol\":7341:7473  function allowance(address owner, address spender) public view returns (uint256) {... */\n      pop\n      tag_56\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_57)\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TF_erc20.sol\":5537:5618  function name() public view returns (string memory) {... */\n    tag_16:\n        /* \"contracts/TF_erc20.sol\":5574:5580  string */\n      0x60\n        /* \"contracts/TF_erc20.sol\":5606:5611  _name */\n      0x2\n        /* \"contracts/TF_erc20.sol\":5599:5611  return _name */\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_59\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_60\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_59)\n    tag_60:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_61:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_61\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":5537:5618  function name() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":7611:7756  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_23:\n        /* \"contracts/TF_erc20.sol\":7676:7680  bool */\n      0x0\n        /* \"contracts/TF_erc20.sol\":7692:7728  _approve(msg.sender, spender, value) */\n      tag_63\n        /* \"contracts/TF_erc20.sol\":7701:7711  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":7713:7720  spender */\n      dup5\n        /* \"contracts/TF_erc20.sol\":7722:7727  value */\n      dup5\n        /* \"contracts/TF_erc20.sol\":7692:7700  _approve */\n      tag_64\n        /* \"contracts/TF_erc20.sol\":7692:7728  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_63:\n        /* \"contracts/TF_erc20.sol\":7745:7749  true */\n      0x1\n        /* \"contracts/TF_erc20.sol\":7738:7749  return true */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":7611:7756  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":6672:6761  function totalSupply() public view returns (uint256) {... */\n    tag_26:\n        /* \"contracts/TF_erc20.sol\":6716:6723  uint256 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":6742:6754  _totalSupply */\n      sload(0x5)\n        /* \"contracts/TF_erc20.sol\":6735:6754  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":6672:6761  function totalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":8213:8465  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n    tag_29:\n        /* \"contracts/TF_erc20.sol\":8302:8306  bool */\n      0x0\n        /* \"contracts/TF_erc20.sol\":8318:8354  _transfer(sender, recipient, amount) */\n      tag_67\n        /* \"contracts/TF_erc20.sol\":8328:8334  sender */\n      dup5\n        /* \"contracts/TF_erc20.sol\":8336:8345  recipient */\n      dup5\n        /* \"contracts/TF_erc20.sol\":8347:8353  amount */\n      dup5\n        /* \"contracts/TF_erc20.sol\":8318:8327  _transfer */\n      tag_68\n        /* \"contracts/TF_erc20.sol\":8318:8354  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_67:\n        /* \"contracts/TF_erc20.sol\":8364:8437  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      tag_69\n        /* \"contracts/TF_erc20.sol\":8373:8379  sender */\n      dup5\n        /* \"contracts/TF_erc20.sol\":8381:8391  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":8393:8436  _allowances[sender][msg.sender].sub(amount) */\n      tag_70\n        /* \"contracts/TF_erc20.sol\":8429:8435  amount */\n      dup6\n        /* \"contracts/TF_erc20.sol\":8393:8404  _allowances */\n      0x1\n        /* \"contracts/TF_erc20.sol\":8393:8412  _allowances[sender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":8405:8411  sender */\n      dup11\n        /* \"contracts/TF_erc20.sol\":8393:8412  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":8393:8424  _allowances[sender][msg.sender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":8413:8423  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":8393:8424  _allowances[sender][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TF_erc20.sol\":8393:8428  _allowances[sender][msg.sender].sub */\n      tag_71\n      swap1\n        /* \"contracts/TF_erc20.sol\":8393:8436  _allowances[sender][msg.sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"contracts/TF_erc20.sol\":8364:8372  _approve */\n      tag_64\n        /* \"contracts/TF_erc20.sol\":8364:8437  _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount)) */\n      jump\t// in\n    tag_69:\n        /* \"contracts/TF_erc20.sol\":8454:8458  true */\n      0x1\n        /* \"contracts/TF_erc20.sol\":8447:8458  return true */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":8213:8465  function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":6371:6452  function decimals() public view returns (uint8) {... */\n    tag_32:\n        /* \"contracts/TF_erc20.sol\":6412:6417  uint8 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":6436:6445  _decimals */\n      0x4\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TF_erc20.sol\":6429:6445  return _decimals */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":6371:6452  function decimals() public view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":8860:9063  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n    tag_35:\n        /* \"contracts/TF_erc20.sol\":8940:8944  bool */\n      0x0\n        /* \"contracts/TF_erc20.sol\":8956:9035  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      tag_74\n        /* \"contracts/TF_erc20.sol\":8965:8975  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":8977:8984  spender */\n      dup5\n        /* \"contracts/TF_erc20.sol\":8986:9034  _allowances[msg.sender][spender].add(addedValue) */\n      tag_75\n        /* \"contracts/TF_erc20.sol\":9023:9033  addedValue */\n      dup6\n        /* \"contracts/TF_erc20.sol\":8986:8997  _allowances */\n      0x1\n        /* \"contracts/TF_erc20.sol\":8986:9009  _allowances[msg.sender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":8998:9008  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":8986:9009  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":8986:9018  _allowances[msg.sender][spender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":9010:9017  spender */\n      dup10\n        /* \"contracts/TF_erc20.sol\":8986:9018  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TF_erc20.sol\":8986:9022  _allowances[msg.sender][spender].add */\n      tag_76\n      swap1\n        /* \"contracts/TF_erc20.sol\":8986:9034  _allowances[msg.sender][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_75:\n        /* \"contracts/TF_erc20.sol\":8956:8964  _approve */\n      tag_64\n        /* \"contracts/TF_erc20.sol\":8956:9035  _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue)) */\n      jump\t// in\n    tag_74:\n        /* \"contracts/TF_erc20.sol\":9052:9056  true */\n      0x1\n        /* \"contracts/TF_erc20.sol\":9045:9056  return true */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":8860:9063  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":6819:6927  function balanceOf(address account) public view returns (uint256) {... */\n    tag_38:\n        /* \"contracts/TF_erc20.sol\":6876:6883  uint256 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":6902:6911  _balances */\n      dup1\n        /* \"contracts/TF_erc20.sol\":6902:6920  _balances[account] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":6912:6919  account */\n      dup4\n        /* \"contracts/TF_erc20.sol\":6902:6920  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TF_erc20.sol\":6895:6920  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":6819:6927  function balanceOf(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":5731:5816  function symbol() public view returns (string memory) {... */\n    tag_41:\n        /* \"contracts/TF_erc20.sol\":5770:5776  string */\n      0x60\n        /* \"contracts/TF_erc20.sol\":5802:5809  _symbol */\n      0x3\n        /* \"contracts/TF_erc20.sol\":5795:5809  return _symbol */\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x1\n      dup2\n      0x1\n      and\n      iszero\n      0x100\n      mul\n      sub\n      and\n      0x2\n      swap1\n      div\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x1\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":5731:5816  function symbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":12977:13207  function approveTest(address spender, uint256 value) public returns (address, address, uint256) {... */\n    tag_48:\n        /* \"contracts/TF_erc20.sol\":13046:13053  address */\n      0x0\n        /* \"contracts/TF_erc20.sol\":13055:13062  address */\n      dup1\n        /* \"contracts/TF_erc20.sol\":13064:13071  uint256 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":13118:13123  value */\n      dup4\n        /* \"contracts/TF_erc20.sol\":13083:13094  _allowances */\n      0x1\n        /* \"contracts/TF_erc20.sol\":13083:13106  _allowances[msg.sender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":13095:13105  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":13083:13106  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":13083:13115  _allowances[msg.sender][spender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":13107:13114  spender */\n      dup8\n        /* \"contracts/TF_erc20.sol\":13083:13115  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":13083:13123  _allowances[msg.sender][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TF_erc20.sol\":13141:13151  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":13153:13160  spender */\n      dup6\n        /* \"contracts/TF_erc20.sol\":13162:13173  _allowances */\n      0x1\n        /* \"contracts/TF_erc20.sol\":13162:13185  _allowances[msg.sender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":13174:13184  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":13162:13185  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":13162:13194  _allowances[msg.sender][spender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":13186:13193  spender */\n      dup9\n        /* \"contracts/TF_erc20.sol\":13162:13194  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TF_erc20.sol\":13133:13195  return (msg.sender, spender, _allowances[msg.sender][spender]) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/TF_erc20.sol\":12977:13207  function approveTest(address spender, uint256 value) public returns (address, address, uint256) {... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":9550:9763  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n    tag_51:\n        /* \"contracts/TF_erc20.sol\":9635:9639  bool */\n      0x0\n        /* \"contracts/TF_erc20.sol\":9651:9735  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      tag_84\n        /* \"contracts/TF_erc20.sol\":9660:9670  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":9672:9679  spender */\n      dup5\n        /* \"contracts/TF_erc20.sol\":9681:9734  _allowances[msg.sender][spender].sub(subtractedValue) */\n      tag_85\n        /* \"contracts/TF_erc20.sol\":9718:9733  subtractedValue */\n      dup6\n        /* \"contracts/TF_erc20.sol\":9681:9692  _allowances */\n      0x1\n        /* \"contracts/TF_erc20.sol\":9681:9704  _allowances[msg.sender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":9693:9703  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":9681:9704  _allowances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":9681:9713  _allowances[msg.sender][spender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":9705:9712  spender */\n      dup10\n        /* \"contracts/TF_erc20.sol\":9681:9713  _allowances[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TF_erc20.sol\":9681:9717  _allowances[msg.sender][spender].sub */\n      tag_71\n      swap1\n        /* \"contracts/TF_erc20.sol\":9681:9734  _allowances[msg.sender][spender].sub(subtractedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"contracts/TF_erc20.sol\":9651:9659  _approve */\n      tag_64\n        /* \"contracts/TF_erc20.sol\":9651:9735  _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue)) */\n      jump\t// in\n    tag_84:\n        /* \"contracts/TF_erc20.sol\":9752:9756  true */\n      0x1\n        /* \"contracts/TF_erc20.sol\":9745:9756  return true */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":9550:9763  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":7130:7283  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n    tag_54:\n        /* \"contracts/TF_erc20.sol\":7199:7203  bool */\n      0x0\n        /* \"contracts/TF_erc20.sol\":7215:7255  _transfer(msg.sender, recipient, amount) */\n      tag_87\n        /* \"contracts/TF_erc20.sol\":7225:7235  msg.sender */\n      caller\n        /* \"contracts/TF_erc20.sol\":7237:7246  recipient */\n      dup5\n        /* \"contracts/TF_erc20.sol\":7248:7254  amount */\n      dup5\n        /* \"contracts/TF_erc20.sol\":7215:7224  _transfer */\n      tag_68\n        /* \"contracts/TF_erc20.sol\":7215:7255  _transfer(msg.sender, recipient, amount) */\n      jump\t// in\n    tag_87:\n        /* \"contracts/TF_erc20.sol\":7272:7276  true */\n      0x1\n        /* \"contracts/TF_erc20.sol\":7265:7276  return true */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":7130:7283  function transfer(address recipient, uint256 amount) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":7341:7473  function allowance(address owner, address spender) public view returns (uint256) {... */\n    tag_57:\n        /* \"contracts/TF_erc20.sol\":7413:7420  uint256 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":7439:7450  _allowances */\n      0x1\n        /* \"contracts/TF_erc20.sol\":7439:7457  _allowances[owner] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":7451:7456  owner */\n      dup5\n        /* \"contracts/TF_erc20.sol\":7439:7457  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":7439:7466  _allowances[owner][spender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":7458:7465  spender */\n      dup4\n        /* \"contracts/TF_erc20.sol\":7439:7466  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TF_erc20.sol\":7432:7466  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":7341:7473  function allowance(address owner, address spender) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":12276:12605  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_64:\n        /* \"contracts/TF_erc20.sol\":12385:12386  0 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":12368:12387  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TF_erc20.sol\":12368:12373  owner */\n      dup4\n        /* \"contracts/TF_erc20.sol\":12368:12387  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TF_erc20.sol\":12360:12428  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      iszero\n      iszero\n      tag_90\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n      dup2\n      mstore\n      0x20\n      add\n      0x7265737300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"contracts/TF_erc20.sol\":12465:12466  0 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":12446:12467  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TF_erc20.sol\":12446:12453  spender */\n      dup3\n        /* \"contracts/TF_erc20.sol\":12446:12467  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TF_erc20.sol\":12438:12506  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      iszero\n      iszero\n      tag_91\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n      dup2\n      mstore\n      0x20\n      add\n      0x7373000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"contracts/TF_erc20.sol\":12547:12552  value */\n      dup1\n        /* \"contracts/TF_erc20.sol\":12517:12528  _allowances */\n      0x1\n        /* \"contracts/TF_erc20.sol\":12517:12535  _allowances[owner] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":12529:12534  owner */\n      dup6\n        /* \"contracts/TF_erc20.sol\":12517:12535  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":12517:12544  _allowances[owner][spender] */\n      0x0\n        /* \"contracts/TF_erc20.sol\":12536:12543  spender */\n      dup5\n        /* \"contracts/TF_erc20.sol\":12517:12544  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":12517:12552  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TF_erc20.sol\":12583:12590  spender */\n      dup2\n        /* \"contracts/TF_erc20.sol\":12567:12598  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TF_erc20.sol\":12576:12581  owner */\n      dup4\n        /* \"contracts/TF_erc20.sol\":12567:12598  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/TF_erc20.sol\":12592:12597  value */\n      dup4\n        /* \"contracts/TF_erc20.sol\":12567:12598  Approval(owner, spender, value) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TF_erc20.sol\":12276:12605  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":10237:10659  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_68:\n        /* \"contracts/TF_erc20.sol\":10352:10353  0 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":10334:10354  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TF_erc20.sol\":10334:10340  sender */\n      dup4\n        /* \"contracts/TF_erc20.sol\":10334:10354  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TF_erc20.sol\":10326:10396  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      iszero\n      iszero\n      tag_93\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n      dup2\n      mstore\n      0x20\n      add\n      0x6472657373000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"contracts/TF_erc20.sol\":10435:10436  0 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":10414:10437  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TF_erc20.sol\":10414:10423  recipient */\n      dup3\n        /* \"contracts/TF_erc20.sol\":10414:10437  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/TF_erc20.sol\":10406:10477  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      iszero\n      iszero\n      tag_94\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n      dup2\n      mstore\n      0x20\n      add\n      0x6573730000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"contracts/TF_erc20.sol\":10508:10537  _balances[sender].sub(amount) */\n      tag_95\n        /* \"contracts/TF_erc20.sol\":10530:10536  amount */\n      dup2\n        /* \"contracts/TF_erc20.sol\":10508:10517  _balances */\n      0x0\n        /* \"contracts/TF_erc20.sol\":10508:10525  _balances[sender] */\n      dup1\n        /* \"contracts/TF_erc20.sol\":10518:10524  sender */\n      dup7\n        /* \"contracts/TF_erc20.sol\":10508:10525  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TF_erc20.sol\":10508:10529  _balances[sender].sub */\n      tag_71\n      swap1\n        /* \"contracts/TF_erc20.sol\":10508:10537  _balances[sender].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_95:\n        /* \"contracts/TF_erc20.sol\":10488:10497  _balances */\n      0x0\n        /* \"contracts/TF_erc20.sol\":10488:10505  _balances[sender] */\n      dup1\n        /* \"contracts/TF_erc20.sol\":10498:10504  sender */\n      dup6\n        /* \"contracts/TF_erc20.sol\":10488:10505  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":10488:10537  _balances[sender] = _balances[sender].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TF_erc20.sol\":10570:10602  _balances[recipient].add(amount) */\n      tag_96\n        /* \"contracts/TF_erc20.sol\":10595:10601  amount */\n      dup2\n        /* \"contracts/TF_erc20.sol\":10570:10579  _balances */\n      0x0\n        /* \"contracts/TF_erc20.sol\":10570:10590  _balances[recipient] */\n      dup1\n        /* \"contracts/TF_erc20.sol\":10580:10589  recipient */\n      dup6\n        /* \"contracts/TF_erc20.sol\":10570:10590  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"contracts/TF_erc20.sol\":10570:10594  _balances[recipient].add */\n      tag_76\n      swap1\n        /* \"contracts/TF_erc20.sol\":10570:10602  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"contracts/TF_erc20.sol\":10547:10556  _balances */\n      0x0\n        /* \"contracts/TF_erc20.sol\":10547:10567  _balances[recipient] */\n      dup1\n        /* \"contracts/TF_erc20.sol\":10557:10566  recipient */\n      dup5\n        /* \"contracts/TF_erc20.sol\":10547:10567  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"contracts/TF_erc20.sol\":10547:10602  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TF_erc20.sol\":10634:10643  recipient */\n      dup2\n        /* \"contracts/TF_erc20.sol\":10617:10652  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TF_erc20.sol\":10626:10632  sender */\n      dup4\n        /* \"contracts/TF_erc20.sol\":10617:10652  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/TF_erc20.sol\":10645:10651  amount */\n      dup4\n        /* \"contracts/TF_erc20.sol\":10617:10652  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/TF_erc20.sol\":10237:10659  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":1535:1714  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_71:\n        /* \"contracts/TF_erc20.sol\":1593:1600  uint256 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":1671:1680  uint256 c */\n      dup1\n        /* \"contracts/TF_erc20.sol\":1625:1626  a */\n      dup4\n        /* \"contracts/TF_erc20.sol\":1620:1621  b */\n      dup4\n        /* \"contracts/TF_erc20.sol\":1620:1626  b <= a */\n      gt\n      iszero\n        /* \"contracts/TF_erc20.sol\":1612:1661  require(b <= a, \"SafeMath: subtraction overflow\") */\n      iszero\n      iszero\n      tag_98\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"contracts/TF_erc20.sol\":1687:1688  b */\n      dup3\n        /* \"contracts/TF_erc20.sol\":1683:1684  a */\n      dup5\n        /* \"contracts/TF_erc20.sol\":1683:1688  a - b */\n      sub\n        /* \"contracts/TF_erc20.sol\":1671:1688  uint256 c = a - b */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":1706:1707  c */\n      dup1\n        /* \"contracts/TF_erc20.sol\":1699:1707  return c */\n      swap2\n      pop\n        /* \"contracts/TF_erc20.sol\":1535:1714  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TF_erc20.sol\":1095:1271  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"contracts/TF_erc20.sol\":1153:1160  uint256 */\n      0x0\n        /* \"contracts/TF_erc20.sol\":1172:1181  uint256 c */\n      dup1\n        /* \"contracts/TF_erc20.sol\":1188:1189  b */\n      dup3\n        /* \"contracts/TF_erc20.sol\":1184:1185  a */\n      dup5\n        /* \"contracts/TF_erc20.sol\":1184:1189  a + b */\n      add\n        /* \"contracts/TF_erc20.sol\":1172:1189  uint256 c = a + b */\n      swap1\n      pop\n        /* \"contracts/TF_erc20.sol\":1212:1213  a */\n      dup4\n        /* \"contracts/TF_erc20.sol\":1207:1208  c */\n      dup2\n        /* \"contracts/TF_erc20.sol\":1207:1213  c >= a */\n      lt\n      iszero\n        /* \"contracts/TF_erc20.sol\":1199:1245  require(c >= a, \"SafeMath: addition overflow\") */\n      iszero\n      iszero\n      tag_100\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \"contracts/TF_erc20.sol\":1263:1264  c */\n      dup1\n        /* \"contracts/TF_erc20.sol\":1256:1264  return c */\n      swap2\n      pop\n        /* \"contracts/TF_erc20.sol\":1095:1271  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058209ed99280004106fd560003400522d318bb0653ed651de892ed30fcbc97a808710029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526040805190810160405280600a81526020017f7a547275737446756e640000000000000000000000000000000000000000000081525060029080519060200190620000519291906200036e565b506040805190810160405280600381526020017f7a54460000000000000000000000000000000000000000000000000000000000815250600390805190602001906200009f9291906200036e565b506012600460006101000a81548160ff021916908360ff160217905550348015620000c957600080fd5b50620000ff33600460009054906101000a900460ff1660ff16600a0a620186a00262000105640100000000026401000000009004565b6200041d565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515620001ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b620001d081600554620002e36401000000000262001189179091906401000000009004565b60058190555062000237816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054620002e36401000000000262001189179091906401000000009004565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600080828401905083811015151562000364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003b157805160ff1916838001178555620003e2565b82800160010185558215620003e2579182015b82811115620003e1578251825591602001919060010190620003c4565b5b509050620003f19190620003f5565b5090565b6200041a91905b8082111562000416576000816000905550600101620003fc565b5090565b90565b61123f806200042d6000396000f3006080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100bf578063095ea7b31461014f57806318160ddd146101b457806323b872dd146101df578063313ce56714610264578063395093511461029557806370a08231146102fa57806395d89b4114610351578063a25fb97a146103e1578063a457c2d7146104a8578063a9059cbb1461050d578063dd62ed3e14610572575b600080fd5b3480156100cb57600080fd5b506100d46105e9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101145780820151818401526020810190506100f9565b50505050905090810190601f1680156101415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015b57600080fd5b5061019a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061068b565b604051808215151515815260200191505060405180910390f35b3480156101c057600080fd5b506101c96106a2565b6040518082815260200191505060405180910390f35b3480156101eb57600080fd5b5061024a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106ac565b604051808215151515815260200191505060405180910390f35b34801561027057600080fd5b5061027961075d565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102a157600080fd5b506102e0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610774565b604051808215151515815260200191505060405180910390f35b34801561030657600080fd5b5061033b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610819565b6040518082815260200191505060405180910390f35b34801561035d57600080fd5b50610366610861565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103a657808201518184015260208101905061038b565b50505050905090810190601f1680156103d35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103ed57600080fd5b5061042c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610903565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b3480156104b457600080fd5b506104f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a15565b604051808215151515815260200191505060405180910390f35b34801561051957600080fd5b50610558600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aba565b604051808215151515815260200191505060405180910390f35b34801561057e57600080fd5b506105d3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ad1565b6040518082815260200191505060405180910390f35b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106815780601f1061065657610100808354040283529160200191610681565b820191906000526020600020905b81548152906001019060200180831161066457829003601f168201915b5050505050905090565b6000610698338484610b58565b6001905092915050565b6000600554905090565b60006106b9848484610dd9565b610752843361074d85600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ff90919063ffffffff16565b610b58565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600061080f338461080a85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461118990919063ffffffff16565b610b58565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108f95780601f106108ce576101008083540402835291602001916108f9565b820191906000526020600020905b8154815290600101906020018083116108dc57829003601f168201915b5050505050905090565b600080600083600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503385600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549250925092509250925092565b6000610ab03384610aab85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ff90919063ffffffff16565b610b58565b6001905092915050565b6000610ac7338484610dd9565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610c23576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481526020017f726573730000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610cee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f45524332303a20617070726f766520746f20746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610ea4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f45524332303a207472616e736665722066726f6d20746865207a65726f20616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610f6f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f45524332303a207472616e7366657220746f20746865207a65726f206164647281526020017f657373000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b610fc0816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ff90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611053816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461118990919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008083831115151561117a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b82840390508091505092915050565b6000808284019050838110151515611209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b80915050929150505600a165627a7a723058209ed99280004106fd560003400522d318bb0653ed651de892ed30fcbc97a808710029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7A547275737446756E6400000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x51 SWAP3 SWAP2 SWAP1 PUSH3 0x36E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7A54460000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x9F SWAP3 SWAP2 SWAP1 PUSH3 0x36E JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0xC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0xFF CALLER PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xA EXP PUSH3 0x186A0 MUL PUSH3 0x105 PUSH5 0x100000000 MUL PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH3 0x41D JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH3 0x1AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x1D0 DUP2 PUSH1 0x5 SLOAD PUSH3 0x2E3 PUSH5 0x100000000 MUL PUSH3 0x1189 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH3 0x237 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH3 0x2E3 PUSH5 0x100000000 MUL PUSH3 0x1189 OR SWAP1 SWAP2 SWAP1 PUSH5 0x100000000 SWAP1 DIV JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH3 0x364 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x3B1 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x3E2 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x3E2 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x3E1 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3C4 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x3F1 SWAP2 SWAP1 PUSH3 0x3F5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH3 0x41A SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x416 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x3FC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x123F DUP1 PUSH3 0x42D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBA JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xA25FB97A EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x572 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x114 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x141 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x366 PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x38B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3D3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x903 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x558 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x681 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x656 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x681 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x664 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x698 CALLER DUP5 DUP5 PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B9 DUP5 DUP5 DUP5 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x752 DUP5 CALLER PUSH2 0x74D DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80F CALLER DUP5 PUSH2 0x80A DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1189 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x8F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB0 CALLER DUP5 PUSH2 0xAAB DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC7 CALLER DUP5 DUP5 PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xF6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC0 DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1053 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1189 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO ISZERO ISZERO PUSH2 0x117A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1209 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP15 0xd9 SWAP3 DUP1 STOP COINBASE MOD REVERT JUMP STOP SUB BLOCKHASH SDIV 0x22 0xd3 XOR 0xbb MOD MSTORE8 0xed PUSH6 0x1DE892ED30FC 0xbc SWAP8 0xa8 ADDMOD PUSH18 0x2900000000000000000000000000000000 ",
							"sourceMap": "4939:8270:0:-;;;5256:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5297:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5359:2;5333:28;;;;;;;;;;;;;;;;;;;;5368:104;8:9:-1;5:2;;;30:1;27;20:12;5:2;5368:104:0;5401:52;5407:10;5442:9;;;;;;;;;;;5434:18;;5428:2;:24;5419:6;:33;5401:5;;;:52;;;:::i;:::-;4939:8270;;10929:302;11023:1;11004:21;;:7;:21;;;;10996:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11087:24;11104:6;11087:12;;:16;;;;;;:24;;;;;:::i;:::-;11072:12;:39;;;;11142:30;11165:6;11142:9;:18;11152:7;11142:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;;:::i;:::-;11121:9;:18;11131:7;11121:18;;;;;;;;;;;;;;;:51;;;;11208:7;11187:37;;11204:1;11187:37;;;11217:6;11187:37;;;;;;;;;;;;;;;;;;10929:302;;:::o;1095:176::-;1153:7;1172:9;1188:1;1184;:5;1172:17;;1212:1;1207;:6;;1199:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1263:1;1256:8;;1095:176;;;;;:::o;4939:8270::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100bf578063095ea7b31461014f57806318160ddd146101b457806323b872dd146101df578063313ce56714610264578063395093511461029557806370a08231146102fa57806395d89b4114610351578063a25fb97a146103e1578063a457c2d7146104a8578063a9059cbb1461050d578063dd62ed3e14610572575b600080fd5b3480156100cb57600080fd5b506100d46105e9565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101145780820151818401526020810190506100f9565b50505050905090810190601f1680156101415780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561015b57600080fd5b5061019a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061068b565b604051808215151515815260200191505060405180910390f35b3480156101c057600080fd5b506101c96106a2565b6040518082815260200191505060405180910390f35b3480156101eb57600080fd5b5061024a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506106ac565b604051808215151515815260200191505060405180910390f35b34801561027057600080fd5b5061027961075d565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102a157600080fd5b506102e0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610774565b604051808215151515815260200191505060405180910390f35b34801561030657600080fd5b5061033b600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610819565b6040518082815260200191505060405180910390f35b34801561035d57600080fd5b50610366610861565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103a657808201518184015260208101905061038b565b50505050905090810190601f1680156103d35780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156103ed57600080fd5b5061042c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610903565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b3480156104b457600080fd5b506104f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a15565b604051808215151515815260200191505060405180910390f35b34801561051957600080fd5b50610558600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610aba565b604051808215151515815260200191505060405180910390f35b34801561057e57600080fd5b506105d3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ad1565b6040518082815260200191505060405180910390f35b606060028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106815780601f1061065657610100808354040283529160200191610681565b820191906000526020600020905b81548152906001019060200180831161066457829003601f168201915b5050505050905090565b6000610698338484610b58565b6001905092915050565b6000600554905090565b60006106b9848484610dd9565b610752843361074d85600160008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ff90919063ffffffff16565b610b58565b600190509392505050565b6000600460009054906101000a900460ff16905090565b600061080f338461080a85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461118990919063ffffffff16565b610b58565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108f95780601f106108ce576101008083540402835291602001916108f9565b820191906000526020600020905b8154815290600101906020018083116108dc57829003601f168201915b5050505050905090565b600080600083600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503385600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549250925092509250925092565b6000610ab03384610aab85600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ff90919063ffffffff16565b610b58565b6001905092915050565b6000610ac7338484610dd9565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610c23576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f45524332303a20617070726f76652066726f6d20746865207a65726f2061646481526020017f726573730000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610cee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f45524332303a20617070726f766520746f20746865207a65726f20616464726581526020017f737300000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610ea4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f45524332303a207472616e736665722066726f6d20746865207a65726f20616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610f6f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f45524332303a207472616e7366657220746f20746865207a65726f206164647281526020017f657373000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b610fc0816000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110ff90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611053816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461118990919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b60008083831115151561117a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b82840390508091505092915050565b6000808284019050838110151515611209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b80915050929150505600a165627a7a723058209ed99280004106fd560003400522d318bb0653ed651de892ed30fcbc97a808710029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBA JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xA25FB97A EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x572 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x114 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x141 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C9 PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x306 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x366 PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3A6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x38B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3D3 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x903 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x519 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x558 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xABA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x681 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x656 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x681 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x664 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x698 CALLER DUP5 DUP5 PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B9 DUP5 DUP5 DUP5 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x752 DUP5 CALLER PUSH2 0x74D DUP6 PUSH1 0x1 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80F CALLER DUP5 PUSH2 0x80A DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1189 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x8F9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8CE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8F9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8DC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAB0 CALLER DUP5 PUSH2 0xAAB DUP6 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC7 CALLER DUP5 DUP5 PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xC23 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xCEE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO ISZERO PUSH2 0xF6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFC0 DUP2 PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x10FF SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1053 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1189 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO ISZERO ISZERO PUSH2 0x117A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP5 SUB SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x1209 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP15 0xd9 SWAP3 DUP1 STOP COINBASE MOD REVERT JUMP STOP SUB BLOCKHASH SDIV 0x22 0xd3 XOR 0xbb MOD MSTORE8 0xed PUSH6 0x1DE892ED30FC 0xbc SWAP8 0xa8 ADDMOD PUSH18 0x2900000000000000000000000000000000 ",
							"sourceMap": "4939:8270:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5537:81;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5537:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5537:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7611:145;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7611:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6672:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6672:89:0;;;;;;;;;;;;;;;;;;;;;;;8213:252;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8213:252:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6371:81;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6371:81:0;;;;;;;;;;;;;;;;;;;;;;;;;;;8860:203;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8860:203:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6819:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6819:108:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5731:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5731:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5731:85:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12977:230;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12977:230:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9550:213;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9550:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7130:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7130:153:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7341:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7341:132:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5537:81;5574:6;5606:5;5599:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5537:81;:::o;7611:145::-;7676:4;7692:36;7701:10;7713:7;7722:5;7692:8;:36::i;:::-;7745:4;7738:11;;7611:145;;;;:::o;6672:89::-;6716:7;6742:12;;6735:19;;6672:89;:::o;8213:252::-;8302:4;8318:36;8328:6;8336:9;8347:6;8318:9;:36::i;:::-;8364:73;8373:6;8381:10;8393:43;8429:6;8393:11;:19;8405:6;8393:19;;;;;;;;;;;;;;;:31;8413:10;8393:31;;;;;;;;;;;;;;;;:35;;:43;;;;:::i;:::-;8364:8;:73::i;:::-;8454:4;8447:11;;8213:252;;;;;:::o;6371:81::-;6412:5;6436:9;;;;;;;;;;;6429:16;;6371:81;:::o;8860:203::-;8940:4;8956:79;8965:10;8977:7;8986:48;9023:10;8986:11;:23;8998:10;8986:23;;;;;;;;;;;;;;;:32;9010:7;8986:32;;;;;;;;;;;;;;;;:36;;:48;;;;:::i;:::-;8956:8;:79::i;:::-;9052:4;9045:11;;8860:203;;;;:::o;6819:108::-;6876:7;6902:9;:18;6912:7;6902:18;;;;;;;;;;;;;;;;6895:25;;6819:108;;;:::o;5731:85::-;5770:6;5802:7;5795:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5731:85;:::o;12977:230::-;13046:7;13055;13064;13118:5;13083:11;:23;13095:10;13083:23;;;;;;;;;;;;;;;:32;13107:7;13083:32;;;;;;;;;;;;;;;:40;;;;13141:10;13153:7;13162:11;:23;13174:10;13162:23;;;;;;;;;;;;;;;:32;13186:7;13162:32;;;;;;;;;;;;;;;;13133:62;;;;;;12977:230;;;;;:::o;9550:213::-;9635:4;9651:84;9660:10;9672:7;9681:53;9718:15;9681:11;:23;9693:10;9681:23;;;;;;;;;;;;;;;:32;9705:7;9681:32;;;;;;;;;;;;;;;;:36;;:53;;;;:::i;:::-;9651:8;:84::i;:::-;9752:4;9745:11;;9550:213;;;;:::o;7130:153::-;7199:4;7215:40;7225:10;7237:9;7248:6;7215:9;:40::i;:::-;7272:4;7265:11;;7130:153;;;;:::o;7341:132::-;7413:7;7439:11;:18;7451:5;7439:18;;;;;;;;;;;;;;;:27;7458:7;7439:27;;;;;;;;;;;;;;;;7432:34;;7341:132;;;;:::o;12276:329::-;12385:1;12368:19;;:5;:19;;;;12360:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12465:1;12446:21;;:7;:21;;;;12438:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12547:5;12517:11;:18;12529:5;12517:18;;;;;;;;;;;;;;;:27;12536:7;12517:27;;;;;;;;;;;;;;;:35;;;;12583:7;12567:31;;12576:5;12567:31;;;12592:5;12567:31;;;;;;;;;;;;;;;;;;12276:329;;;:::o;10237:422::-;10352:1;10334:20;;:6;:20;;;;10326:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10435:1;10414:23;;:9;:23;;;;10406:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10508:29;10530:6;10508:9;:17;10518:6;10508:17;;;;;;;;;;;;;;;;:21;;:29;;;;:::i;:::-;10488:9;:17;10498:6;10488:17;;;;;;;;;;;;;;;:49;;;;10570:32;10595:6;10570:9;:20;10580:9;10570:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;10547:9;:20;10557:9;10547:20;;;;;;;;;;;;;;;:55;;;;10634:9;10617:35;;10626:6;10617:35;;;10645:6;10617:35;;;;;;;;;;;;;;;;;;10237:422;;;:::o;1535:179::-;1593:7;1671:9;1625:1;1620;:6;;1612:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1687:1;1683;:5;1671:17;;1706:1;1699:8;;1535:179;;;;;:::o;1095:176::-;1153:7;1172:9;1188:1;1184;:5;1172:17;;1212:1;1207;:6;;1199:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1263:1;1256:8;;1095:176;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "934200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "926",
								"approve(address,uint256)": "22481",
								"approveTest(address,uint256)": "21134",
								"balanceOf(address)": "691",
								"decimals()": "538",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "446",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_burnFrom(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "MSTORE"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "DUP1"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "MLOAD"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "SWAP1"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "DUP2"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "ADD"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "MSTORE"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "DUP1"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "DUP2"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "MSTORE"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "ADD"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "PUSH",
									"value": "7A547275737446756E6400000000000000000000000000000000000000000000"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "DUP2"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "MSTORE"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "POP"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "SWAP1"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "DUP1"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "MLOAD"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "SWAP1"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "ADD"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "SWAP1"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "SWAP3"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "SWAP2"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "SWAP1"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "JUMPDEST"
								},
								{
									"begin": 5256,
									"end": 5291,
									"name": "POP"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "DUP1"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "MLOAD"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "SWAP1"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "DUP2"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "ADD"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "MSTORE"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "DUP1"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "DUP2"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "MSTORE"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "ADD"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "PUSH",
									"value": "7A54460000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "DUP2"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "MSTORE"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "POP"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "SWAP1"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "DUP1"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "MLOAD"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "SWAP1"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "ADD"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "SWAP1"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "SWAP3"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "SWAP2"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "SWAP1"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "JUMPDEST"
								},
								{
									"begin": 5297,
									"end": 5327,
									"name": "POP"
								},
								{
									"begin": 5359,
									"end": 5361,
									"name": "PUSH",
									"value": "12"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "EXP"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "DUP2"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "SLOAD"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "DUP2"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "MUL"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "NOT"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "AND"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "SWAP1"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "DUP4"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "AND"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "MUL"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "OR"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "SWAP1"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "SSTORE"
								},
								{
									"begin": 5333,
									"end": 5361,
									"name": "POP"
								},
								{
									"begin": 5368,
									"end": 5472,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 5368,
									"end": 5472,
									"name": "POP"
								},
								{
									"begin": 5401,
									"end": 5453,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 5407,
									"end": 5417,
									"name": "CALLER"
								},
								{
									"begin": 5442,
									"end": 5451,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 5442,
									"end": 5451,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 5442,
									"end": 5451,
									"name": "SWAP1"
								},
								{
									"begin": 5442,
									"end": 5451,
									"name": "SLOAD"
								},
								{
									"begin": 5442,
									"end": 5451,
									"name": "SWAP1"
								},
								{
									"begin": 5442,
									"end": 5451,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 5442,
									"end": 5451,
									"name": "EXP"
								},
								{
									"begin": 5442,
									"end": 5451,
									"name": "SWAP1"
								},
								{
									"begin": 5442,
									"end": 5451,
									"name": "DIV"
								},
								{
									"begin": 5442,
									"end": 5451,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 5442,
									"end": 5451,
									"name": "AND"
								},
								{
									"begin": 5434,
									"end": 5452,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 5434,
									"end": 5452,
									"name": "AND"
								},
								{
									"begin": 5428,
									"end": 5430,
									"name": "PUSH",
									"value": "A"
								},
								{
									"begin": 5428,
									"end": 5452,
									"name": "EXP"
								},
								{
									"begin": 5419,
									"end": 5425,
									"name": "PUSH",
									"value": "186A0"
								},
								{
									"begin": 5419,
									"end": 5452,
									"name": "MUL"
								},
								{
									"begin": 5401,
									"end": 5406,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 5401,
									"end": 5406,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 5401,
									"end": 5406,
									"name": "MUL"
								},
								{
									"begin": 5401,
									"end": 5453,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 5401,
									"end": 5453,
									"name": "SWAP1"
								},
								{
									"begin": 5401,
									"end": 5453,
									"name": "DIV"
								},
								{
									"begin": 5401,
									"end": 5453,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 5401,
									"end": 5453,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 5401,
									"end": 5453,
									"name": "JUMPDEST"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMP"
								},
								{
									"begin": 10929,
									"end": 11231,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 10929,
									"end": 11231,
									"name": "JUMPDEST"
								},
								{
									"begin": 11023,
									"end": 11024,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11004,
									"end": 11025,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11004,
									"end": 11025,
									"name": "AND"
								},
								{
									"begin": 11004,
									"end": 11011,
									"name": "DUP3"
								},
								{
									"begin": 11004,
									"end": 11025,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11004,
									"end": 11025,
									"name": "AND"
								},
								{
									"begin": 11004,
									"end": 11025,
									"name": "EQ"
								},
								{
									"begin": 11004,
									"end": 11025,
									"name": "ISZERO"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "ISZERO"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "ISZERO"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "JUMPI"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "MLOAD"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "DUP2"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "MSTORE"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "ADD"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "DUP1"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "DUP1"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "ADD"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "DUP3"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "DUP2"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "SUB"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "DUP3"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "MSTORE"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "DUP2"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "MSTORE"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "ADD"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "DUP1"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "PUSH",
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "DUP2"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "MSTORE"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "POP"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "ADD"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "SWAP2"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "POP"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "POP"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "MLOAD"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "DUP1"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "SWAP2"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "SUB"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "SWAP1"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "REVERT"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 10996,
									"end": 11061,
									"name": "JUMPDEST"
								},
								{
									"begin": 11087,
									"end": 11111,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 11104,
									"end": 11110,
									"name": "DUP2"
								},
								{
									"begin": 11087,
									"end": 11099,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11087,
									"end": 11099,
									"name": "SLOAD"
								},
								{
									"begin": 11087,
									"end": 11103,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 11087,
									"end": 11103,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 11087,
									"end": 11103,
									"name": "MUL"
								},
								{
									"begin": 11087,
									"end": 11103,
									"name": "PUSH [tag]",
									"value": "18446744073709551692"
								},
								{
									"begin": 11087,
									"end": 11103,
									"name": "OR"
								},
								{
									"begin": 11087,
									"end": 11103,
									"name": "SWAP1"
								},
								{
									"begin": 11087,
									"end": 11111,
									"name": "SWAP2"
								},
								{
									"begin": 11087,
									"end": 11111,
									"name": "SWAP1"
								},
								{
									"begin": 11087,
									"end": 11111,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 11087,
									"end": 11111,
									"name": "SWAP1"
								},
								{
									"begin": 11087,
									"end": 11111,
									"name": "DIV"
								},
								{
									"begin": 11087,
									"end": 11111,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11087,
									"end": 11111,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 11087,
									"end": 11111,
									"name": "JUMPDEST"
								},
								{
									"begin": 11072,
									"end": 11084,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 11072,
									"end": 11111,
									"name": "DUP2"
								},
								{
									"begin": 11072,
									"end": 11111,
									"name": "SWAP1"
								},
								{
									"begin": 11072,
									"end": 11111,
									"name": "SSTORE"
								},
								{
									"begin": 11072,
									"end": 11111,
									"name": "POP"
								},
								{
									"begin": 11142,
									"end": 11172,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 11165,
									"end": 11171,
									"name": "DUP2"
								},
								{
									"begin": 11142,
									"end": 11151,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "DUP1"
								},
								{
									"begin": 11152,
									"end": 11159,
									"name": "DUP6"
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "AND"
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "AND"
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "DUP2"
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "MSTORE"
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "ADD"
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "SWAP1"
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "DUP2"
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "MSTORE"
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "ADD"
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "KECCAK256"
								},
								{
									"begin": 11142,
									"end": 11160,
									"name": "SLOAD"
								},
								{
									"begin": 11142,
									"end": 11164,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 11142,
									"end": 11164,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 11142,
									"end": 11164,
									"name": "MUL"
								},
								{
									"begin": 11142,
									"end": 11164,
									"name": "PUSH [tag]",
									"value": "18446744073709551692"
								},
								{
									"begin": 11142,
									"end": 11164,
									"name": "OR"
								},
								{
									"begin": 11142,
									"end": 11164,
									"name": "SWAP1"
								},
								{
									"begin": 11142,
									"end": 11172,
									"name": "SWAP2"
								},
								{
									"begin": 11142,
									"end": 11172,
									"name": "SWAP1"
								},
								{
									"begin": 11142,
									"end": 11172,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 11142,
									"end": 11172,
									"name": "SWAP1"
								},
								{
									"begin": 11142,
									"end": 11172,
									"name": "DIV"
								},
								{
									"begin": 11142,
									"end": 11172,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 11142,
									"end": 11172,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 11142,
									"end": 11172,
									"name": "JUMPDEST"
								},
								{
									"begin": 11121,
									"end": 11130,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11121,
									"end": 11139,
									"name": "DUP1"
								},
								{
									"begin": 11131,
									"end": 11138,
									"name": "DUP5"
								},
								{
									"begin": 11121,
									"end": 11139,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11121,
									"end": 11139,
									"name": "AND"
								},
								{
									"begin": 11121,
									"end": 11139,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11121,
									"end": 11139,
									"name": "AND"
								},
								{
									"begin": 11121,
									"end": 11139,
									"name": "DUP2"
								},
								{
									"begin": 11121,
									"end": 11139,
									"name": "MSTORE"
								},
								{
									"begin": 11121,
									"end": 11139,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11121,
									"end": 11139,
									"name": "ADD"
								},
								{
									"begin": 11121,
									"end": 11139,
									"name": "SWAP1"
								},
								{
									"begin": 11121,
									"end": 11139,
									"name": "DUP2"
								},
								{
									"begin": 11121,
									"end": 11139,
									"name": "MSTORE"
								},
								{
									"begin": 11121,
									"end": 11139,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11121,
									"end": 11139,
									"name": "ADD"
								},
								{
									"begin": 11121,
									"end": 11139,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11121,
									"end": 11139,
									"name": "KECCAK256"
								},
								{
									"begin": 11121,
									"end": 11172,
									"name": "DUP2"
								},
								{
									"begin": 11121,
									"end": 11172,
									"name": "SWAP1"
								},
								{
									"begin": 11121,
									"end": 11172,
									"name": "SSTORE"
								},
								{
									"begin": 11121,
									"end": 11172,
									"name": "POP"
								},
								{
									"begin": 11208,
									"end": 11215,
									"name": "DUP2"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "AND"
								},
								{
									"begin": 11204,
									"end": 11205,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "AND"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "PUSH",
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 11217,
									"end": 11223,
									"name": "DUP4"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "MLOAD"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "DUP1"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "DUP3"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "DUP2"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "MSTORE"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "ADD"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "SWAP2"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "POP"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "POP"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "MLOAD"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "DUP1"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "SWAP2"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "SUB"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "SWAP1"
								},
								{
									"begin": 11187,
									"end": 11224,
									"name": "LOG3"
								},
								{
									"begin": 10929,
									"end": 11231,
									"name": "POP"
								},
								{
									"begin": 10929,
									"end": 11231,
									"name": "POP"
								},
								{
									"begin": 10929,
									"end": 11231,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 1095,
									"end": 1271,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 1095,
									"end": 1271,
									"name": "JUMPDEST"
								},
								{
									"begin": 1153,
									"end": 1160,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1172,
									"end": 1181,
									"name": "DUP1"
								},
								{
									"begin": 1188,
									"end": 1189,
									"name": "DUP3"
								},
								{
									"begin": 1184,
									"end": 1185,
									"name": "DUP5"
								},
								{
									"begin": 1184,
									"end": 1189,
									"name": "ADD"
								},
								{
									"begin": 1172,
									"end": 1189,
									"name": "SWAP1"
								},
								{
									"begin": 1172,
									"end": 1189,
									"name": "POP"
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "DUP4"
								},
								{
									"begin": 1207,
									"end": 1208,
									"name": "DUP2"
								},
								{
									"begin": 1207,
									"end": 1213,
									"name": "LT"
								},
								{
									"begin": 1207,
									"end": 1213,
									"name": "ISZERO"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "ISZERO"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "ISZERO"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "JUMPI"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "MLOAD"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP2"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "MSTORE"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "ADD"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP1"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP1"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "ADD"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP3"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP2"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "SUB"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP3"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "MSTORE"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH",
									"value": "1B"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP2"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "MSTORE"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "ADD"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP1"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH",
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP2"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "MSTORE"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "POP"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "ADD"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "SWAP2"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "POP"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "POP"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "MLOAD"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "DUP1"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "SWAP2"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "SUB"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "SWAP1"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "REVERT"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 1199,
									"end": 1245,
									"name": "JUMPDEST"
								},
								{
									"begin": 1263,
									"end": 1264,
									"name": "DUP1"
								},
								{
									"begin": 1256,
									"end": 1264,
									"name": "SWAP2"
								},
								{
									"begin": 1256,
									"end": 1264,
									"name": "POP"
								},
								{
									"begin": 1095,
									"end": 1271,
									"name": "POP"
								},
								{
									"begin": 1095,
									"end": 1271,
									"name": "SWAP3"
								},
								{
									"begin": 1095,
									"end": 1271,
									"name": "SWAP2"
								},
								{
									"begin": 1095,
									"end": 1271,
									"name": "POP"
								},
								{
									"begin": 1095,
									"end": 1271,
									"name": "POP"
								},
								{
									"begin": 1095,
									"end": 1271,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMPDEST"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP3"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SLOAD"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP2"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "AND"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "ISZERO"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "MUL"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SUB"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "AND"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SWAP1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DIV"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SWAP1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "MSTORE"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "KECCAK256"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SWAP1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "ADD"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SWAP1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DIV"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP2"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "ADD"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SWAP3"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP3"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "LT"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMPI"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "MLOAD"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "NOT"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "AND"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP4"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "ADD"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "OR"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP6"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SSTORE"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMP"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMPDEST"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP3"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "ADD"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "ADD"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP6"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SSTORE"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP3"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "ISZERO"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMPI"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SWAP2"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP3"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "ADD"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMPDEST"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP3"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP2"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "GT"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "ISZERO"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMPI"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP3"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "MLOAD"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP3"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SSTORE"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SWAP2"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "ADD"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SWAP2"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SWAP1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "ADD"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SWAP1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMP"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMPDEST"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMPDEST"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "POP"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SWAP1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "POP"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SWAP2"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SWAP1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMPDEST"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "POP"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SWAP1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMPDEST"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SWAP2"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SWAP1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "tag",
									"value": "24"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMPDEST"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP3"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "GT"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "ISZERO"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH [tag]",
									"value": "25"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMPI"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP2"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SWAP1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SSTORE"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "POP"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "ADD"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH [tag]",
									"value": "24"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMP"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "tag",
									"value": "25"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMPDEST"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "POP"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SWAP1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMP"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMPDEST"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "SWAP1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "JUMPDEST"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "DUP1"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "CODECOPY"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 4939,
									"end": 13209,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058209ed99280004106fd560003400522d318bb0653ed651de892ed30fcbc97a808710029",
									".code": [
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "MSTORE"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "LT"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "JUMPI"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "SWAP1"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "DIV"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "AND"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "EQ"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "JUMPI"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "EQ"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "JUMPI"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "EQ"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "JUMPI"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "EQ"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "JUMPI"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "EQ"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "JUMPI"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH",
											"value": "39509351"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "EQ"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "JUMPI"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "EQ"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "JUMPI"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "EQ"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "JUMPI"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH",
											"value": "A25FB97A"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "EQ"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "JUMPI"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH",
											"value": "A457C2D7"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "EQ"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "JUMPI"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "EQ"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "JUMPI"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "EQ"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "JUMPI"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "JUMPDEST"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "DUP1"
										},
										{
											"begin": 4939,
											"end": 13209,
											"name": "REVERT"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "JUMPDEST"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "JUMP"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "JUMPDEST"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "MLOAD"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "ADD"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP3"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "SUB"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP3"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "MSTORE"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP4"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "MLOAD"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "MSTORE"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "ADD"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "SWAP2"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "MLOAD"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "ADD"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP4"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "ADD"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "AND"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "ISZERO"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "JUMPI"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP3"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "SUB"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "MLOAD"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP4"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "SUB"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "EXP"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "SUB"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "NOT"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "AND"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP2"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "MSTORE"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "ADD"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "SWAP2"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "JUMPDEST"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "SWAP3"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "MLOAD"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "DUP1"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "SWAP2"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "SUB"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "RETURN"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "JUMPDEST"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "POP"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "DUP1"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "SUB"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "DUP2"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "ADD"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "SWAP1"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "DUP1"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "DUP1"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "AND"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "SWAP1"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "ADD"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "SWAP1"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "SWAP3"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "SWAP2"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "SWAP1"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "DUP1"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "SWAP1"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "ADD"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "SWAP1"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "SWAP3"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "SWAP2"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "SWAP1"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "POP"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "POP"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "POP"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "JUMP"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "JUMPDEST"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "MLOAD"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "DUP1"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "DUP3"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "ISZERO"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "ISZERO"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "ISZERO"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "ISZERO"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "DUP2"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "MSTORE"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "ADD"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "SWAP2"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "POP"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "POP"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "MLOAD"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "DUP1"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "SWAP2"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "SUB"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "SWAP1"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "RETURN"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "JUMPDEST"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "POP"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "JUMP"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "JUMPDEST"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "MLOAD"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "DUP1"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "DUP3"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "DUP2"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "MSTORE"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "ADD"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "SWAP2"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "POP"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "POP"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "MLOAD"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "DUP1"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "SWAP2"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "SUB"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "SWAP1"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "RETURN"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "JUMPDEST"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "POP"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "DUP1"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SUB"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "DUP2"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "ADD"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP1"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "DUP1"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "DUP1"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "AND"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP1"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "ADD"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP1"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP3"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP2"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP1"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "DUP1"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "AND"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP1"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "ADD"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP1"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP3"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP2"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP1"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "DUP1"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP1"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "ADD"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP1"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP3"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP2"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP1"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "POP"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "POP"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "POP"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "JUMP"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "JUMPDEST"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "MLOAD"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "DUP1"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "DUP3"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "ISZERO"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "ISZERO"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "ISZERO"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "ISZERO"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "DUP2"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "MSTORE"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "ADD"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP2"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "POP"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "POP"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "MLOAD"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "DUP1"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP2"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SUB"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP1"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "RETURN"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "JUMPDEST"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "POP"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "JUMP"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "JUMPDEST"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "MLOAD"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "DUP1"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "DUP3"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "AND"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "AND"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "DUP2"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "MSTORE"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "ADD"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "SWAP2"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "POP"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "POP"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "MLOAD"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "DUP1"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "SWAP2"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "SUB"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "SWAP1"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "RETURN"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "JUMPDEST"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "POP"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "DUP1"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "SUB"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "DUP2"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "ADD"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "SWAP1"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "DUP1"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "DUP1"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "AND"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "SWAP1"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "ADD"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "SWAP1"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "SWAP3"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "SWAP2"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "SWAP1"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "DUP1"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "SWAP1"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "ADD"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "SWAP1"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "SWAP3"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "SWAP2"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "SWAP1"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "POP"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "POP"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "POP"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "JUMP"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "JUMPDEST"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "MLOAD"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "DUP1"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "DUP3"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "ISZERO"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "ISZERO"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "ISZERO"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "ISZERO"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "DUP2"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "MSTORE"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "ADD"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "SWAP2"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "POP"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "POP"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "MLOAD"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "DUP1"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "SWAP2"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "SUB"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "SWAP1"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "RETURN"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "JUMPDEST"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "POP"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "DUP1"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "SUB"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "DUP2"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "ADD"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "SWAP1"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "DUP1"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "DUP1"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "AND"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "SWAP1"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "ADD"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "SWAP1"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "SWAP3"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "SWAP2"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "SWAP1"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "POP"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "POP"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "POP"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "JUMP"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "JUMPDEST"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "MLOAD"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "DUP1"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "DUP3"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "DUP2"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "MSTORE"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "ADD"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "SWAP2"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "POP"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "POP"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "MLOAD"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "DUP1"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "SWAP2"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "SUB"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "SWAP1"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "RETURN"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "JUMPDEST"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "POP"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "JUMP"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "JUMPDEST"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "MLOAD"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP1"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP1"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "ADD"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP3"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP2"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "SUB"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP3"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "MSTORE"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP4"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP2"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP2"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "MLOAD"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP2"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "MSTORE"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "ADD"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "SWAP2"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "POP"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP1"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "MLOAD"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "SWAP1"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "ADD"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "SWAP1"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP1"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP4"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "POP"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "POP"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "POP"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "SWAP1"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "POP"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "SWAP1"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP2"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "ADD"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "SWAP1"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "AND"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP1"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "ISZERO"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "JUMPI"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP1"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP3"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "SUB"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP1"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "MLOAD"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP4"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "SUB"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "EXP"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "SUB"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "NOT"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "AND"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP2"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "MSTORE"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "ADD"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "SWAP2"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "POP"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "JUMPDEST"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "POP"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "SWAP3"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "POP"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "POP"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "POP"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "MLOAD"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "DUP1"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "SWAP2"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "SUB"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "SWAP1"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "RETURN"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "JUMPDEST"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "POP"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "DUP1"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "SUB"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "DUP2"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "ADD"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "SWAP1"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "DUP1"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "DUP1"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "AND"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "SWAP1"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "ADD"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "SWAP1"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "SWAP3"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "SWAP2"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "SWAP1"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "DUP1"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "SWAP1"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "ADD"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "SWAP1"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "SWAP3"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "SWAP2"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "SWAP1"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "POP"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "POP"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "POP"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "JUMP"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "JUMPDEST"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "MLOAD"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "DUP1"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "DUP5"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "AND"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "AND"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "DUP2"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "MSTORE"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "ADD"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "DUP4"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "AND"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "AND"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "DUP2"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "MSTORE"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "ADD"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "DUP3"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "DUP2"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "MSTORE"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "ADD"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "SWAP4"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "POP"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "POP"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "POP"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "POP"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "MLOAD"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "DUP1"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "SWAP2"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "SUB"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "SWAP1"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "RETURN"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "JUMPDEST"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "POP"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "DUP1"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "SUB"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "DUP2"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "ADD"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "SWAP1"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "DUP1"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "DUP1"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "AND"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "SWAP1"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "ADD"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "SWAP1"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "SWAP3"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "SWAP2"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "SWAP1"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "DUP1"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "SWAP1"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "ADD"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "SWAP1"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "SWAP3"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "SWAP2"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "SWAP1"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "POP"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "POP"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "POP"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "JUMP"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "JUMPDEST"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "MLOAD"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "DUP1"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "DUP3"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "ISZERO"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "ISZERO"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "ISZERO"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "ISZERO"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "DUP2"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "MSTORE"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "ADD"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "SWAP2"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "POP"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "POP"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "MLOAD"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "DUP1"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "SWAP2"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "SUB"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "SWAP1"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "RETURN"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "JUMPDEST"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "POP"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "DUP1"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "SUB"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "DUP2"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "ADD"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "SWAP1"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "DUP1"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "DUP1"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "AND"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "SWAP1"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "ADD"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "SWAP1"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "SWAP3"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "SWAP2"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "SWAP1"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "DUP1"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "SWAP1"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "ADD"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "SWAP1"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "SWAP3"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "SWAP2"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "SWAP1"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "POP"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "POP"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "POP"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "JUMP"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "JUMPDEST"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "MLOAD"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "DUP1"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "DUP3"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "ISZERO"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "ISZERO"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "ISZERO"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "ISZERO"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "DUP2"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "MSTORE"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "ADD"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "SWAP2"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "POP"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "POP"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "MLOAD"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "DUP1"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "SWAP2"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "SUB"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "SWAP1"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "RETURN"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "JUMPDEST"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "POP"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "DUP1"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "SUB"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "DUP2"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "ADD"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "SWAP1"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "DUP1"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "DUP1"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "AND"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "SWAP1"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "ADD"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "SWAP1"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "SWAP3"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "SWAP2"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "SWAP1"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "DUP1"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "AND"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "SWAP1"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "ADD"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "SWAP1"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "SWAP3"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "SWAP2"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "SWAP1"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "POP"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "POP"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "POP"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "JUMP"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "JUMPDEST"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "MLOAD"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "DUP1"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "DUP3"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "DUP2"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "MSTORE"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "ADD"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "SWAP2"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "POP"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "POP"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "MLOAD"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "DUP1"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "SWAP2"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "SUB"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "SWAP1"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "RETURN"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "JUMPDEST"
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5606,
											"end": 5611,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SLOAD"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP2"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "AND"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "ISZERO"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "MUL"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SUB"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "AND"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DIV"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "ADD"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SWAP2"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DIV"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "MUL"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "ADD"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "MLOAD"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP2"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "ADD"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "MSTORE"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SWAP3"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SWAP2"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP2"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP2"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "MSTORE"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "ADD"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP3"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SLOAD"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP2"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "AND"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "ISZERO"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "MUL"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SUB"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "AND"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DIV"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "ISZERO"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "JUMPI"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "LT"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "JUMPI"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP4"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SLOAD"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DIV"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "MUL"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP4"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "MSTORE"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SWAP2"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "ADD"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SWAP2"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "JUMP"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "JUMPDEST"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP3"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "ADD"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SWAP2"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "MSTORE"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "KECCAK256"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "JUMPDEST"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP2"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SLOAD"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP2"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "MSTORE"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "ADD"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "ADD"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP4"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "GT"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "JUMPI"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP3"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SUB"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "AND"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "DUP3"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "ADD"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SWAP2"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "JUMPDEST"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "POP"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "POP"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "POP"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "POP"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "POP"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "SWAP1"
										},
										{
											"begin": 5599,
											"end": 5611,
											"name": "POP"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "SWAP1"
										},
										{
											"begin": 5537,
											"end": 5618,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "JUMPDEST"
										},
										{
											"begin": 7676,
											"end": 7680,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7692,
											"end": 7728,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 7701,
											"end": 7711,
											"name": "CALLER"
										},
										{
											"begin": 7713,
											"end": 7720,
											"name": "DUP5"
										},
										{
											"begin": 7722,
											"end": 7727,
											"name": "DUP5"
										},
										{
											"begin": 7692,
											"end": 7700,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 7692,
											"end": 7728,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7692,
											"end": 7728,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 7692,
											"end": 7728,
											"name": "JUMPDEST"
										},
										{
											"begin": 7745,
											"end": 7749,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7738,
											"end": 7749,
											"name": "SWAP1"
										},
										{
											"begin": 7738,
											"end": 7749,
											"name": "POP"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "SWAP3"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "SWAP2"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "POP"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "POP"
										},
										{
											"begin": 7611,
											"end": 7756,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "JUMPDEST"
										},
										{
											"begin": 6716,
											"end": 6723,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6742,
											"end": 6754,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 6742,
											"end": 6754,
											"name": "SLOAD"
										},
										{
											"begin": 6735,
											"end": 6754,
											"name": "SWAP1"
										},
										{
											"begin": 6735,
											"end": 6754,
											"name": "POP"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "SWAP1"
										},
										{
											"begin": 6672,
											"end": 6761,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "JUMPDEST"
										},
										{
											"begin": 8302,
											"end": 8306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8318,
											"end": 8354,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 8328,
											"end": 8334,
											"name": "DUP5"
										},
										{
											"begin": 8336,
											"end": 8345,
											"name": "DUP5"
										},
										{
											"begin": 8347,
											"end": 8353,
											"name": "DUP5"
										},
										{
											"begin": 8318,
											"end": 8327,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 8318,
											"end": 8354,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8318,
											"end": 8354,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 8318,
											"end": 8354,
											"name": "JUMPDEST"
										},
										{
											"begin": 8364,
											"end": 8437,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 8373,
											"end": 8379,
											"name": "DUP5"
										},
										{
											"begin": 8381,
											"end": 8391,
											"name": "CALLER"
										},
										{
											"begin": 8393,
											"end": 8436,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 8429,
											"end": 8435,
											"name": "DUP6"
										},
										{
											"begin": 8393,
											"end": 8404,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8393,
											"end": 8412,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8405,
											"end": 8411,
											"name": "DUP11"
										},
										{
											"begin": 8393,
											"end": 8412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8393,
											"end": 8412,
											"name": "AND"
										},
										{
											"begin": 8393,
											"end": 8412,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8393,
											"end": 8412,
											"name": "AND"
										},
										{
											"begin": 8393,
											"end": 8412,
											"name": "DUP2"
										},
										{
											"begin": 8393,
											"end": 8412,
											"name": "MSTORE"
										},
										{
											"begin": 8393,
											"end": 8412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8393,
											"end": 8412,
											"name": "ADD"
										},
										{
											"begin": 8393,
											"end": 8412,
											"name": "SWAP1"
										},
										{
											"begin": 8393,
											"end": 8412,
											"name": "DUP2"
										},
										{
											"begin": 8393,
											"end": 8412,
											"name": "MSTORE"
										},
										{
											"begin": 8393,
											"end": 8412,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8393,
											"end": 8412,
											"name": "ADD"
										},
										{
											"begin": 8393,
											"end": 8412,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8393,
											"end": 8412,
											"name": "KECCAK256"
										},
										{
											"begin": 8393,
											"end": 8424,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8413,
											"end": 8423,
											"name": "CALLER"
										},
										{
											"begin": 8393,
											"end": 8424,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8393,
											"end": 8424,
											"name": "AND"
										},
										{
											"begin": 8393,
											"end": 8424,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8393,
											"end": 8424,
											"name": "AND"
										},
										{
											"begin": 8393,
											"end": 8424,
											"name": "DUP2"
										},
										{
											"begin": 8393,
											"end": 8424,
											"name": "MSTORE"
										},
										{
											"begin": 8393,
											"end": 8424,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8393,
											"end": 8424,
											"name": "ADD"
										},
										{
											"begin": 8393,
											"end": 8424,
											"name": "SWAP1"
										},
										{
											"begin": 8393,
											"end": 8424,
											"name": "DUP2"
										},
										{
											"begin": 8393,
											"end": 8424,
											"name": "MSTORE"
										},
										{
											"begin": 8393,
											"end": 8424,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8393,
											"end": 8424,
											"name": "ADD"
										},
										{
											"begin": 8393,
											"end": 8424,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8393,
											"end": 8424,
											"name": "KECCAK256"
										},
										{
											"begin": 8393,
											"end": 8424,
											"name": "SLOAD"
										},
										{
											"begin": 8393,
											"end": 8428,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 8393,
											"end": 8428,
											"name": "SWAP1"
										},
										{
											"begin": 8393,
											"end": 8436,
											"name": "SWAP2"
										},
										{
											"begin": 8393,
											"end": 8436,
											"name": "SWAP1"
										},
										{
											"begin": 8393,
											"end": 8436,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8393,
											"end": 8436,
											"name": "AND"
										},
										{
											"begin": 8393,
											"end": 8436,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8393,
											"end": 8436,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 8393,
											"end": 8436,
											"name": "JUMPDEST"
										},
										{
											"begin": 8364,
											"end": 8372,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 8364,
											"end": 8437,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8364,
											"end": 8437,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 8364,
											"end": 8437,
											"name": "JUMPDEST"
										},
										{
											"begin": 8454,
											"end": 8458,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8447,
											"end": 8458,
											"name": "SWAP1"
										},
										{
											"begin": 8447,
											"end": 8458,
											"name": "POP"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP4"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "SWAP3"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "POP"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "POP"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "POP"
										},
										{
											"begin": 8213,
											"end": 8465,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "JUMPDEST"
										},
										{
											"begin": 6412,
											"end": 6417,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6436,
											"end": 6445,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 6436,
											"end": 6445,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6436,
											"end": 6445,
											"name": "SWAP1"
										},
										{
											"begin": 6436,
											"end": 6445,
											"name": "SLOAD"
										},
										{
											"begin": 6436,
											"end": 6445,
											"name": "SWAP1"
										},
										{
											"begin": 6436,
											"end": 6445,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 6436,
											"end": 6445,
											"name": "EXP"
										},
										{
											"begin": 6436,
											"end": 6445,
											"name": "SWAP1"
										},
										{
											"begin": 6436,
											"end": 6445,
											"name": "DIV"
										},
										{
											"begin": 6436,
											"end": 6445,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 6436,
											"end": 6445,
											"name": "AND"
										},
										{
											"begin": 6429,
											"end": 6445,
											"name": "SWAP1"
										},
										{
											"begin": 6429,
											"end": 6445,
											"name": "POP"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "SWAP1"
										},
										{
											"begin": 6371,
											"end": 6452,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "JUMPDEST"
										},
										{
											"begin": 8940,
											"end": 8944,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8956,
											"end": 9035,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 8965,
											"end": 8975,
											"name": "CALLER"
										},
										{
											"begin": 8977,
											"end": 8984,
											"name": "DUP5"
										},
										{
											"begin": 8986,
											"end": 9034,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 9023,
											"end": 9033,
											"name": "DUP6"
										},
										{
											"begin": 8986,
											"end": 8997,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 8986,
											"end": 9009,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8998,
											"end": 9008,
											"name": "CALLER"
										},
										{
											"begin": 8986,
											"end": 9009,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8986,
											"end": 9009,
											"name": "AND"
										},
										{
											"begin": 8986,
											"end": 9009,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8986,
											"end": 9009,
											"name": "AND"
										},
										{
											"begin": 8986,
											"end": 9009,
											"name": "DUP2"
										},
										{
											"begin": 8986,
											"end": 9009,
											"name": "MSTORE"
										},
										{
											"begin": 8986,
											"end": 9009,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8986,
											"end": 9009,
											"name": "ADD"
										},
										{
											"begin": 8986,
											"end": 9009,
											"name": "SWAP1"
										},
										{
											"begin": 8986,
											"end": 9009,
											"name": "DUP2"
										},
										{
											"begin": 8986,
											"end": 9009,
											"name": "MSTORE"
										},
										{
											"begin": 8986,
											"end": 9009,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8986,
											"end": 9009,
											"name": "ADD"
										},
										{
											"begin": 8986,
											"end": 9009,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8986,
											"end": 9009,
											"name": "KECCAK256"
										},
										{
											"begin": 8986,
											"end": 9018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9010,
											"end": 9017,
											"name": "DUP10"
										},
										{
											"begin": 8986,
											"end": 9018,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8986,
											"end": 9018,
											"name": "AND"
										},
										{
											"begin": 8986,
											"end": 9018,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8986,
											"end": 9018,
											"name": "AND"
										},
										{
											"begin": 8986,
											"end": 9018,
											"name": "DUP2"
										},
										{
											"begin": 8986,
											"end": 9018,
											"name": "MSTORE"
										},
										{
											"begin": 8986,
											"end": 9018,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8986,
											"end": 9018,
											"name": "ADD"
										},
										{
											"begin": 8986,
											"end": 9018,
											"name": "SWAP1"
										},
										{
											"begin": 8986,
											"end": 9018,
											"name": "DUP2"
										},
										{
											"begin": 8986,
											"end": 9018,
											"name": "MSTORE"
										},
										{
											"begin": 8986,
											"end": 9018,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8986,
											"end": 9018,
											"name": "ADD"
										},
										{
											"begin": 8986,
											"end": 9018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8986,
											"end": 9018,
											"name": "KECCAK256"
										},
										{
											"begin": 8986,
											"end": 9018,
											"name": "SLOAD"
										},
										{
											"begin": 8986,
											"end": 9022,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 8986,
											"end": 9022,
											"name": "SWAP1"
										},
										{
											"begin": 8986,
											"end": 9034,
											"name": "SWAP2"
										},
										{
											"begin": 8986,
											"end": 9034,
											"name": "SWAP1"
										},
										{
											"begin": 8986,
											"end": 9034,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 8986,
											"end": 9034,
											"name": "AND"
										},
										{
											"begin": 8986,
											"end": 9034,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8986,
											"end": 9034,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 8986,
											"end": 9034,
											"name": "JUMPDEST"
										},
										{
											"begin": 8956,
											"end": 8964,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 8956,
											"end": 9035,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 8956,
											"end": 9035,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 8956,
											"end": 9035,
											"name": "JUMPDEST"
										},
										{
											"begin": 9052,
											"end": 9056,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9045,
											"end": 9056,
											"name": "SWAP1"
										},
										{
											"begin": 9045,
											"end": 9056,
											"name": "POP"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "SWAP3"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "SWAP2"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "POP"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "POP"
										},
										{
											"begin": 8860,
											"end": 9063,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "JUMPDEST"
										},
										{
											"begin": 6876,
											"end": 6883,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6902,
											"end": 6911,
											"name": "DUP1"
										},
										{
											"begin": 6902,
											"end": 6920,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6912,
											"end": 6919,
											"name": "DUP4"
										},
										{
											"begin": 6902,
											"end": 6920,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6902,
											"end": 6920,
											"name": "AND"
										},
										{
											"begin": 6902,
											"end": 6920,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6902,
											"end": 6920,
											"name": "AND"
										},
										{
											"begin": 6902,
											"end": 6920,
											"name": "DUP2"
										},
										{
											"begin": 6902,
											"end": 6920,
											"name": "MSTORE"
										},
										{
											"begin": 6902,
											"end": 6920,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6902,
											"end": 6920,
											"name": "ADD"
										},
										{
											"begin": 6902,
											"end": 6920,
											"name": "SWAP1"
										},
										{
											"begin": 6902,
											"end": 6920,
											"name": "DUP2"
										},
										{
											"begin": 6902,
											"end": 6920,
											"name": "MSTORE"
										},
										{
											"begin": 6902,
											"end": 6920,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 6902,
											"end": 6920,
											"name": "ADD"
										},
										{
											"begin": 6902,
											"end": 6920,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 6902,
											"end": 6920,
											"name": "KECCAK256"
										},
										{
											"begin": 6902,
											"end": 6920,
											"name": "SLOAD"
										},
										{
											"begin": 6895,
											"end": 6920,
											"name": "SWAP1"
										},
										{
											"begin": 6895,
											"end": 6920,
											"name": "POP"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "SWAP2"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "SWAP1"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "POP"
										},
										{
											"begin": 6819,
											"end": 6927,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "JUMPDEST"
										},
										{
											"begin": 5770,
											"end": 5776,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 5802,
											"end": 5809,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SLOAD"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP2"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "AND"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "ISZERO"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "MUL"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SUB"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "AND"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SWAP1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DIV"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "ADD"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SWAP2"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DIV"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "MUL"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "ADD"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "MLOAD"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SWAP1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP2"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "ADD"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "MSTORE"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SWAP3"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SWAP2"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SWAP1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP2"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP2"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "MSTORE"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "ADD"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP3"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SLOAD"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP2"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "AND"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "ISZERO"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "MUL"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SUB"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "AND"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SWAP1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DIV"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "ISZERO"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "JUMPI"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "LT"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "JUMPI"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP4"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SLOAD"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DIV"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "MUL"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP4"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "MSTORE"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SWAP2"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "ADD"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SWAP2"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "JUMP"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "JUMPDEST"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP3"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "ADD"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SWAP2"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SWAP1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "MSTORE"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "KECCAK256"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SWAP1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "JUMPDEST"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP2"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SLOAD"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP2"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "MSTORE"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SWAP1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "ADD"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SWAP1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "ADD"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP4"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "GT"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "JUMPI"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP3"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SWAP1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SUB"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "AND"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "DUP3"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "ADD"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SWAP2"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "JUMPDEST"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "POP"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "POP"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "POP"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "POP"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "POP"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "SWAP1"
										},
										{
											"begin": 5795,
											"end": 5809,
											"name": "POP"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "SWAP1"
										},
										{
											"begin": 5731,
											"end": 5816,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "JUMPDEST"
										},
										{
											"begin": 13046,
											"end": 13053,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13055,
											"end": 13062,
											"name": "DUP1"
										},
										{
											"begin": 13064,
											"end": 13071,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13118,
											"end": 13123,
											"name": "DUP4"
										},
										{
											"begin": 13083,
											"end": 13094,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13083,
											"end": 13106,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13095,
											"end": 13105,
											"name": "CALLER"
										},
										{
											"begin": 13083,
											"end": 13106,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13083,
											"end": 13106,
											"name": "AND"
										},
										{
											"begin": 13083,
											"end": 13106,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13083,
											"end": 13106,
											"name": "AND"
										},
										{
											"begin": 13083,
											"end": 13106,
											"name": "DUP2"
										},
										{
											"begin": 13083,
											"end": 13106,
											"name": "MSTORE"
										},
										{
											"begin": 13083,
											"end": 13106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13083,
											"end": 13106,
											"name": "ADD"
										},
										{
											"begin": 13083,
											"end": 13106,
											"name": "SWAP1"
										},
										{
											"begin": 13083,
											"end": 13106,
											"name": "DUP2"
										},
										{
											"begin": 13083,
											"end": 13106,
											"name": "MSTORE"
										},
										{
											"begin": 13083,
											"end": 13106,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13083,
											"end": 13106,
											"name": "ADD"
										},
										{
											"begin": 13083,
											"end": 13106,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13083,
											"end": 13106,
											"name": "KECCAK256"
										},
										{
											"begin": 13083,
											"end": 13115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13107,
											"end": 13114,
											"name": "DUP8"
										},
										{
											"begin": 13083,
											"end": 13115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13083,
											"end": 13115,
											"name": "AND"
										},
										{
											"begin": 13083,
											"end": 13115,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13083,
											"end": 13115,
											"name": "AND"
										},
										{
											"begin": 13083,
											"end": 13115,
											"name": "DUP2"
										},
										{
											"begin": 13083,
											"end": 13115,
											"name": "MSTORE"
										},
										{
											"begin": 13083,
											"end": 13115,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13083,
											"end": 13115,
											"name": "ADD"
										},
										{
											"begin": 13083,
											"end": 13115,
											"name": "SWAP1"
										},
										{
											"begin": 13083,
											"end": 13115,
											"name": "DUP2"
										},
										{
											"begin": 13083,
											"end": 13115,
											"name": "MSTORE"
										},
										{
											"begin": 13083,
											"end": 13115,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13083,
											"end": 13115,
											"name": "ADD"
										},
										{
											"begin": 13083,
											"end": 13115,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13083,
											"end": 13115,
											"name": "KECCAK256"
										},
										{
											"begin": 13083,
											"end": 13123,
											"name": "DUP2"
										},
										{
											"begin": 13083,
											"end": 13123,
											"name": "SWAP1"
										},
										{
											"begin": 13083,
											"end": 13123,
											"name": "SSTORE"
										},
										{
											"begin": 13083,
											"end": 13123,
											"name": "POP"
										},
										{
											"begin": 13141,
											"end": 13151,
											"name": "CALLER"
										},
										{
											"begin": 13153,
											"end": 13160,
											"name": "DUP6"
										},
										{
											"begin": 13162,
											"end": 13173,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13174,
											"end": 13184,
											"name": "CALLER"
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "AND"
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "AND"
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "DUP2"
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "MSTORE"
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "ADD"
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "SWAP1"
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "DUP2"
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "MSTORE"
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "ADD"
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13162,
											"end": 13185,
											"name": "KECCAK256"
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13186,
											"end": 13193,
											"name": "DUP9"
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "AND"
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "AND"
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "DUP2"
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "MSTORE"
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "ADD"
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "SWAP1"
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "DUP2"
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "MSTORE"
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "ADD"
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "KECCAK256"
										},
										{
											"begin": 13162,
											"end": 13194,
											"name": "SLOAD"
										},
										{
											"begin": 13133,
											"end": 13195,
											"name": "SWAP3"
										},
										{
											"begin": 13133,
											"end": 13195,
											"name": "POP"
										},
										{
											"begin": 13133,
											"end": 13195,
											"name": "SWAP3"
										},
										{
											"begin": 13133,
											"end": 13195,
											"name": "POP"
										},
										{
											"begin": 13133,
											"end": 13195,
											"name": "SWAP3"
										},
										{
											"begin": 13133,
											"end": 13195,
											"name": "POP"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "SWAP3"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "POP"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "SWAP3"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "POP"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "SWAP3"
										},
										{
											"begin": 12977,
											"end": 13207,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "JUMPDEST"
										},
										{
											"begin": 9635,
											"end": 9639,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9651,
											"end": 9735,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 9660,
											"end": 9670,
											"name": "CALLER"
										},
										{
											"begin": 9672,
											"end": 9679,
											"name": "DUP5"
										},
										{
											"begin": 9681,
											"end": 9734,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 9718,
											"end": 9733,
											"name": "DUP6"
										},
										{
											"begin": 9681,
											"end": 9692,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9681,
											"end": 9704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9693,
											"end": 9703,
											"name": "CALLER"
										},
										{
											"begin": 9681,
											"end": 9704,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9681,
											"end": 9704,
											"name": "AND"
										},
										{
											"begin": 9681,
											"end": 9704,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9681,
											"end": 9704,
											"name": "AND"
										},
										{
											"begin": 9681,
											"end": 9704,
											"name": "DUP2"
										},
										{
											"begin": 9681,
											"end": 9704,
											"name": "MSTORE"
										},
										{
											"begin": 9681,
											"end": 9704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9681,
											"end": 9704,
											"name": "ADD"
										},
										{
											"begin": 9681,
											"end": 9704,
											"name": "SWAP1"
										},
										{
											"begin": 9681,
											"end": 9704,
											"name": "DUP2"
										},
										{
											"begin": 9681,
											"end": 9704,
											"name": "MSTORE"
										},
										{
											"begin": 9681,
											"end": 9704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9681,
											"end": 9704,
											"name": "ADD"
										},
										{
											"begin": 9681,
											"end": 9704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9681,
											"end": 9704,
											"name": "KECCAK256"
										},
										{
											"begin": 9681,
											"end": 9713,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9705,
											"end": 9712,
											"name": "DUP10"
										},
										{
											"begin": 9681,
											"end": 9713,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9681,
											"end": 9713,
											"name": "AND"
										},
										{
											"begin": 9681,
											"end": 9713,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9681,
											"end": 9713,
											"name": "AND"
										},
										{
											"begin": 9681,
											"end": 9713,
											"name": "DUP2"
										},
										{
											"begin": 9681,
											"end": 9713,
											"name": "MSTORE"
										},
										{
											"begin": 9681,
											"end": 9713,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9681,
											"end": 9713,
											"name": "ADD"
										},
										{
											"begin": 9681,
											"end": 9713,
											"name": "SWAP1"
										},
										{
											"begin": 9681,
											"end": 9713,
											"name": "DUP2"
										},
										{
											"begin": 9681,
											"end": 9713,
											"name": "MSTORE"
										},
										{
											"begin": 9681,
											"end": 9713,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 9681,
											"end": 9713,
											"name": "ADD"
										},
										{
											"begin": 9681,
											"end": 9713,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 9681,
											"end": 9713,
											"name": "KECCAK256"
										},
										{
											"begin": 9681,
											"end": 9713,
											"name": "SLOAD"
										},
										{
											"begin": 9681,
											"end": 9717,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 9681,
											"end": 9717,
											"name": "SWAP1"
										},
										{
											"begin": 9681,
											"end": 9734,
											"name": "SWAP2"
										},
										{
											"begin": 9681,
											"end": 9734,
											"name": "SWAP1"
										},
										{
											"begin": 9681,
											"end": 9734,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 9681,
											"end": 9734,
											"name": "AND"
										},
										{
											"begin": 9681,
											"end": 9734,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9681,
											"end": 9734,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 9681,
											"end": 9734,
											"name": "JUMPDEST"
										},
										{
											"begin": 9651,
											"end": 9659,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 9651,
											"end": 9735,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 9651,
											"end": 9735,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 9651,
											"end": 9735,
											"name": "JUMPDEST"
										},
										{
											"begin": 9752,
											"end": 9756,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 9745,
											"end": 9756,
											"name": "SWAP1"
										},
										{
											"begin": 9745,
											"end": 9756,
											"name": "POP"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "SWAP3"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "SWAP2"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "POP"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "POP"
										},
										{
											"begin": 9550,
											"end": 9763,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "JUMPDEST"
										},
										{
											"begin": 7199,
											"end": 7203,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7215,
											"end": 7255,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 7225,
											"end": 7235,
											"name": "CALLER"
										},
										{
											"begin": 7237,
											"end": 7246,
											"name": "DUP5"
										},
										{
											"begin": 7248,
											"end": 7254,
											"name": "DUP5"
										},
										{
											"begin": 7215,
											"end": 7224,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 7215,
											"end": 7255,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 7215,
											"end": 7255,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 7215,
											"end": 7255,
											"name": "JUMPDEST"
										},
										{
											"begin": 7272,
											"end": 7276,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7265,
											"end": 7276,
											"name": "SWAP1"
										},
										{
											"begin": 7265,
											"end": 7276,
											"name": "POP"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "SWAP3"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "SWAP2"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "POP"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "POP"
										},
										{
											"begin": 7130,
											"end": 7283,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "JUMPDEST"
										},
										{
											"begin": 7413,
											"end": 7420,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7439,
											"end": 7450,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7451,
											"end": 7456,
											"name": "DUP5"
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "AND"
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "AND"
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "DUP2"
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "MSTORE"
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "ADD"
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "SWAP1"
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "DUP2"
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "MSTORE"
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "ADD"
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "KECCAK256"
										},
										{
											"begin": 7439,
											"end": 7466,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7458,
											"end": 7465,
											"name": "DUP4"
										},
										{
											"begin": 7439,
											"end": 7466,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7439,
											"end": 7466,
											"name": "AND"
										},
										{
											"begin": 7439,
											"end": 7466,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7439,
											"end": 7466,
											"name": "AND"
										},
										{
											"begin": 7439,
											"end": 7466,
											"name": "DUP2"
										},
										{
											"begin": 7439,
											"end": 7466,
											"name": "MSTORE"
										},
										{
											"begin": 7439,
											"end": 7466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7439,
											"end": 7466,
											"name": "ADD"
										},
										{
											"begin": 7439,
											"end": 7466,
											"name": "SWAP1"
										},
										{
											"begin": 7439,
											"end": 7466,
											"name": "DUP2"
										},
										{
											"begin": 7439,
											"end": 7466,
											"name": "MSTORE"
										},
										{
											"begin": 7439,
											"end": 7466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 7439,
											"end": 7466,
											"name": "ADD"
										},
										{
											"begin": 7439,
											"end": 7466,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 7439,
											"end": 7466,
											"name": "KECCAK256"
										},
										{
											"begin": 7439,
											"end": 7466,
											"name": "SLOAD"
										},
										{
											"begin": 7432,
											"end": 7466,
											"name": "SWAP1"
										},
										{
											"begin": 7432,
											"end": 7466,
											"name": "POP"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "SWAP3"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "SWAP2"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "POP"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "POP"
										},
										{
											"begin": 7341,
											"end": 7473,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 12276,
											"end": 12605,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 12276,
											"end": 12605,
											"name": "JUMPDEST"
										},
										{
											"begin": 12385,
											"end": 12386,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12368,
											"end": 12387,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12368,
											"end": 12387,
											"name": "AND"
										},
										{
											"begin": 12368,
											"end": 12373,
											"name": "DUP4"
										},
										{
											"begin": 12368,
											"end": 12387,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12368,
											"end": 12387,
											"name": "AND"
										},
										{
											"begin": 12368,
											"end": 12387,
											"name": "EQ"
										},
										{
											"begin": 12368,
											"end": 12387,
											"name": "ISZERO"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "ISZERO"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "ISZERO"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "JUMPI"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "MLOAD"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "DUP2"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "MSTORE"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "ADD"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "DUP1"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "DUP1"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "ADD"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "DUP3"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "DUP2"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "SUB"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "DUP3"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "MSTORE"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "DUP2"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "MSTORE"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "ADD"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "DUP1"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "PUSH",
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "DUP2"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "MSTORE"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "ADD"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "PUSH",
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "DUP2"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "MSTORE"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "POP"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "ADD"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "SWAP2"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "POP"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "POP"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "MLOAD"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "DUP1"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "SWAP2"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "SUB"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "SWAP1"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "REVERT"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 12360,
											"end": 12428,
											"name": "JUMPDEST"
										},
										{
											"begin": 12465,
											"end": 12466,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12446,
											"end": 12467,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12446,
											"end": 12467,
											"name": "AND"
										},
										{
											"begin": 12446,
											"end": 12453,
											"name": "DUP3"
										},
										{
											"begin": 12446,
											"end": 12467,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12446,
											"end": 12467,
											"name": "AND"
										},
										{
											"begin": 12446,
											"end": 12467,
											"name": "EQ"
										},
										{
											"begin": 12446,
											"end": 12467,
											"name": "ISZERO"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "ISZERO"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "ISZERO"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "JUMPI"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "MLOAD"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "DUP2"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "MSTORE"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "ADD"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "DUP1"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "DUP1"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "ADD"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "DUP3"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "DUP2"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "SUB"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "DUP3"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "MSTORE"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "PUSH",
											"value": "22"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "DUP2"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "MSTORE"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "ADD"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "DUP1"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "PUSH",
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "DUP2"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "MSTORE"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "ADD"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "PUSH",
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "DUP2"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "MSTORE"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "POP"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "ADD"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "SWAP2"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "POP"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "POP"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "MLOAD"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "DUP1"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "SWAP2"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "SUB"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "SWAP1"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "REVERT"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 12438,
											"end": 12506,
											"name": "JUMPDEST"
										},
										{
											"begin": 12547,
											"end": 12552,
											"name": "DUP1"
										},
										{
											"begin": 12517,
											"end": 12528,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12529,
											"end": 12534,
											"name": "DUP6"
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "AND"
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "AND"
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "DUP2"
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "MSTORE"
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "ADD"
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "SWAP1"
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "DUP2"
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "MSTORE"
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "ADD"
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12517,
											"end": 12535,
											"name": "KECCAK256"
										},
										{
											"begin": 12517,
											"end": 12544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12536,
											"end": 12543,
											"name": "DUP5"
										},
										{
											"begin": 12517,
											"end": 12544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12517,
											"end": 12544,
											"name": "AND"
										},
										{
											"begin": 12517,
											"end": 12544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12517,
											"end": 12544,
											"name": "AND"
										},
										{
											"begin": 12517,
											"end": 12544,
											"name": "DUP2"
										},
										{
											"begin": 12517,
											"end": 12544,
											"name": "MSTORE"
										},
										{
											"begin": 12517,
											"end": 12544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12517,
											"end": 12544,
											"name": "ADD"
										},
										{
											"begin": 12517,
											"end": 12544,
											"name": "SWAP1"
										},
										{
											"begin": 12517,
											"end": 12544,
											"name": "DUP2"
										},
										{
											"begin": 12517,
											"end": 12544,
											"name": "MSTORE"
										},
										{
											"begin": 12517,
											"end": 12544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12517,
											"end": 12544,
											"name": "ADD"
										},
										{
											"begin": 12517,
											"end": 12544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 12517,
											"end": 12544,
											"name": "KECCAK256"
										},
										{
											"begin": 12517,
											"end": 12552,
											"name": "DUP2"
										},
										{
											"begin": 12517,
											"end": 12552,
											"name": "SWAP1"
										},
										{
											"begin": 12517,
											"end": 12552,
											"name": "SSTORE"
										},
										{
											"begin": 12517,
											"end": 12552,
											"name": "POP"
										},
										{
											"begin": 12583,
											"end": 12590,
											"name": "DUP2"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "AND"
										},
										{
											"begin": 12576,
											"end": 12581,
											"name": "DUP4"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "AND"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12592,
											"end": 12597,
											"name": "DUP4"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "MLOAD"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "DUP1"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "DUP3"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "DUP2"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "MSTORE"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "ADD"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "SWAP2"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "POP"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "POP"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "MLOAD"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "DUP1"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "SWAP2"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "SUB"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "SWAP1"
										},
										{
											"begin": 12567,
											"end": 12598,
											"name": "LOG3"
										},
										{
											"begin": 12276,
											"end": 12605,
											"name": "POP"
										},
										{
											"begin": 12276,
											"end": 12605,
											"name": "POP"
										},
										{
											"begin": 12276,
											"end": 12605,
											"name": "POP"
										},
										{
											"begin": 12276,
											"end": 12605,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 10237,
											"end": 10659,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 10237,
											"end": 10659,
											"name": "JUMPDEST"
										},
										{
											"begin": 10352,
											"end": 10353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10334,
											"end": 10354,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10334,
											"end": 10354,
											"name": "AND"
										},
										{
											"begin": 10334,
											"end": 10340,
											"name": "DUP4"
										},
										{
											"begin": 10334,
											"end": 10354,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10334,
											"end": 10354,
											"name": "AND"
										},
										{
											"begin": 10334,
											"end": 10354,
											"name": "EQ"
										},
										{
											"begin": 10334,
											"end": 10354,
											"name": "ISZERO"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "ISZERO"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "ISZERO"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "JUMPI"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "MLOAD"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "DUP2"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "MSTORE"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "ADD"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "DUP1"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "DUP1"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "ADD"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "DUP3"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "DUP2"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "SUB"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "DUP3"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "MSTORE"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "PUSH",
											"value": "25"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "DUP2"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "MSTORE"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "ADD"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "DUP1"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "PUSH",
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "DUP2"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "MSTORE"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "ADD"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "PUSH",
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "DUP2"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "MSTORE"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "POP"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "ADD"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "SWAP2"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "POP"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "POP"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "MLOAD"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "DUP1"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "SWAP2"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "SUB"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "SWAP1"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "REVERT"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 10326,
											"end": 10396,
											"name": "JUMPDEST"
										},
										{
											"begin": 10435,
											"end": 10436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10414,
											"end": 10437,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10414,
											"end": 10437,
											"name": "AND"
										},
										{
											"begin": 10414,
											"end": 10423,
											"name": "DUP3"
										},
										{
											"begin": 10414,
											"end": 10437,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10414,
											"end": 10437,
											"name": "AND"
										},
										{
											"begin": 10414,
											"end": 10437,
											"name": "EQ"
										},
										{
											"begin": 10414,
											"end": 10437,
											"name": "ISZERO"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "ISZERO"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "ISZERO"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "JUMPI"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "MLOAD"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "DUP2"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "MSTORE"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "ADD"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "DUP1"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "DUP1"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "ADD"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "DUP3"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "DUP2"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "SUB"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "DUP3"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "MSTORE"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "PUSH",
											"value": "23"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "DUP2"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "MSTORE"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "ADD"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "DUP1"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "PUSH",
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "DUP2"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "MSTORE"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "ADD"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "PUSH",
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "DUP2"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "MSTORE"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "POP"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "ADD"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "SWAP2"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "POP"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "POP"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "MLOAD"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "DUP1"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "SWAP2"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "SUB"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "SWAP1"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "REVERT"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 10406,
											"end": 10477,
											"name": "JUMPDEST"
										},
										{
											"begin": 10508,
											"end": 10537,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 10530,
											"end": 10536,
											"name": "DUP2"
										},
										{
											"begin": 10508,
											"end": 10517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10508,
											"end": 10525,
											"name": "DUP1"
										},
										{
											"begin": 10518,
											"end": 10524,
											"name": "DUP7"
										},
										{
											"begin": 10508,
											"end": 10525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10508,
											"end": 10525,
											"name": "AND"
										},
										{
											"begin": 10508,
											"end": 10525,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10508,
											"end": 10525,
											"name": "AND"
										},
										{
											"begin": 10508,
											"end": 10525,
											"name": "DUP2"
										},
										{
											"begin": 10508,
											"end": 10525,
											"name": "MSTORE"
										},
										{
											"begin": 10508,
											"end": 10525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10525,
											"name": "ADD"
										},
										{
											"begin": 10508,
											"end": 10525,
											"name": "SWAP1"
										},
										{
											"begin": 10508,
											"end": 10525,
											"name": "DUP2"
										},
										{
											"begin": 10508,
											"end": 10525,
											"name": "MSTORE"
										},
										{
											"begin": 10508,
											"end": 10525,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10525,
											"name": "ADD"
										},
										{
											"begin": 10508,
											"end": 10525,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10508,
											"end": 10525,
											"name": "KECCAK256"
										},
										{
											"begin": 10508,
											"end": 10525,
											"name": "SLOAD"
										},
										{
											"begin": 10508,
											"end": 10529,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 10508,
											"end": 10529,
											"name": "SWAP1"
										},
										{
											"begin": 10508,
											"end": 10537,
											"name": "SWAP2"
										},
										{
											"begin": 10508,
											"end": 10537,
											"name": "SWAP1"
										},
										{
											"begin": 10508,
											"end": 10537,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10508,
											"end": 10537,
											"name": "AND"
										},
										{
											"begin": 10508,
											"end": 10537,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10508,
											"end": 10537,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 10508,
											"end": 10537,
											"name": "JUMPDEST"
										},
										{
											"begin": 10488,
											"end": 10497,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10488,
											"end": 10505,
											"name": "DUP1"
										},
										{
											"begin": 10498,
											"end": 10504,
											"name": "DUP6"
										},
										{
											"begin": 10488,
											"end": 10505,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10488,
											"end": 10505,
											"name": "AND"
										},
										{
											"begin": 10488,
											"end": 10505,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10488,
											"end": 10505,
											"name": "AND"
										},
										{
											"begin": 10488,
											"end": 10505,
											"name": "DUP2"
										},
										{
											"begin": 10488,
											"end": 10505,
											"name": "MSTORE"
										},
										{
											"begin": 10488,
											"end": 10505,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10488,
											"end": 10505,
											"name": "ADD"
										},
										{
											"begin": 10488,
											"end": 10505,
											"name": "SWAP1"
										},
										{
											"begin": 10488,
											"end": 10505,
											"name": "DUP2"
										},
										{
											"begin": 10488,
											"end": 10505,
											"name": "MSTORE"
										},
										{
											"begin": 10488,
											"end": 10505,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10488,
											"end": 10505,
											"name": "ADD"
										},
										{
											"begin": 10488,
											"end": 10505,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10488,
											"end": 10505,
											"name": "KECCAK256"
										},
										{
											"begin": 10488,
											"end": 10537,
											"name": "DUP2"
										},
										{
											"begin": 10488,
											"end": 10537,
											"name": "SWAP1"
										},
										{
											"begin": 10488,
											"end": 10537,
											"name": "SSTORE"
										},
										{
											"begin": 10488,
											"end": 10537,
											"name": "POP"
										},
										{
											"begin": 10570,
											"end": 10602,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 10595,
											"end": 10601,
											"name": "DUP2"
										},
										{
											"begin": 10570,
											"end": 10579,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "DUP1"
										},
										{
											"begin": 10580,
											"end": 10589,
											"name": "DUP6"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "AND"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "AND"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "DUP2"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "MSTORE"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "ADD"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "SWAP1"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "DUP2"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "MSTORE"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "ADD"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "KECCAK256"
										},
										{
											"begin": 10570,
											"end": 10590,
											"name": "SLOAD"
										},
										{
											"begin": 10570,
											"end": 10594,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 10570,
											"end": 10594,
											"name": "SWAP1"
										},
										{
											"begin": 10570,
											"end": 10602,
											"name": "SWAP2"
										},
										{
											"begin": 10570,
											"end": 10602,
											"name": "SWAP1"
										},
										{
											"begin": 10570,
											"end": 10602,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 10570,
											"end": 10602,
											"name": "AND"
										},
										{
											"begin": 10570,
											"end": 10602,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 10570,
											"end": 10602,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 10570,
											"end": 10602,
											"name": "JUMPDEST"
										},
										{
											"begin": 10547,
											"end": 10556,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "DUP1"
										},
										{
											"begin": 10557,
											"end": 10566,
											"name": "DUP5"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "AND"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "AND"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "DUP2"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "MSTORE"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "ADD"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "SWAP1"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "DUP2"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "MSTORE"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "ADD"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "KECCAK256"
										},
										{
											"begin": 10547,
											"end": 10602,
											"name": "DUP2"
										},
										{
											"begin": 10547,
											"end": 10602,
											"name": "SWAP1"
										},
										{
											"begin": 10547,
											"end": 10602,
											"name": "SSTORE"
										},
										{
											"begin": 10547,
											"end": 10602,
											"name": "POP"
										},
										{
											"begin": 10634,
											"end": 10643,
											"name": "DUP2"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "AND"
										},
										{
											"begin": 10626,
											"end": 10632,
											"name": "DUP4"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "AND"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10645,
											"end": 10651,
											"name": "DUP4"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "MLOAD"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "DUP1"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "DUP3"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "DUP2"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "MSTORE"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "ADD"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "SWAP2"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "POP"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "POP"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "MLOAD"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "DUP1"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "SWAP2"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "SUB"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "SWAP1"
										},
										{
											"begin": 10617,
											"end": 10652,
											"name": "LOG3"
										},
										{
											"begin": 10237,
											"end": 10659,
											"name": "POP"
										},
										{
											"begin": 10237,
											"end": 10659,
											"name": "POP"
										},
										{
											"begin": 10237,
											"end": 10659,
											"name": "POP"
										},
										{
											"begin": 10237,
											"end": 10659,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1535,
											"end": 1714,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 1535,
											"end": 1714,
											"name": "JUMPDEST"
										},
										{
											"begin": 1593,
											"end": 1600,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP1"
										},
										{
											"begin": 1625,
											"end": 1626,
											"name": "DUP4"
										},
										{
											"begin": 1620,
											"end": 1621,
											"name": "DUP4"
										},
										{
											"begin": 1620,
											"end": 1626,
											"name": "GT"
										},
										{
											"begin": 1620,
											"end": 1626,
											"name": "ISZERO"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "ISZERO"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "ISZERO"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "JUMPI"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "MLOAD"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "DUP2"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "MSTORE"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "ADD"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "DUP1"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "DUP1"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "ADD"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "DUP3"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "DUP2"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "SUB"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "DUP3"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "MSTORE"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "DUP2"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "MSTORE"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "ADD"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "DUP1"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH",
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "DUP2"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "MSTORE"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "ADD"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "SWAP2"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "POP"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "MLOAD"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "DUP1"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "SWAP2"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "SUB"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "SWAP1"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "REVERT"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 1612,
											"end": 1661,
											"name": "JUMPDEST"
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "DUP3"
										},
										{
											"begin": 1683,
											"end": 1684,
											"name": "DUP5"
										},
										{
											"begin": 1683,
											"end": 1688,
											"name": "SUB"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "SWAP1"
										},
										{
											"begin": 1671,
											"end": 1688,
											"name": "POP"
										},
										{
											"begin": 1706,
											"end": 1707,
											"name": "DUP1"
										},
										{
											"begin": 1699,
											"end": 1707,
											"name": "SWAP2"
										},
										{
											"begin": 1699,
											"end": 1707,
											"name": "POP"
										},
										{
											"begin": 1535,
											"end": 1714,
											"name": "POP"
										},
										{
											"begin": 1535,
											"end": 1714,
											"name": "SWAP3"
										},
										{
											"begin": 1535,
											"end": 1714,
											"name": "SWAP2"
										},
										{
											"begin": 1535,
											"end": 1714,
											"name": "POP"
										},
										{
											"begin": 1535,
											"end": 1714,
											"name": "POP"
										},
										{
											"begin": 1535,
											"end": 1714,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1095,
											"end": 1271,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 1095,
											"end": 1271,
											"name": "JUMPDEST"
										},
										{
											"begin": 1153,
											"end": 1160,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP1"
										},
										{
											"begin": 1188,
											"end": 1189,
											"name": "DUP3"
										},
										{
											"begin": 1184,
											"end": 1185,
											"name": "DUP5"
										},
										{
											"begin": 1184,
											"end": 1189,
											"name": "ADD"
										},
										{
											"begin": 1172,
											"end": 1189,
											"name": "SWAP1"
										},
										{
											"begin": 1172,
											"end": 1189,
											"name": "POP"
										},
										{
											"begin": 1212,
											"end": 1213,
											"name": "DUP4"
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "DUP2"
										},
										{
											"begin": 1207,
											"end": 1213,
											"name": "LT"
										},
										{
											"begin": 1207,
											"end": 1213,
											"name": "ISZERO"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "ISZERO"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "ISZERO"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "JUMPI"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "MLOAD"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP2"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "MSTORE"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "ADD"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP1"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP1"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "ADD"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP3"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP2"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "SUB"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP3"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "MSTORE"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH",
											"value": "1B"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP2"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "MSTORE"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "ADD"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP1"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH",
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP2"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "MSTORE"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "ADD"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "SWAP2"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "POP"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "MLOAD"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "DUP1"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "SWAP2"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "SUB"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "SWAP1"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "REVERT"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 1199,
											"end": 1245,
											"name": "JUMPDEST"
										},
										{
											"begin": 1263,
											"end": 1264,
											"name": "DUP1"
										},
										{
											"begin": 1256,
											"end": 1264,
											"name": "SWAP2"
										},
										{
											"begin": 1256,
											"end": 1264,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1271,
											"name": "SWAP3"
										},
										{
											"begin": 1095,
											"end": 1271,
											"name": "SWAP2"
										},
										{
											"begin": 1095,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1271,
											"name": "POP"
										},
										{
											"begin": 1095,
											"end": 1271,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveTest(address,uint256)": "a25fb97a",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveTest\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See `IERC20.allowance`.\"},\"approve(address,uint256)\":{\"details\":\"See `IERC20.approve`.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See `IERC20.balanceOf`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to `approve` that can be used as a mitigation for problems described in `IERC20.approve`.     * Emits an `Approval` event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See `IERC20.totalSupply`.\"},\"transfer(address,uint256)\":{\"details\":\"See `IERC20.transfer`.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See `IERC20.transferFrom`.     * Emits an `Approval` event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of `ERC20`;     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `value`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/TF_erc20.sol\":\"TF\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/TF_erc20.sol\":{\"keccak256\":\"0x55ddb7f092bae2991d765a90909029d1a474e5facfca3adc25af3d4e863103d6\",\"urls\":[\"bzzr://5bf425c8fcf20324010a13f23c0c476da29f40a0cc08c444beadd07cf8f502f6\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/TF_erc20.sol": {
				"ast": {
					"absolutePath": "contracts/TF_erc20.sol",
					"exportedSymbols": {
						"IERC20": [
							68
						],
						"SafeMath": [
							199
						],
						"TF": [
							675
						]
					},
					"id": 676,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see `ERC20Detailed`.",
							"fullyImplemented": false,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"id": 6,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "246:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "246:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "245:9:0"
									},
									"scope": 68,
									"src": "200:55:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 13,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "280:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "279:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "320:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "319:9:0"
									},
									"scope": 68,
									"src": "261:68:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 22,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "353:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "372:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "352:35:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "406:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 19,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "406:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "405:6:0"
									},
									"scope": 68,
									"src": "335:77:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 31,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "437:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "452:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "436:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "492:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "491:9:0"
									},
									"scope": 68,
									"src": "418:83:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 40,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "524:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "541:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "523:33:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "575:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "575:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "574:6:0"
									},
									"scope": 68,
									"src": "507:74:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 51,
									"implemented": false,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "609:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "625:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "644:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "608:51:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "678:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 48,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "678:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "677:6:0"
									},
									"scope": 68,
									"src": "587:97:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 59,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "705:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "727:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "747:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "704:57:0"
									},
									"src": "690:72:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 67,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "783:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "806:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "831:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "782:63:0"
									},
									"src": "768:78:0"
								}
							],
							"scope": 676,
							"src": "177:671:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 199,
							"linearizedBaseContracts": [
								199
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1162:109:0",
										"statements": [
											{
												"assignments": [
													78
												],
												"declarations": [
													{
														"constant": false,
														"id": 78,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 93,
														"src": "1172:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 77,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1172:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 82,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 79,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "1184:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 80,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 72,
														"src": "1188:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1184:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1172:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 84,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 78,
																"src": "1207:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 85,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "1212:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1207:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1215:29:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 83,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															693,
															694
														],
														"referencedDeclaration": 694,
														"src": "1199:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1199:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "1199:46:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 90,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 78,
													"src": "1263:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 76,
												"id": 91,
												"nodeType": "Return",
												"src": "1256:8:0"
											}
										]
									},
									"documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
									"id": 93,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1108:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1119:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1107:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1153:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1153:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1152:9:0"
									},
									"scope": 199,
									"src": "1095:176:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 117,
										"nodeType": "Block",
										"src": "1602:112:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 103,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "1620:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 104,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "1625:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1620:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1628:32:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															693,
															694
														],
														"referencedDeclaration": 694,
														"src": "1612:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1612:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1612:49:0"
											},
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 118,
														"src": "1671:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1671:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 111,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1683:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 112,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "1687:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1683:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1671:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 115,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 110,
													"src": "1706:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 101,
												"id": 116,
												"nodeType": "Return",
												"src": "1699:8:0"
											}
										]
									},
									"documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
									"id": 118,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "1548:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "1559:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1547:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "1593:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1592:9:0"
									},
									"scope": 199,
									"src": "1535:179:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "2021:391:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 127,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2252:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2257:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2252:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 133,
												"nodeType": "IfStatement",
												"src": "2248:45:0",
												"trueBody": {
													"id": 132,
													"nodeType": "Block",
													"src": "2260:33:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2281:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 126,
															"id": 131,
															"nodeType": "Return",
															"src": "2274:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													135
												],
												"declarations": [
													{
														"constant": false,
														"id": 135,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 152,
														"src": "2303:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 134,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2303:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 139,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 136,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2315:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 137,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2319:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2315:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2303:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 141,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "2338:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 142,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "2342:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2338:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "2347:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2338:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2350:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															693,
															694
														],
														"referencedDeclaration": 694,
														"src": "2330:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2330:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "2330:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 149,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 135,
													"src": "2404:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 126,
												"id": 150,
												"nodeType": "Return",
												"src": "2397:8:0"
											}
										]
									},
									"documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
									"id": 152,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1967:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "1978:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1966:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "2012:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2011:9:0"
									},
									"scope": 199,
									"src": "1954:458:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "2934:259:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 162,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "3018:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3022:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3018:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3025:28:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															693,
															694
														],
														"referencedDeclaration": 694,
														"src": "3010:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3010:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "3010:44:0"
											},
											{
												"assignments": [
													169
												],
												"declarations": [
													{
														"constant": false,
														"id": 169,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 177,
														"src": "3064:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 168,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3064:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 170,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "3076:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "3080:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3076:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3064:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 174,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "3185:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 160,
												"id": 175,
												"nodeType": "Return",
												"src": "3178:8:0"
											}
										]
									},
									"documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 177,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2880:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2891:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2879:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2925:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2924:9:0"
									},
									"scope": 199,
									"src": "2867:326:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "3704:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 187,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "3722:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3727:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3722:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3730:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															693,
															694
														],
														"referencedDeclaration": 694,
														"src": "3714:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3714:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "3714:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 193,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "3774:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 194,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "3778:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3774:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 185,
												"id": 196,
												"nodeType": "Return",
												"src": "3767:12:0"
											}
										]
									},
									"documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
									"id": 198,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3650:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3650:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3661:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3649:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3695:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3694:9:0"
									},
									"scope": 199,
									"src": "3637:149:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 676,
							"src": "850:2938:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 200,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 68,
										"src": "4954:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$68",
											"typeString": "contract IERC20"
										}
									},
									"id": 201,
									"nodeType": "InheritanceSpecifier",
									"src": "4954:6:0"
								}
							],
							"contractDependencies": [
								68
							],
							"contractKind": "contract",
							"documentation": "@dev Implementation of the `IERC20` interface.\n * This implementation is agnostic to the way tokens are created. This means\nthat a supply mechanism has to be added in a derived contract using `_mint`.\nFor a generic mechanism see `ERC20Mintable`.\n * *For a detailed writeup see our guide [How to implement supply\nmechanisms](https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226).*\n * We have followed general OpenZeppelin guidelines: functions revert instead\nof returning `false` on failure. This behavior is nonetheless conventional\nand does not conflict with the expectations of ERC20 applications.\n * Additionally, an `Approval` event is emitted on calls to `transferFrom`.\nThis allows applications to reconstruct the allowance for all accounts just\nby listening to said events. Other implementations of the EIP may not emit\nthese events, as it isn't required by the specification.\n * Finally, the non-standard `decreaseAllowance` and `increaseAllowance`\nfunctions have been added to mitigate the well-known issues around setting\nallowances. See `IERC20.approve`.",
							"fullyImplemented": true,
							"id": 675,
							"linearizedBaseContracts": [
								675,
								68
							],
							"name": "TF",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 204,
									"libraryName": {
										"contractScope": null,
										"id": 202,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 199,
										"src": "4973:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$199",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "4967:27:0",
									"typeName": {
										"id": 203,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4986:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 208,
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 675,
									"src": "5000:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 207,
										"keyType": {
											"id": 205,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5009:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5000:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 206,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5020:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 214,
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 675,
									"src": "5053:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 213,
										"keyType": {
											"id": 209,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5062:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5053:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 212,
											"keyType": {
												"id": 210,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "5082:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "5073:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 211,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "5093:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 217,
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 675,
									"src": "5256:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 215,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5256:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "7a547275737446756e64",
										"id": 216,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5279:12:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_6f26ba9ee70a3fb02b88a17439ee325d3bbbdc8e2e95c977c20b2f197fd93483",
											"typeString": "literal_string \"zTrustFund\""
										},
										"value": "zTrustFund"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 220,
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 675,
									"src": "5297:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 218,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5297:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "7a5446",
										"id": 219,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5322:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1ef6fa8e6e2047f955b06d58cee869c86666c3eb9f681d460cbcf3c8e8ab8377",
											"typeString": "literal_string \"zTF\""
										},
										"value": "zTF"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 223,
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 675,
									"src": "5333:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 221,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "5333:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 222,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5359:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "5390:82:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 227,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "5407:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5407:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"hexValue": "313030303030",
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5419:6:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000_by_1",
																	"typeString": "int_const 100000"
																},
																"value": "100000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5428:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 232,
																			"name": "_decimals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 223,
																			"src": "5442:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5434:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": "uint256"
																	},
																	"id": 233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5434:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5428:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5419:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 226,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "5401:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5401:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "5401:52:0"
											}
										]
									},
									"documentation": null,
									"id": 239,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5380:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5390:0:0"
									},
									"scope": 675,
									"src": "5368:104:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "5589:29:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 244,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 217,
													"src": "5606:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 243,
												"id": 245,
												"nodeType": "Return",
												"src": "5599:12:0"
											}
										]
									},
									"documentation": "@dev Returns the name of the token.",
									"id": 247,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5550:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "5574:6:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5574:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5573:15:0"
									},
									"scope": 675,
									"src": "5537:81:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "5785:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 252,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 220,
													"src": "5802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 251,
												"id": 253,
												"nodeType": "Return",
												"src": "5795:14:0"
											}
										]
									},
									"documentation": "@dev Returns the symbol of the token, usually a shorter version of the\nname.",
									"id": 255,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5746:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "5770:6:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 249,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5770:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5769:15:0"
									},
									"scope": 675,
									"src": "5731:85:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "6419:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 260,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 223,
													"src": "6436:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 259,
												"id": 261,
												"nodeType": "Return",
												"src": "6429:16:0"
											}
										]
									},
									"documentation": "@dev Returns the number of decimals used to get its user representation.\nFor example, if `decimals` equals `2`, a balance of `505` tokens should\nbe displayed to a user as `5,05` (`505 / 10 ** 2`).\n     * Tokens usually opt for a value of 18, imitating the relationship between\nEther and Wei.\n     * > Note that this information is only used for _display_ purposes: it in\nno way affects any of the arithmetic of the contract, including\n`IERC20.balanceOf` and `IERC20.transfer`.",
									"id": 263,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6388:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "6412:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 257,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6412:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6411:7:0"
									},
									"scope": 675,
									"src": "6371:81:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 265,
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 675,
									"src": "6583:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 264,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6583:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "6725:36:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 270,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "6742:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 269,
												"id": 271,
												"nodeType": "Return",
												"src": "6735:19:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.totalSupply`.",
									"id": 273,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6692:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "6716:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6715:9:0"
									},
									"scope": 675,
									"src": "6672:89:0",
									"stateMutability": "view",
									"superFunction": 6,
									"visibility": "public"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "6885:42:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 280,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "6902:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 282,
													"indexExpression": {
														"argumentTypes": null,
														"id": 281,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "6912:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6902:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 279,
												"id": 283,
												"nodeType": "Return",
												"src": "6895:25:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.balanceOf`.",
									"id": 285,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "6838:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6838:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6837:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "6876:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6875:9:0"
									},
									"scope": 675,
									"src": "6819:108:0",
									"stateMutability": "view",
									"superFunction": 13,
									"visibility": "public"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "7205:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 295,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "7225:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7225:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 297,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "7237:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 298,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "7248:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 294,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "7215:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7215:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "7215:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7272:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 293,
												"id": 302,
												"nodeType": "Return",
												"src": "7265:11:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.transfer`.\n     * Requirements:\n     * - `recipient` cannot be the zero address.\n- the caller must have a balance of at least `amount`.",
									"id": 304,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "7148:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "7167:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7147:35:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "7199:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7199:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7198:6:0"
									},
									"scope": 675,
									"src": "7130:153:0",
									"stateMutability": "nonpayable",
									"superFunction": 22,
									"visibility": "public"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "7422:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 313,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "7439:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 315,
														"indexExpression": {
															"argumentTypes": null,
															"id": 314,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "7451:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7439:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 317,
													"indexExpression": {
														"argumentTypes": null,
														"id": 316,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "7458:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7439:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 312,
												"id": 318,
												"nodeType": "Return",
												"src": "7432:34:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.allowance`.",
									"id": 320,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "7360:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7360:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "7375:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7375:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7359:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "7413:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7412:9:0"
									},
									"scope": 675,
									"src": "7341:132:0",
									"stateMutability": "view",
									"superFunction": 31,
									"visibility": "public"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "7682:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 330,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "7701:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "7701:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 332,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "7713:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 333,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "7722:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 329,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "7692:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7692:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "7692:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7745:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 328,
												"id": 337,
												"nodeType": "Return",
												"src": "7738:11:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.approve`.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 339,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "7628:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7628:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "7645:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7627:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "7676:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 326,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7676:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7675:6:0"
									},
									"scope": 675,
									"src": "7611:145:0",
									"stateMutability": "nonpayable",
									"superFunction": 40,
									"visibility": "public"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "8308:157:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 351,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "8328:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 352,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "8336:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 353,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "8347:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "8318:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8318:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "8318:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 357,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "8373:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 358,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "8381:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8381:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 367,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "8429:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 360,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "8393:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 362,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 361,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 341,
																			"src": "8405:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8393:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 365,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 363,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "8413:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "8413:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8393:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 118,
																"src": "8393:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8393:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 356,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "8364:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8364:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "8364:73:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8454:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 349,
												"id": 372,
												"nodeType": "Return",
												"src": "8447:11:0"
											}
										]
									},
									"documentation": "@dev See `IERC20.transferFrom`.\n     * Emits an `Approval` event indicating the updated allowance. This is not\nrequired by the EIP. See the note at the beginning of `ERC20`;\n     * Requirements:\n- `sender` and `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `value`.\n- the caller must have allowance for `sender`'s tokens of at least\n`amount`.",
									"id": 374,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "8235:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "8251:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "8270:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8270:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8234:51:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "8302:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 347,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8302:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8301:6:0"
									},
									"scope": 675,
									"src": "8213:252:0",
									"stateMutability": "nonpayable",
									"superFunction": 51,
									"visibility": "public"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "8946:117:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 384,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "8965:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "8965:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 386,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "8977:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 394,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "9023:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 387,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "8986:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 390,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 388,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 690,
																				"src": "8998:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "8998:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8986:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 392,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 391,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "9010:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8986:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 93,
																"src": "8986:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8986:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 383,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "8956:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8956:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "8956:79:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9052:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 382,
												"id": 399,
												"nodeType": "Return",
												"src": "9045:11:0"
											}
										]
									},
									"documentation": "@dev Atomically increases the allowance granted to `spender` by the caller.\n     * This is an alternative to `approve` that can be used as a mitigation for\nproblems described in `IERC20.approve`.\n     * Emits an `Approval` event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.",
									"id": 401,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "8887:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "8904:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8886:37:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "8940:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 380,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8940:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8939:6:0"
									},
									"scope": 675,
									"src": "8860:203:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "9641:122:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 411,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "9660:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9660:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 413,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "9672:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 421,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "9718:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 414,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "9681:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 417,
																		"indexExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 415,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 690,
																				"src": "9693:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "9693:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9681:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 419,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 418,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "9705:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9681:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 118,
																"src": "9681:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9681:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 410,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "9651:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9651:84:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "9651:84:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9752:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 409,
												"id": 426,
												"nodeType": "Return",
												"src": "9745:11:0"
											}
										]
									},
									"documentation": "@dev Atomically decreases the allowance granted to `spender` by the caller.\n     * This is an alternative to `approve` that can be used as a mitigation for\nproblems described in `IERC20.approve`.\n     * Emits an `Approval` event indicating the updated allowance.\n     * Requirements:\n     * - `spender` cannot be the zero address.\n- `spender` must have allowance for the caller of at least\n`subtractedValue`.",
									"id": 428,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "9577:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "9594:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9594:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9576:42:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "9635:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 407,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9635:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9634:6:0"
									},
									"scope": 675,
									"src": "9550:213:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "10316:343:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 438,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "10334:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10352:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10344:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10344:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10334:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10356:39:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 437,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															693,
															694
														],
														"referencedDeclaration": 694,
														"src": "10326:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10326:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "10326:70:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 447,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "10414:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10435:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10427:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10427:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10414:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10439:37:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															693,
															694
														],
														"referencedDeclaration": 694,
														"src": "10406:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10406:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "10406:71:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 455,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "10488:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 457,
														"indexExpression": {
															"argumentTypes": null,
															"id": 456,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "10498:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10488:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 462,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "10530:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 458,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "10508:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 460,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 459,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "10518:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10508:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 118,
															"src": "10508:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10508:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10488:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "10488:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 466,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "10547:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 468,
														"indexExpression": {
															"argumentTypes": null,
															"id": 467,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "10557:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10547:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 473,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "10595:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 469,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "10570:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 471,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 470,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 432,
																	"src": "10580:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10570:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 93,
															"src": "10570:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10570:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10547:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "10547:55:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 478,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "10626:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 479,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 432,
															"src": "10634:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 480,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "10645:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 477,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "10617:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10617:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 482,
												"nodeType": "EmitStatement",
												"src": "10612:40:0"
											}
										]
									},
									"documentation": "@dev Moves tokens `amount` from `sender` to `recipient`.\n     * This is internal function is equivalent to `transfer`, and can be used to\ne.g. implement automatic token fees, slashing mechanisms, etc.\n     * Emits a `Transfer` event.\n     * Requirements:\n     * - `sender` cannot be the zero address.\n- `recipient` cannot be the zero address.\n- `sender` must have a balance of at least `amount`.",
									"id": 484,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "10256:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "10272:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10272:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "10291:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10255:51:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10316:0:0"
									},
									"scope": 675,
									"src": "10237:422:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "10986:245:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 492,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "11004:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11023:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11015:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11015:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11004:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11027:33:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 491,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															693,
															694
														],
														"referencedDeclaration": 694,
														"src": "10996:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10996:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "10996:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 500,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "11072:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 503,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 488,
																"src": "11104:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 501,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "11087:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 93,
															"src": "11087:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11087:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11072:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "11072:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 507,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "11121:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 509,
														"indexExpression": {
															"argumentTypes": null,
															"id": 508,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "11131:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11121:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 514,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 488,
																"src": "11165:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 510,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "11142:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 512,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 511,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 486,
																	"src": "11152:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11142:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 93,
															"src": "11142:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11142:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11121:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "11121:51:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11204:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11196:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11196:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 522,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "11208:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 523,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "11217:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 518,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "11187:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11187:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "EmitStatement",
												"src": "11182:42:0"
											}
										]
									},
									"documentation": "@dev Creates `amount` tokens and assigns them to `account`, increasing\nthe total supply.\n     * Emits a `Transfer` event with `from` set to the zero address.\n     * Requirements\n     * - `to` cannot be the zero address.",
									"id": 527,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "10944:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10944:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "10961:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10943:33:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10986:0:0"
									},
									"scope": 675,
									"src": "10929:302:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "11607:244:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 535,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 529,
																"src": "11625:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11644:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11636:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11636:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11625:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11648:35:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															693,
															694
														],
														"referencedDeclaration": 694,
														"src": "11617:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11617:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "11617:67:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 543,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "11695:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 546,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "11727:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 544,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "11710:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 118,
															"src": "11710:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 547,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11710:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11695:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "11695:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 550,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "11743:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 552,
														"indexExpression": {
															"argumentTypes": null,
															"id": 551,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "11753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11743:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 557,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "11787:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 553,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "11764:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 555,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 554,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 529,
																	"src": "11774:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11764:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 118,
															"src": "11764:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11764:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11743:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 560,
												"nodeType": "ExpressionStatement",
												"src": "11743:50:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 562,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "11817:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11834:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11826:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11826:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 566,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "11838:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 561,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "11808:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11808:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "EmitStatement",
												"src": "11803:41:0"
											}
										]
									},
									"documentation": "@dev Destroys `amount` tokens from `account`, reducing the\ntotal supply.\n     * Emits a `Transfer` event with `to` set to the zero address.\n     * Requirements\n     * - `account` cannot be the zero address.\n- `account` must have at least `amount` tokens.",
									"id": 570,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "11566:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "11583:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11565:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11607:0:0"
									},
									"scope": 675,
									"src": "11551:300:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "12350:255:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 580,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "12368:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12385:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12377:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12377:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12368:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12389:38:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 579,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															693,
															694
														],
														"referencedDeclaration": 694,
														"src": "12360:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12360:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "12360:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 589,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "12446:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12465:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12457:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12457:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12446:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12469:36:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 588,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															693,
															694
														],
														"referencedDeclaration": 694,
														"src": "12438:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12438:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "12438:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 597,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "12517:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 600,
															"indexExpression": {
																"argumentTypes": null,
																"id": 598,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "12529:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12517:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 601,
														"indexExpression": {
															"argumentTypes": null,
															"id": 599,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "12536:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12517:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 602,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "12547:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12517:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "12517:35:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 606,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "12576:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 607,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "12583:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 608,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "12592:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 605,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "12567:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12567:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "EmitStatement",
												"src": "12562:36:0"
											}
										]
									},
									"documentation": "@dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n     * This is internal function is equivalent to `approve`, and can be used to\ne.g. set automatic allowances for certain subsystems, etc.\n     * Emits an `Approval` event.\n     * Requirements:\n     * - `owner` cannot be the zero address.\n- `spender` cannot be the zero address.",
									"id": 612,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "12294:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "12309:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "12326:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12293:47:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12350:0:0"
									},
									"scope": 675,
									"src": "12276:329:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "12843:124:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 620,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "12859:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 621,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "12868:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 570,
														"src": "12853:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12853:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "12853:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 625,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "12894:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 626,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "12903:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "12903:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 635,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "12952:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 628,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "12915:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 630,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 629,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 614,
																			"src": "12927:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12915:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 633,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 631,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "12936:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "12936:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "12915:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 118,
																"src": "12915:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12915:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 624,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "12885:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12885:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "ExpressionStatement",
												"src": "12885:75:0"
											}
										]
									},
									"documentation": "@dev Destoys `amount` tokens from `account`.`amount` is then deducted\nfrom the caller's allowance.\n     * See `_burn` and `_approve`.",
									"id": 640,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "_burnFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "12801:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "12818:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12800:33:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12843:0:0"
									},
									"scope": 675,
									"src": "12782:185:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "13073:134:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 653,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "13083:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 657,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 654,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "13095:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "13095:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13083:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 658,
														"indexExpression": {
															"argumentTypes": null,
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "13107:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13083:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 659,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "13118:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13083:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "13083:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 662,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "13141:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "13141:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 664,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "13153:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 665,
																	"name": "_allowances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "13162:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 668,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 666,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 690,
																		"src": "13174:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "13174:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13162:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 670,
															"indexExpression": {
																"argumentTypes": null,
																"id": 669,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 642,
																"src": "13186:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13162:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 671,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13140:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,address,uint256)"
													}
												},
												"functionReturnParameters": 652,
												"id": 672,
												"nodeType": "Return",
												"src": "13133:62:0"
											}
										]
									},
									"documentation": null,
									"id": 674,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "approveTest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "12998:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "13015:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13015:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "12997:32:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "13046:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "13055:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13055:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "13064:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13064:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "13045:27:0"
									},
									"scope": 675,
									"src": "12977:230:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 676,
							"src": "4939:8270:0"
						}
					],
					"src": "0:13210:0"
				},
				"id": 0
			}
		}
	}
}